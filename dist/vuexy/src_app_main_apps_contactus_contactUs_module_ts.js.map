{"version":3,"file":"src_app_main_apps_contactus_contactUs_module_ts.js","mappings":"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","sources":["./src/app/main/apps/contactus/contactUs-management/contactus-managementcomponent.ts","./src/app/main/apps/contactus/contactUs-management/contactus-management.component.html","./src/app/main/apps/contactus/contactUs.module.ts","./src/app/main/apps/contactus/contactus.service.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { FlatpickrOptions } from 'ng2-flatpickr';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { UserEditService } from '../../user/user-edit/user-edit.service';\nimport { ContactusService } from '../contactus.service';\n// import { ContentManagementService } from '../content.service';\n\n@Component({\n  selector: 'app-contactus-management',\n  templateUrl: './contactus-management.component.html',\n  styleUrls: ['./contactus-management.component.scss']\n})\nexport class ContactUsComponent implements OnInit {\n // Public\n public url = this.router.url;\n public urlLastValue;\n public rows;\n public currentRow;\n public tempRow;\n public avatarImage: string;\n public contactData:any = [];\n public contactForm = new FormGroup({\n  mailingAddress: new FormControl(''),\n  description: new FormControl(''),\n  corporateAddress: new FormControl(''),\n});\n \n @ViewChild('accountForm') accountForm: NgForm;\n\n public birthDateOptions: FlatpickrOptions = {\n   altInput: true\n };\n\n public selectMultiLanguages = ['English', 'Spanish', 'French', 'Russian', 'German', 'Arabic', 'Sanskrit'];\n public selectMultiLanguagesSelected = [];\n\n // Private\n private _unsubscribeAll: Subject<any>;\n  currentUser: any;\n  isViewer: boolean;\n\n /**\n  * Constructor\n  *\n  * @param {Router} router\n  * @param {UserEditService} _userEditService\n  */\n constructor(private router: Router, private _userEditService: UserEditService,private contactService:ContactusService) {\n   this._unsubscribeAll = new Subject();\n   this.urlLastValue = this.url.substr(this.url.lastIndexOf('/') + 1);\n }\n\n // Public Methods\n // -----------------------------------------------------------------------------------------------------\n\n /**\n  * Reset Form With Default Values\n  */\n resetFormWithDefaultValues() {\n   this.accountForm.resetForm(this.tempRow);\n }\n\n /**\n  * Upload Image\n  *\n  * @param event\n  */\n uploadImage(event: any) {\n   if (event.target.files && event.target.files[0]) {\n     let reader = new FileReader();\n\n     reader.onload = (event: any) => {\n       this.avatarImage = event.target.result;\n     };\n\n     reader.readAsDataURL(event.target.files[0]);\n   }\n }\n\n\n // Lifecycle Hooks\n // -----------------------------------------------------------------------------------------------------\n /**\n  * On init\n  */\n ngOnInit(): void {\n  this.getContactDetails();\n  this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  this.isViewer=this.currentUser.user.role === 'Viewer';\n }\n\n getContactDetails() {\n  this.contactService.getContactDetails().subscribe(res=>{\n    if(res.length > 0) {\n      this.contactData = res[0];\n      this.contactForm.patchValue({\n        mailingAddress: res[0].mailingAddress,\n        description: res[0].description,\n        corporateAddress: res[0].corporateAddress,\n      })\n    }\n  })\n }\n\n submit(contactForm) {\n  if(this.contactData._id)\n     this.updateContact(contactForm);\n  else\n     this.saveContact(contactForm);\n }\n\n saveContact(contactForm) {\n  this.contactService.saveContact(contactForm.value).subscribe(res=>{\n    this.contactForm.patchValue({\n      mailingAddress: res.mailingAddress,\n      description: res.description,\n      corporateAddress: res.corporateAddress,\n    })\n  })\n }\n\n updateContact(contactForm) {\n  this.contactService.updateContact(this.contactData._id,contactForm.value).subscribe(res=>{\n    // show notification here.\n  })\n }\n\n /**\n  * On destroy\n  */\n ngOnDestroy(): void {\n   // Unsubscribe from all subscriptions\n   this._unsubscribeAll.next();\n   this._unsubscribeAll.complete();\n }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- users edit start -->\n    <section class=\"app-user-edit\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <ul ngbNav #nav=\"ngbNav\" class=\"nav nav-pills\">\n            <li ngbNavItem>\n              <a ngbNavLink class=\"d-flex align-items-center\">\n                <i data-feather=\"info\" class=\"mr-sm-50\"></i><span class=\"d-none d-sm-block\">Contact Us</span></a\n              >\n              <ng-template ngbNavContent>\n                <!-- Information Tab starts -->\n                <div class=\"tab-pane\" id=\"information\" aria-labelledby=\"information-tab\" role=\"tabpanel\">\n                  <!-- users edit Info form start  -->\n                  <form class=\"form-validate\" [formGroup]=\"contactForm\">\n                    <div class=\"row mt-1\">\n                      <div class=\"col-12\">\n                        <h4 class=\"mb-1\">\n                          <i data-feather=\"edit\" [size]=\"16\" class=\"mr-75 font-medium-4\"></i>\n                          <span class=\"align-middle\">Contact us information</span>\n                        </h4>\n                      </div>\n                      <div class=\"col-lg-6 col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"website\">Email Address</label>\n                          <input\n                            id=\"website\"\n                            type=\"mail\"\n                            class=\"form-control\"\n                            placeholder=\"abc@example.com\"\n                            name=\"Mailing Address\"\n                            formControlName=\"mailingAddress\"\n                          />\n                        </div>\n                      </div>\n                     \n                      <div class=\"col-lg-6 col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"website\">Corporate Address</label>\n                            <input id=\"mobile\" type=\"text\" formControlName=\"corporateAddress\" placeholder=\"Address\" class=\"form-control\" name=\"phone\" />\n                        </div>\n                      </div>\n                      <div class=\"col-lg-6 col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"country\">Description</label>\n                          <textarea\n                            id=\"country\"\n                            type=\"text\"\n                            class=\"form-control\"\n                            name=\"country\"\n                            formControlName=\"description\"\n                            placeholder=\"United States\"\n                          ></textarea>\n                        </div>\n                      </div>\n                      <div *ngIf=\"!isViewer\" class=\"col-12 d-flex flex-sm-row flex-column mt-2\">\n                        <button type=\"submit\" (click)=\"submit(contactForm)\" class=\"btn btn-primary mb-1 mb-sm-0 mr-0 mr-sm-1\" rippleEffect>\n                          Save Changes\n                        </button>\n                        <button type=\"reset\" class=\"btn btn-outline-secondary\" rippleEffect>Reset</button>\n                      </div>\n                    </div>\n                  </form>\n                  <!-- users edit Info form ends -->\n                </div>\n                <!-- Information Tab ends -->\n              </ng-template>\n            </li>\n          </ul>\n          <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n        </div>\n      </div>\n    </section>\n    <!-- users edit ends -->\n    <div class=\"row\">\n        <!-- User Card starts-->\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card user-card\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-12 d-flex flex-column justify-content-between border-container-lg\">\n                  <div class=\"user-avatar-section\">\n                    <div class=\"d-flex justify-content-start\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"user-info-wrapper\">\n                    <div class=\"d-flex flex-wrap\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"mail\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Email:</span>\n                      </div>\n                      <p class=\"card-text mb-0\">{{contactForm.get('mailingAddress').value}}</p>\n                    </div>\n                    <div class=\"d-flex flex-wrap my-50\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"star\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Corporate Address:</span>\n                      </div>\n                      <p class=\"card-text mb-0\">{{contactForm.get('corporateAddress').value}}</p>\n                    </div>\n                    <div class=\"d-flex flex-wrap my-50\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"flag\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Description:</span>\n                      </div>\n                      <p class=\"card-text mb-0\">{{contactForm.get('description').value}}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /User Card Ends-->\n      </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { InvoiceModule } from 'app/main/apps/invoice/invoice.module';\n\nimport { UserEditService } from 'app/main/apps/user/user-edit/user-edit.service';\n\nimport { ContactUsComponent } from './contactUs-management/contactus-managementcomponent';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'contact-us',\n    component: ContactUsComponent,\n    resolve: {\n    //   uls: CountryListService\n    },\n    data: { animation: 'ContactUsComponent' }\n  },\n  // {\n  //   path: 'user-view/:id',\n  //   component: UserViewComponent,\n  //   resolve: {\n  //     data: UserViewService,\n  //     InvoiceListService\n  //   },\n  //   data: { path: 'view/:id', animation: 'UserViewComponent' }\n  // },\n  // {\n  //   path: 'user-edit/:id',\n  //   component: UserEditComponent,\n  //   resolve: {\n  //     ues: UserEditService\n  //   },\n  //   data: { animation: 'UserEditComponent' }\n  // },\n  // {\n  //   path: 'user-view',\n  //   redirectTo: '/apps/user/user-view/2' // Redirection\n  // },\n  // {\n  //   path: 'user-edit',\n  //   redirectTo: '/apps/user/user-edit/2' // Redirection\n  // }\n];\n\n@NgModule({\n  declarations: [ContactUsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Ng2FlatpickrModule,\n    NgxDatatableModule,\n    CorePipesModule,\n    CoreDirectivesModule,\n    InvoiceModule,\n    CoreSidebarModule\n  ],\n  providers: [UserEditService]\n})\nexport class ContactUSModule{}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactusService {\n\n  constructor(private http:HttpClient) { }\n\n  saveContact(data) {\n    return this.http.post<any>(`${environment.apiUrl}/admin/postContactusdetails`,data)\n  }\n\n  getContactDetails() {\n    return this.http.get<any>(`${environment.apiUrl}/admin/getContactusdetails/`)\n  }\n\n  updateContact(id,data) {\n    return this.http.put<any>(`${environment.apiUrl}/admin/updateContactusdetails/${id}`,data)\n  }\n}\n"],"names":["FormControl","FormGroup","Subject","i0","ctx_r3","ContactUsComponent","router","_userEditService","contactService","url","mailingAddress","description","corporateAddress","altInput","_unsubscribeAll","urlLastValue","substr","lastIndexOf","accountForm","resetForm","tempRow","event","target","files","reader","FileReader","onload","avatarImage","result","readAsDataURL","getContactDetails","currentUser","JSON","parse","localStorage","getItem","isViewer","user","role","subscribe","res","length","contactData","contactForm","patchValue","_id","updateContact","saveContact","value","next","complete","selectors","viewQuery","CommonModule","FormsModule","RouterModule","NgbModule","NgSelectModule","NgxDatatableModule","Ng2FlatpickrModule","CoreCommonModule","CoreDirectivesModule","CorePipesModule","CoreSidebarModule","InvoiceModule","UserEditService","routes","path","component","resolve","data","animation","ContactUSModule","imports","forChild","declarations","i1","environment","ContactusService","http","post","apiUrl","get","id","put","factory","providedIn"],"sourceRoot":"webpack:///"}