{"version":3,"file":"src_app_main_apps_questionnaire_questionnaire_module_ts.js","mappings":"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","sources":["./src/app/main/apps/questionnaire/question-list.service.ts","./src/app/main/apps/questionnaire/question-list/add-new-question/add-new-question.component.ts","./src/app/main/apps/questionnaire/question-list/add-new-question/add-new-question.component.html","./src/app/main/apps/questionnaire/question-list/question-list.component.ts","./src/app/main/apps/questionnaire/question-list/question-list.component.html","./src/app/main/apps/questionnaire/questionnaire-details.service.ts","./src/app/main/apps/questionnaire/questionnaire-details/questionnaire-details.component.html","./src/app/main/apps/questionnaire/questionnaire-details/questionnaire-details.component.ts","./src/app/main/apps/questionnaire/questionnaire.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionListService {\n  \n  public rows: any;\n  public questionList: BehaviorSubject<any>;\n\n \n  constructor(private _httpClient: HttpClient) {\n    this.questionList = new BehaviorSubject({});\n  }\n\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getAllQuestions()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n\n  getAllQuestions(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(`${environment.apiUrl}/admin/getAllQuestion`).subscribe((response: any) => {\n        resolve(response);\n      });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n// import { setInputValues } from '@angularclass/hmr';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { QuestionnaireDetailsService } from '../../questionnaire-details.service';\n\n@Component({\n  selector: 'app-add-new-question',\n  templateUrl: './add-new-question.component.html',\n  styleUrls: ['./add-new-question.component.scss']\n})\nexport class AddNewQuestionComponent implements OnInit {\n\n  public questionData:any;\n  public questionForm = this.fb.group({\n    questionNo: ['', [Validators.required, Validators.minLength(1)]],\n    question: ['', [Validators.required, Validators.minLength(1)]],\n    options:this.fb.array([]),\n  });\n\n  constructor(private _coreSidebarService: CoreSidebarService,private questionService:QuestionnaireDetailsService,private fb:FormBuilder) {}\n\n  ngOnInit(): void {\n    this.setDefaultValue();\n    this.getQuestionDetails();\n  }\n\n  get options() {\n    return this.questionForm.get('options') as FormArray;\n  } \n\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  addOptions() {\n    let options = this.questionForm.get('options') as FormArray;\n    options.push(this.fb.group({option:['']}));\n  }\n\n  deleteOption(index: number) {\n    this.options.removeAt(index);\n  } \n\n  setDefaultValue() {\n    this.addOptions();\n  }\n\n \n  submit(form) {\n\n    console.log(\"thissvalue\",form.value);\n    if (form.valid && (this.questionData && this.questionData._id)) {\n      this.questionService.updateQuestionData(this.questionData._id,form.value).subscribe(res=>{\n        console.log(\"res------\",res);\n        window.location.reload()\n      }) \n      this.toggleSidebar('new-user-sidebar');\n    }else {\n\n      this.questionService.addQuestion(form.value).subscribe(res=>{\n        window.location.reload()\n      },error=>{\n        alert(error);\n      }) \n      this.toggleSidebar('new-user-sidebar');\n     \n    }\n  }\n\n  getQuestionDetails() {\n    this.questionService.changeQuestionData.subscribe(res=>{\n      if(res) {\n        this.questionData = res;\n        this.questionForm.patchValue({\n          questionNo: res['questionNo'],\n          question: res['question'],\n          // options:this.questionData['options'],\n        })\n        this.setValue(res);\n      } \n    })\n  }\n\n  setValue(data) {\n    let options = this.questionForm.get('options') as FormArray;\n    this.options.removeAt(0);\n    for(let i=0;i<data['options'].length;i++) {\n      options.push(this.fb.group({option:data['options'][i].option}));\n    }\n  }\n}\n","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n      <div class=\"modal-dialog\">\n        <form class=\"add-new-user modal-content pt-0\" [formGroup]=\"questionForm\">\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n            (click)=\"toggleSidebar('new-user-sidebar')\"\n          >\n          </button>\n          <div class=\"modal-header mb-1\">\n            <h5 *ngIf=\"!questionData?._id\" class=\"modal-title\" id=\"exampleModalLabel\">New Question</h5>\n            <h5 *ngIf=\"questionData?._id\" class=\"modal-title\" id=\"exampleModalLabel\">Update Question {{ questionData.questionNo}} </h5>\n          </div>\n          <div class=\"modal-body flex-grow-1\">\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"basic-icon-default-fullname\">Question Number</label>\n              <input\n                type=\"number\"\n                class=\"form-control dt-full-name\"\n                id=\"basic-icon-default-fullname\"\n                placeholder=\"Example 1\"\n                name=\"user-fullname\"\n                formControlName=\"questionNo\"\n                required\n                aria-label=\"John Doe\"\n                aria-describedby=\"basic-icon-default-fullname2\"\n              />\n        \n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\" for=\"basic-icon-default-uname\">Question Name</label>\n              <input\n                type=\"text\"\n                id=\"basic-icon-default-uname\"\n                class=\"form-control dt-uname\"\n                placeholder=\"What is Your Hobby\"\n                aria-label=\"jdoe1\"\n                aria-describedby=\"basic-icon-default-uname2\"\n                name=\"user-name\"\n                formControlName=\"question\"\n                required\n              />\n            </div>\n            <div>\n              <button (click)=\"addOptions()\"  type=\"button\" class=\"btn icon-btn btn-sm hide-arrow green\" rippleEffect>\n                <span [data-feather]=\"'plus-square'\" [class]=\"'cursor-pointer'\"></span>\n               </button>\n               <div class=\"form-group\" formArrayName=\"options\" *ngFor=\"let option of questionForm.get('options')['controls']; let i = index;\">\n                 <label class=\"form-label\" for=\"basic-icon-default-email\">Add Options</label>\n                 <div [formGroupName]=\"i\" class=\"options\">\n                   <input\n                   type=\"text\"\n                   id=\"basic-icon-default-email\"\n                   class=\"form-control dt-email\"\n                   placeholder=\"Option\"\n                   aria-label=\"john.doe@example.com\"\n                   aria-describedby=\"basic-icon-default-email2\"\n                   name=\"user-email\"\n                   formControlName=\"option\"\n                   required\n                 />\n                 <button (click)=\"deleteOption(i)\" type=\"button\" class=\"btn icon-btn btn-sm hide-arrow red\" rippleEffect>\n                   <span [data-feather]=\"'trash-2'\" [class]=\"'cursor-pointer'\"></span>\n                 </button>\n                 </div>\n               </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit(questionForm)\" rippleEffect>Submit</button>\n            <button\n              type=\"reset\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"toggleSidebar('new-user-sidebar')\"\n              rippleEffect\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { QuestionListService } from '../question-list.service';\nimport { QuestionnaireDetailsService } from '../questionnaire-details.service';\n\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.scss']\n})\nexport class QuestionListComponent implements OnInit {\n\n  public sidebarToggleRef = false;\n  public rows;\n  public selectedOption = 10;\n  public ColumnMode = ColumnMode;\n  public temp = [];\n  public previousRoleFilter = '';\n  public previousPlanFilter = '';\n  public previousStatusFilter = '';\n\n  public selectRole: any = [\n    { name: 'All', value: '' },\n    { name: 'Admin', value: 'Admin' },\n    { name: 'Author', value: 'Author' },\n    { name: 'Editor', value: 'Editor' },\n    { name: 'Maintainer', value: 'Maintainer' },\n    { name: 'Subscriber', value: 'Subscriber' }\n  ];\n\n  public selectPlan: any = [\n    { name: 'All', value: '' },\n    { name: 'Basic', value: 'Basic' },\n    { name: 'Company', value: 'Company' },\n    { name: 'Enterprise', value: 'Enterprise' },\n    { name: 'Team', value: 'Team' }\n  ];\n\n  public selectStatus: any = [\n    { name: 'All', value: '' },\n    { name: 'Pending', value: 'Pending' },\n    { name: 'Active', value: 'Active' },\n    { name: 'Inactive', value: 'Inactive' }\n  ];\n\n  public selectedRole = [];\n  public selectedPlan = [];\n  public selectedStatus = [];\n  public searchValue = '';\n\n  // Decorator\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n\n  // Private\n  private tempData = [];\n  private _unsubscribeAll: Subject<any>;\n  currentUser: any;\n  isViewer: boolean;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreConfigService} _coreConfigService\n   * @param {UserListService} _userListService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _questionsListService: QuestionListService,\n    private _coreSidebarService: CoreSidebarService,\n    private _coreConfigService: CoreConfigService,\n    private questionService:QuestionnaireDetailsService\n  ) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  filterUpdate(event) {\n    // Reset ng-select on search\n    this.selectedRole = this.selectRole[0];\n    this.selectedPlan = this.selectPlan[0];\n    this.selectedStatus = this.selectStatus[0];\n\n    const val = event.target.value.toLowerCase();\n\n    // Filter Our Data\n    const temp = this.tempData.filter(function (d) {\n      return d.fullName.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // Update The Rows\n    this.rows = temp;\n    // Whenever The Filter Changes, Always Go Back To The First Page\n    this.table.offset = 0;\n  }\n\n\n  toggleSidebar(name,row?): void {\n    if(row && row._id) {\n      console.log(\"na,e---\",row);\n      this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n      this.questionService.updateQuestion(row);\n    } else {\n      this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n    }\n    \n  }\n\n \n  filterByRole(event) {\n    const filter = event ? event.value : '';\n    this.previousRoleFilter = filter;\n    this.temp = this.filterRows(filter, this.previousPlanFilter, this.previousStatusFilter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter By Plan\n   *\n   * @param event\n   */\n  filterByPlan(event) {\n    const filter = event ? event.value : '';\n    this.previousPlanFilter = filter;\n    this.temp = this.filterRows(this.previousRoleFilter, filter, this.previousStatusFilter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter By Status\n   *\n   * @param event\n   */\n  filterByStatus(event) {\n    const filter = event ? event.value : '';\n    this.previousStatusFilter = filter;\n    this.temp = this.filterRows(this.previousRoleFilter, this.previousPlanFilter, filter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter Rows\n   *\n   * @param roleFilter\n   * @param planFilter\n   * @param statusFilter\n   */\n  filterRows(roleFilter, planFilter, statusFilter): any[] {\n    // Reset search on select change\n    this.searchValue = '';\n\n    roleFilter = roleFilter.toLowerCase();\n    planFilter = planFilter.toLowerCase();\n    statusFilter = statusFilter.toLowerCase();\n\n    return this.tempData.filter(row => {\n      const isPartialNameMatch = row.role.toLowerCase().indexOf(roleFilter) !== -1 || !roleFilter;\n      const isPartialGenderMatch = row.currentPlan.toLowerCase().indexOf(planFilter) !== -1 || !planFilter;\n      const isPartialStatusMatch = row.status.toLowerCase().indexOf(statusFilter) !== -1 || !statusFilter;\n      return isPartialNameMatch && isPartialGenderMatch && isPartialStatusMatch;\n    });\n  }\n\n\n  ngOnInit(): void {\n    // Subscribe config change\n    this.getAllQuestions();\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.isViewer=this.currentUser.user.role === 'Viewer';\n  }\n\n  getAllQuestions() {\n    this._questionsListService.getAllQuestions().then((questions) => {\n      this.rows = questions;\n    });\n  }\n\n  deleteQuestion(id) {\n    this.questionService.deleteQuestion(id).subscribe(res=>{\n      window.location.reload()\n    })\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n      <!-- User List -->\n      <section class=\"users-list-wrapper\">\n        <div class=\"card\">\n          <div class=\"row\">\n            <div class=\"col-md-6 col-12\">\n              <div class=\"d-flex justify-content-between align-items-center m-1\">\n                <label class=\"d-flex align-items-center\"\n                  >Show\n                  <select class=\"form-control mx-25\" [(ngModel)]=\"selectedOption\">\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                  entries</label\n                >\n              </div>\n            </div>\n            <div class=\"col-md-6 col-12 d-flex justify-content-start justify-content-md-end\">\n              <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pb-md-0\">\n                <!-- <label class=\"d-flex align-items-center ml-1 ml-md-0\"\n                  >Search:<input\n                    [(ngModel)]=\"searchValue\"\n                    name=\"searchValue\"\n                    type=\"search\"\n                    class=\"form-control ml-25\"\n                    (keyup)=\"filterUpdate($event)\"\n                    (search)=\"filterUpdate($event)\"\n                /></label> -->\n                <button *ngIf=\"!isViewer\" class=\"btn btn-primary ml-1\" rippleEffect (click)=\"toggleSidebar('new-user-sidebar')\">\n                  <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i\n                  ><span class=\"d-none d-sm-inline-block\">Add New Question</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ngx-datatable\n            [rows]=\"rows\"\n            [rowHeight]=\"50\"\n            class=\"bootstrap core-bootstrap\"\n            [limit]=\"selectedOption\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [scrollbarH]=\"true\"\n          >\n            <ngx-datatable-column name=\"Question No\" prop=\"questionNo\" [width]=\"100\">\n              <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                <div class=\"d-flex align-items-center pl-4\">\n                  <div class=\"cell-line-height\">\n                    <a  class=\"font-medium-1 d-block\"\n                      ><span class=\"font-weight-bold\">{{ row.questionNo }}</span></a\n                    >\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Question Name\" prop=\"question\" [width]=\"200\">\n            </ngx-datatable-column>\n        \n            <ngx-datatable-column name=\"Options\"  [width]=\"100\">\n              <ng-template let-answers=\"value\" ngx-datatable-cell-template let-row=\"row\">\n                <div ngbDropdown container=\"body\">\n                  <select class=\"form-control mx-10\" name=\"options\" >\n                    <option *ngFor=\"let answer of row.options\" >{{ answer.option }}</option>\n                  </select>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n            <ngx-datatable-column name=\"Actions\" [width]=\"40\" [sortable]=\"false\">\n              <ng-template ngx-datatable-cell-template let-row=\"row\">\n                <div ngbDropdown container=\"body\">\n                  <button ngbDropdownToggle type=\"button\" class=\"btn icon-btn btn-sm hide-arrow\" rippleEffect>\n                    <span [data-feather]=\"'more-vertical'\" [class]=\"'cursor-pointer'\"></span>\n                  </button>\n                  <div ngbDropdownMenu   >\n                    <a routerLink=\"/apps/questionnaire/questionnaire-details/{{ row.questionNo }}\"\n                    ngbDropdownItem\n                      ><span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span> Details</a\n                    >\n                    <a  (click)=\"toggleSidebar('new-user-sidebar',row)\" ngbDropdownItem *ngIf=\"!isViewer\"\n                      ><span [data-feather]=\"'edit'\" [size]=\"16\" [class]=\"'mr-50'\"></span> Edit</a\n                    >\n                    <a href=\"javascript:;\" ngbDropdownItem (click)=\"deleteQuestion(row._id)\" *ngIf=\"!isViewer\"\n                      ><span [data-feather]=\"'trash'\" [size]=\"16\" [class]=\"'mr-50'\"></span> Delete</a\n                    >\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </section>\n      <!--/ User List -->\n    </div>\n  \n    <!-- New User Sidebar -->\n    <core-sidebar\n      class=\"modal modal-slide-in sidebar-todo-modal fade\"\n      name=\"new-user-sidebar\"\n      overlayClass=\"modal-backdrop\"\n    >\n    <app-add-new-question></app-add-new-question>\n    </core-sidebar>\n    <!--/ New User Sidebar -->\n  </div>\n  ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionnaireDetailsService {\n\n  constructor(private http: HttpClient) { }\n  question = new BehaviorSubject('');\n  changeQuestionData = this.question.asObservable();\n\n  updateQuestion(data){\n    this.question.next(data);\n  }\n\n  getQuestionDetailsQNo(questioNo) {\n    return this.http.get<any>(`${environment.apiUrl}/admin/getQuestionByNo/${questioNo}`);\n  }\n\n  deleteQuestion(id) {\n    return this.http.delete<any>(`${environment.apiUrl}/admin/question/${id}`);\n  }\n\n  addQuestion(data) {\n    return this.http.post<any>(`${environment.apiUrl}/admin/addQuestion`,data);\n  }\n\n  updateQuestionData(id,data) {\n    console.log(\"updateQuestionData\",id,data);\n    return this.http.put<any>(`${environment.apiUrl}/admin/question/${id}`,data);\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n        <section class=\"users-list-wrapper\">\n            <div class=\"card\">\n                <div class=\"card-header d-flex justify-content-between align-items-start pb-1\">\n                  <div>\n                    <h4 class=\"card-title mb-25\">Question Details</h4>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"d-inline-block mr-1\">\n                    <div class=\"d-flex align-items-center\">\n                      <h6 class=\"mb-0 text-color\">Question Number</h6> : \n                    </div>\n                  </div>\n                  <div class=\"d-inline-block\">\n                    <div class=\"d-flex align-items-center\">\n                      <h6 class=\"mb-0\">{{questionDetails.questionNo}}</h6>\n                    </div>\n                  </div>\n                  <br>\n                      <div class=\"d-inline-block mr-1\">\n                        <div class=\"d-flex align-items-center\">\n                          <h6 class=\"mb-0 text-color\">Question Name</h6> : \n                        </div>\n                      </div>\n                      <div class=\"d-inline-block\">\n                        <div class=\"d-flex align-items-center\">\n                          <h6 class=\"mb-0\">{{questionDetails.question}}</h6>\n                        </div>\n                      </div>\n                      <br>\n                      <div class=\"d-inline-block mr-1\">\n                        <div class=\"d-flex align-items-center\">\n                          <h6 class=\"mb-0 text-color\">Answer</h6> : \n                        </div>\n                      </div>\n                      <div class=\"d-inline-block \">\n                        <div class=\"d-flex align-items-center\">\n                            <select class=\"form-control col-sm-100\" name=\"options\" >\n                                <option *ngFor=\"let answer of questionDetails.options\" >{{ answer.option }}</option>\n                            </select>\n                        </div>\n                      </div>\n                      <!-- <div *ngIf=\"questionDetails.subQuestions.length > 0\">\n                        <br>\n                        <div class=\"d-inline-block mr-1\">\n                            <div class=\"d-flex align-items-center\">\n                            <h6 class=\"mb-0 text-color\">Answer</h6> : \n                            </div>\n                        </div>\n                        <div class=\"d-inline-block mr-1\">\n                            <div class=\"d-flex align-items-center\">\n                                <select class=\"form-control\" name=\"options\" >\n                                    <option *ngFor=\"let answer of questionDetails.options\" >{{ answer.option }}</option>\n                                </select>\n                            </div>\n                        </div>\n                      </div> -->\n                    </div>\n                </div>\n        </section>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionnaireDetailsService } from '../questionnaire-details.service';\n\n@Component({\n  selector: 'app-questionnaire-details',\n  templateUrl: './questionnaire-details.component.html',\n  styleUrls: ['./questionnaire-details.component.scss']\n})\nexport class QuestionnaireDetailsComponent implements OnInit {\n\n  public questionNo:String = '';\n  public questionDetails:any;\n  constructor(private questionDetailsSrv:QuestionnaireDetailsService,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.questionNo = this.route.snapshot.paramMap.get('id');\n    this.getQuestionDetailsQNo(this.questionNo)\n\n  }\n\n  getQuestionDetailsQNo(qNo) {\n    this.questionDetailsSrv.getQuestionDetailsQNo(qNo).subscribe(res=>{\n      console.log(\"res----\",res[0]);\n      this.questionDetails = res[0]\n    })\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { InvoiceModule } from 'app/main/apps/invoice/invoice.module';\n\nimport { QuestionListComponent } from './question-list/question-list.component';\nimport { QuestionListService } from './question-list.service';\nimport { AddNewQuestionComponent } from './question-list/add-new-question/add-new-question.component';\nimport { QuestionnaireDetailsComponent } from './questionnaire-details/questionnaire-details.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'questions-list',\n    component: QuestionListComponent,\n    resolve: {\n      uls: QuestionListService\n    },\n    data: { animation: 'ReportsListComponent' }\n  },\n  {\n    path: 'questionnaire-details/:id',\n    component: QuestionnaireDetailsComponent,\n    data: { path: 'view/:id', animation: 'QuestionnaireDetailsComponent' }\n  },\n  // {\n  //   path: 'user-edit/:id',\n  //   component: UserEditComponent,\n  //   resolve: {\n  //     ues: UserEditService\n  //   },\n  //   data: { animation: 'UserEditComponent' }\n  // },\n];\n\n@NgModule({\n  declarations: [QuestionListComponent, AddNewQuestionComponent, QuestionnaireDetailsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Ng2FlatpickrModule,\n    NgxDatatableModule,\n    CorePipesModule,\n    CoreDirectivesModule,\n    InvoiceModule,\n    CoreSidebarModule\n  ],\n  providers: [QuestionListService]\n})\nexport class QuestionnaireModule {}\n"],"names":["environment","BehaviorSubject","QuestionListService","_httpClient","questionList","route","state","Promise","resolve","reject","all","getAllQuestions","then","get","apiUrl","subscribe","response","i0","factory","providedIn","Validators","ctx_r5","AddNewQuestionComponent","_coreSidebarService","questionService","fb","group","questionNo","required","minLength","question","options","array","setDefaultValue","getQuestionDetails","questionForm","name","getSidebarRegistry","toggleOpen","push","option","index","removeAt","addOptions","form","console","log","value","valid","questionData","_id","updateQuestionData","res","window","location","reload","toggleSidebar","addQuestion","alert","error","changeQuestionData","patchValue","setValue","data","i","length","selectors","decls","vars","consts","template","ctx","ColumnMode","DatatableComponent","Subject","ctx_r4","ctx_r15","row_r12","ctx_r18","QuestionListComponent","_questionsListService","_coreConfigService","_unsubscribeAll","event","selectedRole","selectRole","selectedPlan","selectPlan","selectedStatus","selectStatus","val","target","toLowerCase","temp","tempData","filter","d","fullName","indexOf","rows","table","offset","row","updateQuestion","previousRoleFilter","filterRows","previousPlanFilter","previousStatusFilter","roleFilter","planFilter","statusFilter","searchValue","isPartialNameMatch","role","isPartialGenderMatch","currentPlan","isPartialStatusMatch","status","currentUser","JSON","parse","localStorage","getItem","isViewer","user","questions","id","deleteQuestion","next","complete","viewQuery","QuestionnaireDetailsService","http","asObservable","questioNo","delete","post","put","QuestionnaireDetailsComponent","questionDetailsSrv","snapshot","paramMap","getQuestionDetailsQNo","qNo","questionDetails","CommonModule","FormsModule","RouterModule","NgbModule","NgSelectModule","NgxDatatableModule","Ng2FlatpickrModule","CoreCommonModule","CoreDirectivesModule","CorePipesModule","CoreSidebarModule","InvoiceModule","routes","path","component","uls","animation","QuestionnaireModule","imports","forChild","declarations","i1"],"sourceRoot":"webpack:///"}