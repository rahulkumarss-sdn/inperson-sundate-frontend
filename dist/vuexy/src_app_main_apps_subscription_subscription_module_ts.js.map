{"version":3,"file":"src_app_main_apps_subscription_subscription_module_ts.js","mappings":"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","sources":["./src/app/main/apps/subscription/subscription-management.service.ts","./src/app/main/apps/subscription/subscription-management/add-new-subscription/add-new-subscription.component.html","./src/app/main/apps/subscription/subscription-management/add-new-subscription/add-new-subscription.component.ts","./src/app/main/apps/subscription/subscription-management/subscription-details/subscription-details.component.ts","./src/app/main/apps/subscription/subscription-management/subscription-details/subscription-details.component.html","./src/app/main/apps/subscription/subscription-management/subscription-management.component.ts","./src/app/main/apps/subscription/subscription-management/subscription-management.component.html","./src/app/main/apps/subscription/subscription.module.ts","./src/app/main/apps/subscription/subscription.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubscriptionManagementService {\n\n  public rows: any;\n  public onUserListChanged: BehaviorSubject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {HttpClient} _httpClient\n   */\n  constructor(private _httpClient: HttpClient) {\n    // Set the defaults\n    this.onUserListChanged = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getSubscriptions()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get rows\n   */\n  getSubscriptions(): Promise<any[]> {\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(`${environment.apiUrl}/payment/getAllProducts`).subscribe((response: any) => {\n        this.rows = response;\n        console.log(\"response subscription\", response);\n        this.onUserListChanged.next(this.rows);\n        resolve(this.rows);\n      }, reject);\n    });\n  }\n}","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n      <div class=\"modal-dialog\">\n        <form  *ngIf=\"productData && (productData.actionType=='create' || productData.actionType=='update')\" class=\"add-new-user modal-content pt-0\" [formGroup]=\"productForm\">\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n            (click)=\"toggleSidebar('new-user-sidebar')\"\n          >\n          </button>\n          <div class=\"modal-header mb-1\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Add Plan</h5>\n          </div>\n          <div class=\"modal-body flex-grow-1\" >\n            <div class=\"form-group\" *ngIf=\"productData.actionType=='create'\">\n              <label class=\"form-label\" for=\"basic-icon-default-fullname\">Plan Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control dt-full-name\"\n                id=\"basic-icon-default-fullname\"\n                placeholder=\"Premium Membership\"\n                name=\"user-fullname\"\n                formControlName=\"name\"\n                required\n                aria-label=\"John Doe\"\n                aria-describedby=\"basic-icon-default-fullname2\"\n              />\n         \n            </div>\n\n            <div class=\"form-group\" *ngIf=\"productData.actionType=='create'\">\n              <label class=\"form-label\" for=\"basic-icon-default-fullname\">Description</label>\n              <input\n                type=\"text\"\n                class=\"form-control dt-full-name\"\n                id=\"basic-icon-default-fullname\"\n                placeholder=\"Write Plan description\"\n                name=\"user-fullname\"\n                formControlName=\"description\"\n                required\n                aria-label=\"John Doe\"\n                aria-describedby=\"basic-icon-default-fullname2\"\n              />\n         \n            </div>\n            \n            <div class=\"form-group\" *ngIf=\"productData.actionType=='create'\" >\n                     <label class=\"form-label\" for=\"basic-icon-default-email\">Add Feauture</label>\n                     <div class=\"options\">\n                       <textarea\n                       type=\"text\"\n                       id=\"basic-icon-default-email\"\n                       class=\"form-control dt-email\"\n                       placeholder=\"add some awesome features.\"\n                       aria-label=\"john.doe@example.com\"\n                       aria-describedby=\"basic-icon-default-email2\"\n                       name=\"feauture\"\n                       formControlName=\"features\"\n                       required\n                     ></textarea>\n                     </div>\n                    \n            </div>\n\n            <div>\n              <button (click)=\"addProductPrices()\"  type=\"button\" class=\"btn icon-btn btn-sm hide-arrow green\" rippleEffect>\n                <span [data-feather]=\"'plus-square'\" [class]=\"'cursor-pointer'\"></span>\n               </button>\n               <div class=\"form-group\" formArrayName=\"prices\" *ngFor=\"let product of productForm.get('prices')['controls']; let i = index;\">\n               <div [formGroupName]=\"i\">\n                     <label class=\"form-label\" for=\"basic-icon-default-email\">Add Price</label>\n                     <div class=\"options\">\n                       <input\n                       type=\"text\"\n                       id=\"basic-icon-default-email\"\n                       class=\"form-control dt-email\"\n                       placeholder=\"300\"\n                       aria-label=\"john.doe@example.com\"\n                       aria-describedby=\"basic-icon-default-email2\"\n                       name=\"user-email\"\n                       formControlName=\"unit_amount\"\n                       required\n                     />\n                     </div>\n                     <label class=\"form-label\" for=\"basic-icon-default-email\"> Interval Count</label>\n                     <div class=\"options\">\n                       <input\n                       type=\"number\"\n                       id=\"basic-icon-default-email\"\n                       class=\"form-control dt-email\"\n                       placeholder=\"3\"\n                       aria-label=\"john.doe@example.com\"\n                       aria-describedby=\"basic-icon-default-email2\"\n                       name=\"user-email\"\n                       formControlName=\"interval_count\"\n                       required\n                     />\n                    </div>\n                     <label class=\"form-label\" for=\"basic-icon-default-email\">Add Interval Duration</label>\n                     <div class=\"options\">\n                     <div ngbDropdown container=\"body\">\n                        <select class=\"form-control mx-10\" name=\"options\" formControlName=\"interval\" >\n                          <option *ngFor=\"let interval of intervals\"  [ngValue]=\"interval.value\">{{ interval.name }}</option>\n                        </select>\n                      </div>\n                    </div>\n                     <button (click)=\"deleteProductDetails(i)\" type=\"button\" class=\"btn icon-btn btn-sm hide-arrow red\" rippleEffect>\n                       <span [data-feather]=\"'trash-2'\" [class]=\"'cursor-pointer'\"></span>\n                     </button>\n                     </div>\n               </div>\n            </div>\n\n          </div>\n\n          <div class=\"modal-body\">\n            <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit(productForm)\" rippleEffect>Submit</button>\n            <button\n              type=\"reset\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"toggleSidebar('new-user-sidebar')\"\n              rippleEffect\n            >\n              Cancel\n            </button>\n            </div>\n        </form>\n\n        <div class=\"add-new-user modal-content pt-0\" *ngIf=\"productData && productData.actionType=='delete'\">\n            <div class=\"modal-body flex-grow-1 delete-price\" *ngIf=\"productData && productData._id\">\n                <div *ngFor=\"let product of productData.product_details\">\n                   \n                    <h6>\n                       <strong> Price :</strong> {{product.price}}\n                    </h6>\n                    <h6>\n                       <strong> Intevral :</strong>  {{product.interval.interval_count}} {{product.interval.interval}}\n                    </h6>\n                    <h6>\n                        <strong> Price :</strong> {{product.active ? 'Active' : 'Inactive'}}\n                     </h6>\n                    <br>\n                    <button class=\"btn btn-primary delete-icon\"  (click)=\"updatePriceDetails(product)\" >\n                        <a href=\"javascript:;\" class=\"delete\" ngbDropdownItem (click)=\"toggleSidebar('new-user-sidebar',row)\"\n                        ><span [data-feather]=\"'feather repeat'\" [size]=\"16\" [class]=\"'mr-50'\"></span> Change Status</a\n                    >\n                    </button>\n                    <br>\n                    <br>\n                    <br>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { SubscriptionService } from '../../subscription.service';\n\n@Component({\n  selector: 'app-add-new-subscription',\n  templateUrl: './add-new-subscription.component.html',\n  styleUrls: ['./add-new-subscription.component.scss']\n})\nexport class AddNewSubscriptionComponent implements OnInit {\n \n  public productData:any;\n  public productForm = this.fb.group({\n    name: [''],\n    description : [''],\n    prices : this.fb.array([]),\n    features : [''],\n  });\n\n  public intervals = [\n    {name:'Month',value:'month'},\n    {name:'Days',value:'day'},\n    {name:'Year',value:'year'}\n  ]\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _coreSidebarService: CoreSidebarService,private subscriptionService:SubscriptionService,private fb:FormBuilder) {}\n\n  ngOnInit(): void {\n    this.setDefaultValue();\n    this.getProductDetails();\n  }\n\n  get priceDetails() {\n    return this.productForm.get('prices') as FormArray;\n  }\n\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  addProductPrices() {\n    let productDetails = this.productForm.get('prices') as FormArray;\n    productDetails.push(this.fb.group({\n      unit_amount:[''],\n      interval:[''],\n      interval_count:['']\n    }));\n  }\n\n\n  deleteProductDetails(index: number) {\n    this.priceDetails.removeAt(index);\n  } \n\n\n  setDefaultValue() {\n    this.addProductPrices();\n  }\n\n  /**\n   * Submit\n   *\n   * @param form\n   */\n  submit(form) {\n    if (form.valid && (this.productData && this.productData.id)) {\n      // let data = form.value;\n      // data.id = this.productData.id;\n      // this.subscriptionService.addPriceInProduct(this.productData.id,data).subscribe(res=>{\n      // });\n    }else if(form.valid){\n      console.log(\" subscription details. \" , form.value);\n      this.subscriptionService.addProduct(form.value).subscribe(res=>{\n        window.location.reload();\n      });\n    }\n  }\n\n  getProductDetails() {\n    this.subscriptionService.changeProductDetailsData.subscribe(res=>{\n      if(res) {\n        this.productData = res;\n        this.productForm.patchValue({\n          name:res['productName']\n        });\n\n      this.productForm.get('prices') as FormArray;\n      } \n    })\n  }\n\n  // updatePriceDetails(data) {\n  //   console.log(\"data------\",data);\n  //   data.active = !data.active\n  //   this.subscriptionService.updatePriceData(data.priceId,data.active).subscribe(res=>{\n  //     console.log(\"----\",res);\n  //   })\n  // }\n\n  setValue(data) {\n    let productPrice = this.productForm.get('prices') as FormArray;\n    this.priceDetails.removeAt(0);\n    for(let i=0;i<data['product_details'].length;i++) {\n      productPrice.push(this.fb.group({\n        unit_amount:data['product_details'][i].price,\n        period:data['product_details'][i].interval.interval,\n        interval_count:data['product_details'][i].interval.interval_count\n      }));\n    }\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { FlatpickrOptions } from 'ng2-flatpickr';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { UserEditService } from '../../../user/user-edit/user-edit.service';\n// import { ContentManagementService } from '../content.service';\n\n@Component({\n  selector: 'app-subscription-details',\n  templateUrl: './subscription-details.component.html',\n  styleUrls: ['./subscription-details.component.scss']\n})\nexport class Subscription_details implements OnInit {\n // Public\n public url = this.router.url;\n public urlLastValue;\n public rows;\n public currentRow;\n public tempRow;\n public avatarImage: string;\n\n @ViewChild('accountForm') accountForm: NgForm;\n\n public birthDateOptions: FlatpickrOptions = {\n   altInput: true\n };\n\n public selectMultiLanguages = ['English', 'Spanish', 'French', 'Russian', 'German', 'Arabic', 'Sanskrit'];\n public selectMultiLanguagesSelected = [];\n\n // Private\n private _unsubscribeAll: Subject<any>;\n\n /**\n  * Constructor\n  *\n  * @param {Router} router\n  * @param {UserEditService} _userEditService\n  */\n constructor(private router: Router, private _userEditService: UserEditService) {\n   this._unsubscribeAll = new Subject();\n   this.urlLastValue = this.url.substr(this.url.lastIndexOf('/') + 1);\n }\n\n // Public Methods\n // -----------------------------------------------------------------------------------------------------\n\n /**\n  * Reset Form With Default Values\n  */\n resetFormWithDefaultValues() {\n   this.accountForm.resetForm(this.tempRow);\n }\n\n /**\n  * Upload Image\n  *\n  * @param event\n  */\n uploadImage(event: any) {\n   if (event.target.files && event.target.files[0]) {\n     let reader = new FileReader();\n\n     reader.onload = (event: any) => {\n       this.avatarImage = event.target.result;\n     };\n\n     reader.readAsDataURL(event.target.files[0]);\n   }\n }\n\n /**\n  * Submit\n  *\n  * @param form\n  */\n submit(form) {\n   if (form.valid) {\n     console.log('Submitted...!');\n   }\n }\n\n // Lifecycle Hooks\n // -----------------------------------------------------------------------------------------------------\n /**\n  * On init\n  */\n ngOnInit(): void {\n   this._userEditService.onUserEditChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n     this.rows = response;\n     this.rows.map(row => {\n       if (row.id == this.urlLastValue) {\n         this.currentRow = row;\n         this.avatarImage = this.currentRow.avatar;\n        //  this.tempRow = cloneDeep(row);\n       }\n     });\n   });\n }\n\n /**\n  * On destroy\n  */\n ngOnDestroy(): void {\n   // Unsubscribe from all subscriptions\n   this._unsubscribeAll.next();\n   this._unsubscribeAll.complete();\n }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- users edit start -->\n    \n    <!-- users edit ends -->\n    <div class=\"row\">\n        <!-- User Card starts-->\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card user-card\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-12 d-flex flex-column justify-content-between border-container-lg\">\n                  <div class=\"user-avatar-section\">\n                    <div class=\"d-flex justify-content-start\">\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-xl-12 col-lg-12\">\n                  <div class=\"user-info-wrapper\">\n                    <div class=\"d-flex flex-wrap\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"mail\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Free Basic Plan - Free</span>\n                      </div>\n                      <p class=\"card-text mb-0\"> </p>\n                    </div>\n                    <div class=\"d-flex flex-wrap my-50\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"check\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Standard Plan - $7 (We will need discounting capability)\n                          •\t1 Month\n                          •\t3 Months\n                          •\t1Year</span>\n                      </div>\n                      <p class=\"card-text mb-0\">\n                    </div>\n                    <div class=\"d-flex flex-wrap my-50\">\n                      <div class=\"user-info-title\">\n                        <i data-feather=\"star\" class=\"mr-1\"></i>\n                        <span class=\"card-text user-info-title font-weight-bold mb-0\">Premium Plan - $15 (We will need discounting capability)\n                          •\t1 Month\n                          •\t3 Months\n                          •\t1Year</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /User Card Ends-->\n      </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SubscriptionManagementService } from '../subscription-management.service';\nimport { SubscriptionService } from '../subscription.service';\n\n@Component({\n  selector: 'app-subscription-management',\n  templateUrl: './subscription-management.component.html',\n  styleUrls: ['./subscription-management.component.scss']\n})\nexport class SubscriptionManagementComponent implements OnInit {\n\n  public sidebarToggleRef = false;\n  public rows;\n  public selectedOption = 10;\n  public ColumnMode = ColumnMode;\n  public temp = [];\n  public previousRoleFilter = '';\n  public previousPlanFilter = '';\n  public previousStatusFilter = '';\n\n  public selectPlan: any = [\n    { name: 'All', value: '' },\n    { name: 'Basic', value: 'Basic' },\n    { name: 'Company', value: 'Company' },\n    { name: 'Enterprise', value: 'Enterprise' },\n    { name: 'Team', value: 'Team' }\n  ];\n\n  public selectStatus: any = [\n    { name: 'All', value: '' },\n    { name: 'Pending', value: 'Pending' },\n    { name: 'Active', value: 'Active' },\n    { name: 'Inactive', value: 'Inactive' }\n  ];\n\n  public selectedRole = [];\n  public selectedPlan = [];\n  public selectedStatus = [];\n  public searchValue = '';\n\n  // Decorator\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n\n  // Private\n  private tempData = [];\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreConfigService} _coreConfigService\n   * @param {UserListService} _userListService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _subscriptionManagementService: SubscriptionManagementService,\n    private _coreSidebarService: CoreSidebarService,\n    private _coreConfigService: CoreConfigService,\n    private subscriptionService:SubscriptionService\n  ) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * filterUpdate\n   *\n   * @param event\n   */\n  filterUpdate(event) {\n    // Reset ng-select on search\n    this.selectedPlan = this.selectPlan[0];\n    this.selectedStatus = this.selectStatus[0];\n\n    const val = event.target.value.toLowerCase();\n\n    // Filter Our Data\n    const temp = this.tempData.filter(function (d) {\n      return d.fullName.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // Update The Rows\n    this.rows = temp;\n    // Whenever The Filter Changes, Always Go Back To The First Page\n    this.table.offset = 0;\n  }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name,actionType,row?): void {\n   if((row && row._id) ) {\n    row.actionType = actionType\n    if(actionType == 'delete') {\n      this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n      this.subscriptionService.updateProductDetails(row);\n    }\n    else if(actionType == 'update') {\n      this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n      this.subscriptionService.updateProductDetails(row);\n    }\n   } else {\n    let row = {\n      actionType: actionType\n    }\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n    this.subscriptionService.updateProductDetails(row);\n   }\n  }\n\n  /**\n   * Filter By Roles\n   *\n   * @param event\n   */\n  filterByRole(event) {\n    const filter = event ? event.value : '';\n    this.previousRoleFilter = filter;\n    this.temp = this.filterRows(filter, this.previousPlanFilter, this.previousStatusFilter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter By Plan\n   *\n   * @param event\n   */\n  filterByPlan(event) {\n    const filter = event ? event.value : '';\n    this.previousPlanFilter = filter;\n    this.temp = this.filterRows(this.previousRoleFilter, filter, this.previousStatusFilter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter By Status\n   *\n   * @param event\n   */\n  filterByStatus(event) {\n    const filter = event ? event.value : '';\n    this.previousStatusFilter = filter;\n    this.temp = this.filterRows(this.previousRoleFilter, this.previousPlanFilter, filter);\n    this.rows = this.temp;\n  }\n\n  /**\n   * Filter Rows\n   *\n   * @param roleFilter\n   * @param planFilter\n   * @param statusFilter\n   */\n  filterRows(roleFilter, planFilter, statusFilter): any[] {\n    // Reset search on select change\n    this.searchValue = '';\n\n    roleFilter = roleFilter.toLowerCase();\n    planFilter = planFilter.toLowerCase();\n    statusFilter = statusFilter.toLowerCase();\n\n    return this.tempData.filter(row => {\n      const isPartialNameMatch = row.role.toLowerCase().indexOf(roleFilter) !== -1 || !roleFilter;\n      const isPartialGenderMatch = row.currentPlan.toLowerCase().indexOf(planFilter) !== -1 || !planFilter;\n      const isPartialStatusMatch = row.status.toLowerCase().indexOf(statusFilter) !== -1 || !statusFilter;\n      return isPartialNameMatch && isPartialGenderMatch && isPartialStatusMatch;\n    });\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe config change\n    this.getSubscriptions()\n  }\n\n  getSubscriptions() {\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      //! If we have zoomIn route Transition then load datatable after 450ms(Transition will finish in 400ms)\n      if (config.layout.animation === 'zoomIn') {\n        setTimeout(() => {\n          this._subscriptionManagementService.onUserListChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n            this.rows = response;\n            this.tempData = this.rows;\n          });\n        }, 450);\n      } else {\n        this._subscriptionManagementService.onUserListChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n          this.rows = response;\n          this.tempData = this.rows;\n        });\n      }\n    });\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n  toggleActivation(index ,row):void {\n    console.log(\"change activation \",index, \"  ::  \",row);\n    this.subscriptionService.updateSubscriptionStatus(row.id, {active:!row.active}).subscribe(res =>{\n      console.log(\" activation \",index);\n      window.location.reload();\n    },error => {\n      console.log(\"erro ::activate toggle \", error);\n    });\n  }\n}","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n      <!-- User List -->\n      <section class=\"users-list-wrapper\">\n        <div class=\"card\">\n          <div class=\"row\">\n            <div class=\"col-md-6 col-12\">\n              <div class=\"d-flex justify-content-between align-items-center m-1\">\n                <label class=\"d-flex align-items-center\"\n                  >Show\n                  <select class=\"form-control mx-25\" [(ngModel)]=\"selectedOption\">\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                  entries</label\n                >\n              </div>\n            </div>\n            <div class=\"col-md-6 col-12 d-flex justify-content-start justify-content-md-end\">\n              <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pb-md-0\">\n                <!-- <label class=\"d-flex align-items-center ml-1 ml-md-0\"\n                  >Search:<input\n                    [(ngModel)]=\"searchValue\"\n                    name=\"searchValue\"\n                    type=\"search\"\n                    class=\"form-control ml-25\"\n                    (keyup)=\"filterUpdate($event)\"\n                    (search)=\"filterUpdate($event)\"\n                /></label> -->\n                <button class=\"btn btn-primary ml-1\" rippleEffect (click)=\"toggleSidebar('new-user-sidebar','create')\">\n                  <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i\n                  ><span class=\"d-none d-sm-inline-block\">Add Subscription Plan</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ngx-datatable\n            [rows]=\"rows\"\n            [rowHeight]=\"100\"\n            class=\"bootstrap core-bootstrap\"\n            [limit]=\"selectedOption\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [scrollbarH]=\"true\"\n          >\n            <ngx-datatable-column name=\"Plan Type\"  [width]=\"200\">\n              <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                <div class=\"d-flex align-items-center pl-1\">\n                  <div class=\"cell-line-height\">\n                    <a routerLink=\"#\" class=\"font-medium-1 d-block\"\n                      ><span class=\"font-weight-bold\">{{ row.name }}</span></a\n                    >\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n            \n            <ngx-datatable-column name=\"Descrition\" [width]=\"200\">\n              <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                <div class=\"d-flex align-items-center\">\n                  <div ngbDropdown container=\"body\">\n                      <span  width=\"300px\" > {{ row.description || \"not available\" }}</span>\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n            \n            <ngx-datatable-column name=\"Features\" [width]=\"200\">\n              <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                <div class=\"d-flex align-items-center\">\n                  <div ngbDropdown container=\"body\">\n                    <select *ngIf=\"row.metadata.features\" class=\"form-control mx-10\" name=\"options\" >\n                      <option  width=\"300px\" > {{ row.metadata.features }}</option>\n                    </select>\n                    <select *ngIf=\"!row.metadata.features\" class=\"form-control mx-10\" name=\"options\" >\n                      <option  width=\"300px\" > No Features available </option>\n                    </select>\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n\n            <ngx-datatable-column name=\"Price\" [width]=\"200\">\n              <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                <div class=\"d-flex align-items-center\">\n                  <div ngbDropdown container=\"body\">\n                    <select class=\"form-control mx-10\" name=\"options\" >\n                      <option  *ngFor=\"let price of row.prices\" width=\"300px\" > {{ price.currency | uppercase }} {{ price.unit_amount }} every {{ price.recurring.interval_count }} {{ price.recurring.interval }}</option>\n                    </select>\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n\n            <ngx-datatable-column name=\"Actions\" [width]=\"100\" [sortable]=\"false\">\n              <ng-template ngx-datatable-cell-template let-row=\"row\">\n                  <div *ngIf=\"row.active\" class=\"badge badge-pill badge-light-success\">\n                  Active\n                  </div>\n                  <div *ngIf=\"!row.active\" class=\"badge badge-pill badge-light-danger\">\n                    Inactive\n                  </div>\n                <div ngbDropdown container=\"body\">\n                  <button ngbDropdownToggle type=\"button\" class=\"btn icon-btn btn-sm hide-arrow\" rippleEffect>\n                    <span [data-feather]=\"'more-vertical'\" [class]=\"'cursor-pointer'\"></span>\n                  </button>\n                  <div ngbDropdownMenu>\n                    <a  (click)=\"toggleActivation('update',row)\" ngbDropdownItem\n                      ><span [data-feather]=\"'edit'\" [size]=\"16\" [class]=\"'mr-50'\"></span> Toggle active Status </a\n                    >\n                  </div>\n                </div>\n              </ng-template>\n            </ngx-datatable-column>\n\n          </ngx-datatable>\n        </div>\n      </section>\n    </div>\n\n    <!-- New User Sidebar -->\n    <core-sidebar\n      class=\"modal modal-slide-in sidebar-todo-modal fade\"\n      name=\"new-user-sidebar\"\n      overlayClass=\"modal-backdrop\"\n    >\n    <app-add-new-subscription></app-add-new-subscription>\n    </core-sidebar>\n    <!--/ New User Sidebar -->\n  </div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { InvoiceModule } from 'app/main/apps/invoice/invoice.module';\n\nimport { UserEditService } from 'app/main/apps/user/user-edit/user-edit.service';\n\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\nimport { SubscriptionManagementService } from './subscription-management.service';\nimport { Subscription_details } from './subscription-management/subscription-details/subscription-details.component'\nimport { AddNewSubscriptionComponent } from './subscription-management/add-new-subscription/add-new-subscription.component';\n// routing\nconst routes: Routes = [\n  {\n    path: 'subscription-management',\n    component: SubscriptionManagementComponent,\n    resolve: {\n      uls: SubscriptionManagementService\n    },\n    data: { animation: 'SubscriptionManagementComponent' }\n  },\n  {\n    path: 'Subscription_details',\n    component: Subscription_details,\n    // resolve: {\n    //   uls: ContentManagementService\n    // },\n    data: { animation: 'Subscription_details' }\n  },\n  // {\n  //   path: 'user-view/:id',\n  //   component: UserViewComponent,\n  //   resolve: {\n  //     data: UserViewService,\n  //     InvoiceListService\n  //   },\n  //   data: { path: 'view/:id', animation: 'UserViewComponent' }\n  // },\n  // {\n  //   path: 'user-edit/:id',\n  //   component: UserEditComponent,\n  //   resolve: {\n  //     ues: UserEditService\n  //   },\n  //   data: { animation: 'UserEditComponent' }\n  // },\n  // {\n  //   path: 'user-view',\n  //   redirectTo: '/apps/user/user-view/2' // Redirection\n  // },\n  // {\n  //   path: 'user-edit',\n  //   redirectTo: '/apps/user/user-edit/2' // Redirection\n  // }\n];\n\n@NgModule({\n  declarations: [SubscriptionManagementComponent,AddNewSubscriptionComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Ng2FlatpickrModule,\n    NgxDatatableModule,\n    CorePipesModule,\n    CoreDirectivesModule,\n    InvoiceModule,\n    CoreSidebarModule\n  ],\n  providers: [SubscriptionManagementService, UserEditService]\n})\nexport class SubscriptionModule {}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubscriptionService {\n\n  constructor(private http:HttpClient) { }\n  productDetails = new BehaviorSubject('');\n  changeProductDetailsData = this.productDetails.asObservable();\n\n  updateProductDetails(data){\n    this.productDetails.next(data);\n  }\n\n  addProduct(data) {\n    return this.http.post<any>(`${environment.apiUrl}/payment/createProduct`,data)\n  }\n\n  updateSubscriptionStatus(id,data) {\n    return this.http.post<any>(`${environment.apiUrl}/payment/updatePlanActiveStatus/${id}`,data)\n  }\n\n  // addPriceInProduct(id,data) {\n  //   return this.http.post<any>(`${environment.apiUrl}/payment/addProductprice/${id}`,data)\n  // }\n}\n"],"names":["environment","BehaviorSubject","SubscriptionManagementService","_httpClient","onUserListChanged","route","state","Promise","resolve","reject","all","getSubscriptions","then","get","apiUrl","subscribe","response","rows","console","log","next","i0","factory","providedIn","ctx_r10","ctx_r12","ctx_r14","ctx_r15","ctx_r16","ctx_r20","ctx_r22","AddNewSubscriptionComponent","_coreSidebarService","subscriptionService","fb","group","name","description","prices","array","features","value","setDefaultValue","getProductDetails","productForm","getSidebarRegistry","toggleOpen","productDetails","push","unit_amount","interval","interval_count","index","priceDetails","removeAt","addProductPrices","form","valid","productData","id","addProduct","window","location","reload","changeProductDetailsData","res","patchValue","data","productPrice","i","length","price","period","selectors","decls","vars","consts","template","Subject","takeUntil","Subscription_details","router","_userEditService","url","altInput","_unsubscribeAll","urlLastValue","substr","lastIndexOf","accountForm","resetForm","tempRow","event","target","files","reader","FileReader","onload","avatarImage","result","readAsDataURL","onUserEditChanged","pipe","map","row","currentRow","avatar","complete","viewQuery","ColumnMode","DatatableComponent","ctx_r21","row_r18","SubscriptionManagementComponent","_subscriptionManagementService","_coreConfigService","selectedPlan","selectPlan","selectedStatus","selectStatus","val","toLowerCase","temp","tempData","filter","d","fullName","indexOf","table","offset","actionType","_id","updateProductDetails","previousRoleFilter","filterRows","previousPlanFilter","previousStatusFilter","roleFilter","planFilter","statusFilter","searchValue","isPartialNameMatch","role","isPartialGenderMatch","currentPlan","isPartialStatusMatch","status","config","layout","animation","setTimeout","updateSubscriptionStatus","active","error","ctx","CommonModule","FormsModule","RouterModule","NgbModule","NgSelectModule","NgxDatatableModule","Ng2FlatpickrModule","CoreCommonModule","CoreDirectivesModule","CorePipesModule","CoreSidebarModule","InvoiceModule","UserEditService","routes","path","component","uls","SubscriptionModule","imports","forChild","declarations","i1","SubscriptionService","http","asObservable","post"],"sourceRoot":"webpack:///"}