{"version":3,"file":"src_app_main_forms_forms_module_ts.js","mappings":"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;AACO;AACP,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,oCAAoC;AACrD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACO;AACP,kDAAkD,QAAQ;AAC1D,yCAAyC,QAAQ;AACjD,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACO;AACP,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,iBAAiB,uFAAuF,cAAc;AACtH,uBAAuB,gCAAgC,qCAAqC,2CAA2C;AACvI,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACO;AACP;AACA,iBAAiB,6CAA6C,UAAU,sDAAsD,cAAc;AAC5I,0BAA0B,6BAA6B,oBAAoB,gDAAgD,kBAAkB;AAC7I;AACA;AACO;AACP;AACA;AACA,2GAA2G,uFAAuF,cAAc;AAChN,uBAAuB,8BAA8B,gDAAgD,wDAAwD;AAC7J,6CAA6C,sCAAsC,UAAU,mBAAmB,IAAI;AACpH;AACA;AACO;AACP,iCAAiC,uCAAuC,YAAY,KAAK,OAAO;AAChG;AACA;AACA;AACA;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6CAA6C;AAC7C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA","sources":["./node_modules/bs-stepper/dist/js/bs-stepper.js","./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./node_modules/ngx-mask/__ivy_ngcc__/fesm2015/ngx-mask.js","./src/app/main/forms/form-elements/checkbox/checkbox.component.ts","./src/app/main/forms/form-elements/checkbox/checkbox.component.html","./src/app/main/forms/form-elements/checkbox/checkbox.module.ts","./src/app/main/forms/form-elements/checkbox/checkbox.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.html","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.html","./src/app/main/forms/form-elements/file-uploader/file-uploader.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.html","./src/app/main/forms/form-elements/flatpickr/flatpickr.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.snippetcode.ts","./src/app/main/forms/form-elements/form-elements.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.html","./src/app/main/forms/form-elements/input-groups/input-groups.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.snippetcode.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.html","./src/app/main/forms/form-elements/input-mask/input-mask.module.ts","./src/app/main/forms/form-elements/input-mask/input-mask.snippetcode.ts","./src/app/main/forms/form-elements/input/input.component.ts","./src/app/main/forms/form-elements/input/input.component.html","./src/app/main/forms/form-elements/input/input.module.ts","./src/app/main/forms/form-elements/input/input.snippetcode.ts","./src/app/main/forms/form-elements/number-input/number-input.component.ts","./src/app/main/forms/form-elements/number-input/number-input.component.html","./src/app/main/forms/form-elements/number-input/number-input.module.ts","./src/app/main/forms/form-elements/number-input/number-input.snippetcode.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.html","./src/app/main/forms/form-elements/quill-editor/quill-editor.module.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.snippetcode.ts","./src/app/main/forms/form-elements/radio/radio.component.ts","./src/app/main/forms/form-elements/radio/radio.component.html","./src/app/main/forms/form-elements/radio/radio.module.ts","./src/app/main/forms/form-elements/radio/radio.snippetcode.ts","./src/app/main/forms/form-elements/select/data.service.ts","./src/app/main/forms/form-elements/select/select.component.html","./src/app/main/forms/form-elements/select/select.component.ts","./src/app/main/forms/form-elements/select/select.module.ts","./src/app/main/forms/form-elements/switch/switch.component.ts","./src/app/main/forms/form-elements/switch/switch.component.html","./src/app/main/forms/form-elements/switch/switch.module.ts","./src/app/main/forms/form-elements/switch/switch.snippetcode.ts","./src/app/main/forms/form-elements/textarea/textarea.component.ts","./src/app/main/forms/form-elements/textarea/textarea.component.html","./src/app/main/forms/form-elements/textarea/textarea.module.ts","./src/app/main/forms/form-elements/textarea/textarea.snippetcode.ts","./src/app/main/forms/form-layout/form-layout.component.ts","./src/app/main/forms/form-layout/form-layout.component.html","./src/app/main/forms/form-layout/form-layout.module.ts","./src/app/main/forms/form-layout/form-layout.snippetcode.ts","./src/app/main/forms/form-repeater/form-repeater.animation.ts","./src/app/main/forms/form-repeater/form-repeater.component.ts","./src/app/main/forms/form-repeater/form-repeater.component.html","./src/app/main/forms/form-repeater/form-repeater.module.ts","./src/app/main/forms/form-repeater/form-repeater.snippetcode.ts","./src/app/main/forms/form-validation/_helpers/must-match.validator.ts","./src/app/main/forms/form-validation/form-validation.component.ts","./src/app/main/forms/form-validation/form-validation.component.html","./src/app/main/forms/form-validation/form-validation.module.ts","./src/app/main/forms/form-validation/form-validation.snippetcode.ts","./src/app/main/forms/form-wizard/form-wizard.component.ts","./src/app/main/forms/form-wizard/form-wizard.component.html","./src/app/main/forms/form-wizard/form-wizard.module.ts","./src/app/main/forms/forms.module.ts","tslib"],"sourcesContent":["/*!\n * bsStepper v1.7.0 (https://github.com/Johann-S/bs-stepper)\n * Copyright 2018 - 2019 Johann-S <johann.servoire@gmail.com>\n * Licensed under MIT (https://github.com/Johann-S/bs-stepper/blob/master/LICENSE)\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Stepper = factory());\n}(this, function () { 'use strict';\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var matches = window.Element.prototype.matches;\n\n  var closest = function closest(element, selector) {\n    return element.closest(selector);\n  };\n\n  var WinEvent = function WinEvent(inType, params) {\n    return new window.Event(inType, params);\n  };\n\n  var createCustomEvent = function createCustomEvent(eventName, params) {\n    var cEvent = new window.CustomEvent(eventName, params);\n    return cEvent;\n  };\n  /* istanbul ignore next */\n\n\n  function polyfill() {\n    if (!window.Element.prototype.matches) {\n      matches = window.Element.prototype.msMatchesSelector || window.Element.prototype.webkitMatchesSelector;\n    }\n\n    if (!window.Element.prototype.closest) {\n      closest = function closest(element, selector) {\n        if (!document.documentElement.contains(element)) {\n          return null;\n        }\n\n        do {\n          if (matches.call(element, selector)) {\n            return element;\n          }\n\n          element = element.parentElement || element.parentNode;\n        } while (element !== null && element.nodeType === 1);\n\n        return null;\n      };\n    }\n\n    if (!window.Event || typeof window.Event !== 'function') {\n      WinEvent = function WinEvent(inType, params) {\n        params = params || {};\n        var e = document.createEvent('Event');\n        e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n        return e;\n      };\n    }\n\n    if (typeof window.CustomEvent !== 'function') {\n      var originPreventDefault = window.Event.prototype.preventDefault;\n\n      createCustomEvent = function createCustomEvent(eventName, params) {\n        var evt = document.createEvent('CustomEvent');\n        params = params || {\n          bubbles: false,\n          cancelable: false,\n          detail: null\n        };\n        evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n\n        evt.preventDefault = function () {\n          if (!this.cancelable) {\n            return;\n          }\n\n          originPreventDefault.call(this);\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function get() {\n              return true;\n            }\n          });\n        };\n\n        return evt;\n      };\n    }\n  }\n\n  polyfill();\n\n  var MILLISECONDS_MULTIPLIER = 1000;\n  var ClassName = {\n    ACTIVE: 'active',\n    LINEAR: 'linear',\n    BLOCK: 'dstepper-block',\n    NONE: 'dstepper-none',\n    FADE: 'fade',\n    VERTICAL: 'vertical'\n  };\n  var transitionEndEvent = 'transitionend';\n  var customProperty = 'bsStepper';\n\n  var show = function show(stepperNode, indexStep, options, done) {\n    var stepper = stepperNode[customProperty];\n\n    if (stepper._steps[indexStep].classList.contains(ClassName.ACTIVE) || stepper._stepsContents[indexStep].classList.contains(ClassName.ACTIVE)) {\n      return;\n    }\n\n    var showEvent = createCustomEvent('show.bs-stepper', {\n      cancelable: true,\n      detail: {\n        from: stepper._currentIndex,\n        to: indexStep,\n        indexStep: indexStep\n      }\n    });\n    stepperNode.dispatchEvent(showEvent);\n\n    var activeStep = stepper._steps.filter(function (step) {\n      return step.classList.contains(ClassName.ACTIVE);\n    });\n\n    var activeContent = stepper._stepsContents.filter(function (content) {\n      return content.classList.contains(ClassName.ACTIVE);\n    });\n\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n\n    if (activeStep.length) {\n      activeStep[0].classList.remove(ClassName.ACTIVE);\n    }\n\n    if (activeContent.length) {\n      activeContent[0].classList.remove(ClassName.ACTIVE);\n\n      if (!stepperNode.classList.contains(ClassName.VERTICAL) && !stepper.options.animation) {\n        activeContent[0].classList.remove(ClassName.BLOCK);\n      }\n    }\n\n    showStep(stepperNode, stepper._steps[indexStep], stepper._steps, options);\n    showContent(stepperNode, stepper._stepsContents[indexStep], stepper._stepsContents, activeContent, done);\n  };\n\n  var showStep = function showStep(stepperNode, step, stepList, options) {\n    stepList.forEach(function (step) {\n      var trigger = step.querySelector(options.selectors.trigger);\n      trigger.setAttribute('aria-selected', 'false'); // if stepper is in linear mode, set disabled attribute on the trigger\n\n      if (stepperNode.classList.contains(ClassName.LINEAR)) {\n        trigger.setAttribute('disabled', 'disabled');\n      }\n    });\n    step.classList.add(ClassName.ACTIVE);\n    var currentTrigger = step.querySelector(options.selectors.trigger);\n    currentTrigger.setAttribute('aria-selected', 'true'); // if stepper is in linear mode, remove disabled attribute on current\n\n    if (stepperNode.classList.contains(ClassName.LINEAR)) {\n      currentTrigger.removeAttribute('disabled');\n    }\n  };\n\n  var showContent = function showContent(stepperNode, content, contentList, activeContent, done) {\n    var stepper = stepperNode[customProperty];\n    var toIndex = contentList.indexOf(content);\n    var shownEvent = createCustomEvent('shown.bs-stepper', {\n      cancelable: true,\n      detail: {\n        from: stepper._currentIndex,\n        to: toIndex,\n        indexStep: toIndex\n      }\n    });\n\n    function complete() {\n      content.classList.add(ClassName.BLOCK);\n      content.removeEventListener(transitionEndEvent, complete);\n      stepperNode.dispatchEvent(shownEvent);\n      done();\n    }\n\n    if (content.classList.contains(ClassName.FADE)) {\n      content.classList.remove(ClassName.NONE);\n      var duration = getTransitionDurationFromElement(content);\n      content.addEventListener(transitionEndEvent, complete);\n\n      if (activeContent.length) {\n        activeContent[0].classList.add(ClassName.NONE);\n      }\n\n      content.classList.add(ClassName.ACTIVE);\n      emulateTransitionEnd(content, duration);\n    } else {\n      content.classList.add(ClassName.ACTIVE);\n      content.classList.add(ClassName.BLOCK);\n      stepperNode.dispatchEvent(shownEvent);\n      done();\n    }\n  };\n\n  var getTransitionDurationFromElement = function getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    var transitionDuration = window.getComputedStyle(element).transitionDuration;\n    var floatTransitionDuration = parseFloat(transitionDuration); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;\n  };\n\n  var emulateTransitionEnd = function emulateTransitionEnd(element, duration) {\n    var called = false;\n    var durationPadding = 5;\n    var emulatedDuration = duration + durationPadding;\n\n    function listener() {\n      called = true;\n      element.removeEventListener(transitionEndEvent, listener);\n    }\n\n    element.addEventListener(transitionEndEvent, listener);\n    window.setTimeout(function () {\n      if (!called) {\n        element.dispatchEvent(WinEvent(transitionEndEvent));\n      }\n\n      element.removeEventListener(transitionEndEvent, listener);\n    }, emulatedDuration);\n  };\n\n  var detectAnimation = function detectAnimation(contentList, options) {\n    if (options.animation) {\n      contentList.forEach(function (content) {\n        content.classList.add(ClassName.FADE);\n        content.classList.add(ClassName.NONE);\n      });\n    }\n  };\n\n  var buildClickStepLinearListener = function buildClickStepLinearListener() {\n    return function clickStepLinearListener(event) {\n      event.preventDefault();\n    };\n  };\n\n  var buildClickStepNonLinearListener = function buildClickStepNonLinearListener(options) {\n    return function clickStepNonLinearListener(event) {\n      event.preventDefault();\n      var step = closest(event.target, options.selectors.steps);\n      var stepperNode = closest(step, options.selectors.stepper);\n      var stepper = stepperNode[customProperty];\n\n      var stepIndex = stepper._steps.indexOf(step);\n\n      show(stepperNode, stepIndex, options, function () {\n        stepper._currentIndex = stepIndex;\n      });\n    };\n  };\n\n  var DEFAULT_OPTIONS = {\n    linear: true,\n    animation: false,\n    selectors: {\n      steps: '.step',\n      trigger: '.step-trigger',\n      stepper: '.bs-stepper'\n    }\n  };\n\n  var Stepper =\n  /*#__PURE__*/\n  function () {\n    function Stepper(element, _options) {\n      var _this = this;\n\n      if (_options === void 0) {\n        _options = {};\n      }\n\n      this._element = element;\n      this._currentIndex = 0;\n      this._stepsContents = [];\n      this.options = _extends({}, DEFAULT_OPTIONS, {}, _options);\n      this.options.selectors = _extends({}, DEFAULT_OPTIONS.selectors, {}, this.options.selectors);\n\n      if (this.options.linear) {\n        this._element.classList.add(ClassName.LINEAR);\n      }\n\n      this._steps = [].slice.call(this._element.querySelectorAll(this.options.selectors.steps));\n\n      this._steps.filter(function (step) {\n        return step.hasAttribute('data-target');\n      }).forEach(function (step) {\n        _this._stepsContents.push(_this._element.querySelector(step.getAttribute('data-target')));\n      });\n\n      detectAnimation(this._stepsContents, this.options);\n\n      this._setLinkListeners();\n\n      Object.defineProperty(this._element, customProperty, {\n        value: this,\n        writable: true\n      });\n\n      if (this._steps.length) {\n        show(this._element, this._currentIndex, this.options, function () {});\n      }\n    } // Private\n\n\n    var _proto = Stepper.prototype;\n\n    _proto._setLinkListeners = function _setLinkListeners() {\n      var _this2 = this;\n\n      this._steps.forEach(function (step) {\n        var trigger = step.querySelector(_this2.options.selectors.trigger);\n\n        if (_this2.options.linear) {\n          _this2._clickStepLinearListener = buildClickStepLinearListener(_this2.options);\n          trigger.addEventListener('click', _this2._clickStepLinearListener);\n        } else {\n          _this2._clickStepNonLinearListener = buildClickStepNonLinearListener(_this2.options);\n          trigger.addEventListener('click', _this2._clickStepNonLinearListener);\n        }\n      });\n    } // Public\n    ;\n\n    _proto.next = function next() {\n      var _this3 = this;\n\n      var nextStep = this._currentIndex + 1 <= this._steps.length - 1 ? this._currentIndex + 1 : this._steps.length - 1;\n      show(this._element, nextStep, this.options, function () {\n        _this3._currentIndex = nextStep;\n      });\n    };\n\n    _proto.previous = function previous() {\n      var _this4 = this;\n\n      var previousStep = this._currentIndex - 1 >= 0 ? this._currentIndex - 1 : 0;\n      show(this._element, previousStep, this.options, function () {\n        _this4._currentIndex = previousStep;\n      });\n    };\n\n    _proto.to = function to(stepNumber) {\n      var _this5 = this;\n\n      var tempIndex = stepNumber - 1;\n      var nextStep = tempIndex >= 0 && tempIndex < this._steps.length ? tempIndex : 0;\n      show(this._element, nextStep, this.options, function () {\n        _this5._currentIndex = nextStep;\n      });\n    };\n\n    _proto.reset = function reset() {\n      var _this6 = this;\n\n      show(this._element, 0, this.options, function () {\n        _this6._currentIndex = 0;\n      });\n    };\n\n    _proto.destroy = function destroy() {\n      var _this7 = this;\n\n      this._steps.forEach(function (step) {\n        var trigger = step.querySelector(_this7.options.selectors.trigger);\n\n        if (_this7.options.linear) {\n          trigger.removeEventListener('click', _this7._clickStepLinearListener);\n        } else {\n          trigger.removeEventListener('click', _this7._clickStepNonLinearListener);\n        }\n      });\n\n      this._element[customProperty] = undefined;\n      this._element = undefined;\n      this._currentIndex = undefined;\n      this._steps = undefined;\n      this._stepsContents = undefined;\n      this._clickStepLinearListener = undefined;\n      this._clickStepNonLinearListener = undefined;\n    };\n\n    return Stepper;\n  }();\n\n  return Stepper;\n\n}));\n","import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵfac = function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); };\nFileUploadModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n","import { InjectionToken, Injectable, Inject, ElementRef, Renderer2, Directive, forwardRef, Input, HostListener, Pipe, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nconst config = new InjectionToken('config');\nconst NEW_CONFIG = new InjectionToken('NEW_CONFIG');\nconst INITIAL_CONFIG = new InjectionToken('INITIAL_CONFIG');\nconst initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: '.',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    allowNegativeNumbers: false,\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    leadZeroDateTime: false,\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\nconst timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\nconst withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\nclass MaskApplierService {\n    constructor(_config) {\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (str, thousandSeparatorChar, decimalChar, precision) => {\n            const x = str.split(decimalChar);\n            const decimals = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n            let res = x[0];\n            const separatorLimit = this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                if (res[0] === '-') {\n                    res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\n                }\n                else {\n                    res = res.slice(0, separatorLimit.length);\n                }\n            }\n            const rgx = /(\\d+)(\\d{3})/;\n            while (thousandSeparatorChar && rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substr(0, precision + 1);\n        };\n        this.percentage = (str) => {\n            return Number(str) >= 0 && Number(str) <= 100;\n        };\n        this.getPrecision = (maskExpression) => {\n            const x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        };\n        this.checkAndRemoveSuffix = (inputValue) => {\n            var _a, _b, _c;\n            for (let i = ((_a = this.suffix) === null || _a === void 0 ? void 0 : _a.length) - 1; i >= 0; i--) {\n                const substr = this.suffix.substr(i, (_b = this.suffix) === null || _b === void 0 ? void 0 : _b.length);\n                if (inputValue.includes(substr) &&\n                    (i - 1 < 0 || !inputValue.includes(this.suffix.substr(i - 1, (_c = this.suffix) === null || _c === void 0 ? void 0 : _c.length)))) {\n                    return inputValue.replace(substr, '');\n                }\n            }\n            return inputValue;\n        };\n        this.checkInputPrecision = (inputValue, precision, decimalMarker) => {\n            if (precision < Infinity) {\n                const precisionRegEx = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\n                const precisionMatch = inputValue.match(precisionRegEx);\n                if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                    const diff = precisionMatch[0].length - 1 - precision;\n                    inputValue = inputValue.substring(0, inputValue.length - diff);\n                }\n                if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        };\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n        this.allowNegativeNumbers = this._config.allowNegativeNumbers;\n        this.leadZeroDateTime = this._config.leadZeroDateTime;\n    }\n    applyMaskWithPattern(inputValue, maskAndPattern) {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor = 0;\n        let result = '';\n        let multi = false;\n        let backspaceShift = false;\n        let shift = 1;\n        let stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && (inputValue === null || inputValue === void 0 ? void 0 : inputValue.length) > 0) {\n            inputValue = this.checkAndRemoveSuffix(inputValue);\n        }\n        const inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((i) => i === '.').length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        const arr = [];\n        for (let i = 0; i < inputValue.length; i++) {\n            if (inputValue[i].match('\\\\d')) {\n                arr.push(inputValue[i]);\n            }\n        }\n        if (maskExpression === 'CPF_CNPJ') {\n            this.cpfCnpjError = !!(arr.length !== 11 && arr.length !== 14);\n            if (arr.length > 11) {\n                maskExpression = '00.000.000/0000-00';\n            }\n            else {\n                maskExpression = '000.000.000-00';\n            }\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\n                inputValue = this._stripToDecimal(inputValue);\n                const precision = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            }\n            if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                const base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            inputValue =\n                inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker && !backspaced\n                    ? inputValue.slice(1, inputValue.length)\n                    : inputValue;\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            const thousandSeperatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            const decimalMarkerEscaped = this._charToRegExpExpression(this.decimalMarker);\n            const invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'\n                .replace(thousandSeperatorCharEscaped, '')\n                .replace(decimalMarkerEscaped, '');\n            const invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision = this.getPrecision(maskExpression);\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            const strForSep = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            const commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // tslint:disable-next-line\n            let i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    const daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if ((Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\n                            Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\n                            inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        const monthsCount = 12;\n                        // mask without day\n                        const withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        const day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\n                                inputValue[cursor] !== '/') ||\n                                inputValue[cursor] === '/' ||\n                                (inputValue[cursor - 3] === '/' &&\n                                    Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\n                                    inputValue[cursor - 1] !== '/') ||\n                                inputValue[cursor - 1] === '/');\n                        // 10<day<31 && month<12 for input\n                        const day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        const day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            !inputValue.slice(cursor - 2, cursor).includes('/') &&\n                            Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\n                        // 10<day<31 && month<12 for paste whole data\n                        const day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if ((Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\n                            withoutDays ||\n                            day1monthInput ||\n                            day2monthInput ||\n                            day1monthPaste ||\n                            day2monthPaste) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    this._shiftStep(maskExpression, cursor, inputArray.length);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    if (!!inputArray[cursor] &&\n                        maskExpression !== '099.099.099.099' &&\n                        maskExpression !== '000.000.000-00' &&\n                        maskExpression !== '00.000.000/0000-00') {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped &&\n                    this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\n                    inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        let newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        let actualShift = justPasted ? cursor : this._shift.has(position) ? shift : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let onlySpecial = false;\n        if (backspaced) {\n            onlySpecial = inputArray.every((char) => this.maskSpecialCharacters.includes(char));\n        }\n        let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    _findSpecialChar(inputSymbol) {\n        return this.maskSpecialCharacters.find((val) => val === inputSymbol);\n    }\n    _checkSymbolMask(inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol));\n    }\n    _stripToDecimal(str) {\n        return str\n            .split('')\n            .filter((i, idx) => {\n            return (i.match('^-?\\\\d') ||\n                i.match('\\\\s') ||\n                i === '.' ||\n                i === ',' ||\n                (i === '-' && idx === 0 && this.allowNegativeNumbers));\n        })\n            .join('');\n    }\n    _charToRegExpExpression(char) {\n        if (char) {\n            const charsToEscape = '[\\\\^$.|?*+()';\n            return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\n        }\n        return char;\n    }\n    _shiftStep(maskExpression, cursor, inputLength) {\n        const shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputLength : cursor;\n        this._shift.add(shiftStep + this.prefix.length || 0);\n    }\n}\nMaskApplierService.ɵfac = function MaskApplierService_Factory(t) { return new (t || MaskApplierService)(ɵngcc0.ɵɵinject(config)); };\nMaskApplierService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskApplierService, factory: MaskApplierService.ɵfac });\nMaskApplierService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskApplierService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, null); })();\n\nclass MaskService extends MaskApplierService {\n    constructor(document, _config, _elementRef, _renderer) {\n        super(_config);\n        this.document = document;\n        this._config = _config;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.maskExpression = '';\n        this.isNumberValue = false;\n        this.placeHolderCharacter = '_';\n        this.maskIsShown = '';\n        this.selStart = null;\n        this.selEnd = null;\n        /**\n         * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\n         * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\n         */\n        this.writingValue = false;\n        this.maskChanged = false;\n        this.onChange = (_) => { };\n    }\n    // tslint:disable-next-line:cyclomatic-complexity\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        let newInputValue = '';\n        if (this.hiddenInput && !this.writingValue) {\n            let actualResult = this.actualValue.split('');\n            // tslint:disable no-unused-expression\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            // tslint:enable no-unused-expression\n            newInputValue =\n                this.actualValue.length && actualResult.length <= inputValue.length\n                    ? this.shiftTypedSymbols(actualResult.join(''))\n                    : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item) => item !== this.decimalMarker);\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        const resLen = result.length;\n        const prefNmask = this.prefix + this.maskIsShown;\n        if (this.maskExpression.includes('H')) {\n            const countSkipedSymbol = this._numberSkipedSymbols(result);\n            return result + prefNmask.slice(resLen + countSkipedSymbol);\n        }\n        else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\n            return result + prefNmask;\n        }\n        return result + prefNmask.slice(resLen);\n    }\n    // get the number of characters that were shifted\n    _numberSkipedSymbols(value) {\n        const regex = /(^|\\D)(\\d\\D)/g;\n        let match = regex.exec(value);\n        let countSkipedSymbol = 0;\n        while (match != null) {\n            countSkipedSymbol += 1;\n            match = regex.exec(value);\n        }\n        return countSkipedSymbol;\n    }\n    applyValueChanges(position = 0, justPasted, backspaced, cb = () => { }) {\n        const formElement = this._elementRef.nativeElement;\n        formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\n        if (formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n    hideInput(inputValue, maskExpression) {\n        return inputValue\n            .split('')\n            .map((curr, index) => {\n            if (this.maskAvailablePatterns &&\n                this.maskAvailablePatterns[maskExpression[index]] &&\n                this.maskAvailablePatterns[maskExpression[index]].symbol) {\n                return this.maskAvailablePatterns[maskExpression[index]].symbol;\n            }\n            return curr;\n        })\n            .join('');\n    }\n    // this function is not necessary, it checks result against maskExpression\n    getActualValue(res) {\n        const compare = res\n            .split('')\n            .filter((symbol, i) => this._checkSymbolMask(symbol, this.maskExpression[i]) ||\n            (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i]));\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n    shiftTypedSymbols(inputValue) {\n        let symbolToReplace = '';\n        const newInputValue = (inputValue &&\n            inputValue.split('').map((currSymbol, index) => {\n                if (this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                    inputValue[index + 1] !== this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    const replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            })) ||\n            [];\n        return newInputValue.join('');\n    }\n    showMaskInInput(inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                if (this.maskExpression === 'IP') {\n                    return this._checkForIp(inputVal);\n                }\n                if (this.maskExpression === 'CPF_CNPJ') {\n                    return this._checkForCpfCnpj(inputVal);\n                }\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    }\n    clearIfNotMatchFn() {\n        const formElement = this._elementRef.nativeElement;\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(formElement.value, this.maskExpression);\n        }\n    }\n    set formElementProperty([name, value]) {\n        Promise.resolve().then(() => this._renderer.setProperty(this._elementRef.nativeElement, name, value));\n    }\n    checkSpecialCharAmount(mask) {\n        const chars = mask.split('').filter((item) => this._findSpecialChar(item));\n        return chars.length;\n    }\n    removeMask(inputValue) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.maskSpecialCharacters.concat('_').concat(this.placeHolderCharacter));\n    }\n    _checkForIp(inputVal) {\n        if (inputVal === '#') {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n    _checkForCpfCnpj(inputVal) {\n        const cpf = `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        const cnpj = `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        if (inputVal === '#') {\n            return cpf;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return cpf.slice(arr.length, cpf.length);\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return cpf.slice(arr.length + 1, cpf.length);\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return cpf.slice(arr.length + 2, cpf.length);\n        }\n        if (arr.length > 9 && arr.length < 11) {\n            return cpf.slice(arr.length + 3, cpf.length);\n        }\n        if (arr.length === 11) {\n            return '';\n        }\n        if (arr.length === 12) {\n            if (inputVal.length === 17) {\n                return cnpj.slice(16, cnpj.length);\n            }\n            return cnpj.slice(15, cnpj.length);\n        }\n        if (arr.length > 12 && arr.length <= 14) {\n            return cnpj.slice(arr.length + 4, cnpj.length);\n        }\n        return '';\n    }\n    /**\n     * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\n     * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\n     * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\n     * model value too. Therefore, we don't trigger onChange in this scenario.\n     * @param inputValue the current form input value\n     */\n    formControlResult(inputValue) {\n        if (this.writingValue || this.maskChanged) {\n            this.maskChanged = false;\n            return;\n        }\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._toNumber(this._checkSymbols(inputValue)));\n        }\n        else {\n            this.onChange(this._removeSuffix(inputValue));\n        }\n    }\n    _toNumber(value) {\n        if (!this.isNumberValue || value === '') {\n            return value;\n        }\n        const num = Number(value);\n        return Number.isNaN(num) ? value : num;\n    }\n    _removeMask(value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n    _removePrefix(value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n    _removeSuffix(value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n    _retrieveSeparatorValue(result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    }\n    _regExpForRemove(specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((item) => `\\\\${item}`).join('|'), 'gi');\n    }\n    _checkSymbols(result) {\n        if (result === '') {\n            return result;\n        }\n        const separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        let separatorValue = this._retrieveSeparatorValue(result);\n        if (this.decimalMarker !== '.') {\n            separatorValue = separatorValue.replace(this.decimalMarker, '.');\n        }\n        if (!this.isNumberValue) {\n            return separatorValue;\n        }\n        if (separatorPrecision) {\n            if (result === this.decimalMarker) {\n                return null;\n            }\n            return this._checkPrecision(this.maskExpression, separatorValue);\n        }\n        else {\n            return Number(separatorValue);\n        }\n    }\n    // TODO should think about helpers or separting decimal precision to own property\n    _retrieveSeparatorPrecision(maskExpretion) {\n        const matcher = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n    _checkPrecision(separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    }\n}\nMaskService.ɵfac = function MaskService_Factory(t) { return new (t || MaskService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(config), ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(ɵngcc0.Renderer2)); };\nMaskService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskService, factory: MaskService.ɵfac });\nMaskService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();\n\n// tslint:disable deprecation\n// tslint:disable no-input-rename\nclass MaskDirective {\n    constructor(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this.allowNegativeNumbers = null;\n        this.leadZeroDateTime = null;\n        this._maskValue = '';\n        this._position = null;\n        this._maskExpressionArray = [];\n        this._justPasted = false;\n        this.onChange = (_) => { };\n        this.onTouch = () => { };\n    }\n    ngOnChanges(changes) {\n        const { maskExpression, specialCharacters, patterns, prefix, suffix, thousandSeparator, decimalMarker, dropSpecialCharacters, hiddenInput, showMaskTyped, placeHolderCharacter, shownMaskExpression, showTemplate, clearIfNotMatch, validation, separatorLimit, allowNegativeNumbers, leadZeroDateTime, } = changes;\n        if (maskExpression) {\n            if (maskExpression.currentValue !== maskExpression.previousValue && !maskExpression.firstChange) {\n                this._maskService.maskChanged = true;\n            }\n            this._maskValue = maskExpression.currentValue || '';\n            if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\n                this._maskExpressionArray = maskExpression.currentValue.split('||').sort((a, b) => {\n                    return a.length - b.length;\n                });\n                this._maskValue = this._maskExpressionArray[0];\n                this.maskExpression = this._maskExpressionArray[0];\n                this._maskService.maskExpression = this._maskExpressionArray[0];\n            }\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        if (allowNegativeNumbers) {\n            this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\n            if (this._maskService.allowNegativeNumbers) {\n                this._maskService.maskSpecialCharacters = this._maskService.maskSpecialCharacters.filter((c) => c !== '-');\n            }\n        }\n        if (leadZeroDateTime) {\n            this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\n        }\n        this._applyMask();\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    validate({ value }) {\n        if (!this._maskService.validation || !this._maskValue) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskService.cpfCnpjError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (this._maskService.maskAvailablePatterns[key].optional &&\n                    this._maskService.maskAvailablePatterns[key].optional === true) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt = this._maskValue\n                            .split('')\n                            .filter((i) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 && value.toString().length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return this._createValidationError(value);\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return this._createValidationError(value);\n                }\n            }\n        }\n        return null;\n    }\n    onPaste() {\n        this._justPasted = true;\n    }\n    onInput(e) {\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position = el.selectionStart === 1\n            ? el.selectionStart + this._maskService.prefix.length\n            : el.selectionStart;\n        let caretShift = 0;\n        let backspaceShift = false;\n        this._maskService.applyValueChanges(position, this._justPasted, this._code === 'Backspace' || this._code === 'Delete', (shift, _backspaceShift) => {\n            this._justPasted = false;\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        let positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        if (positionToApply > this._getActualInputLength()) {\n            positionToApply = this._getActualInputLength();\n        }\n        if (positionToApply < 0) {\n            positionToApply = 0;\n        }\n        el.setSelectionRange(positionToApply, positionToApply);\n        this._position = null;\n    }\n    onBlur() {\n        if (this._maskValue) {\n            this._maskService.clearIfNotMatchFn();\n        }\n        this.onTouch();\n    }\n    onFocus(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        const el = e.target;\n        const posStart = 0;\n        const posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            e.keyCode !== 38) {\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        }\n        const nextValue = !el.value || el.value === this._maskService.prefix\n            ? this._maskService.prefix + this._maskService.maskIsShown\n            : el.value;\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if ((el.selectionStart || el.selectionEnd) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n        /** select only inserted text */\n        if (el.selectionEnd > this._getActualInputLength()) {\n            el.selectionEnd = this._getActualInputLength();\n        }\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown(e) {\n        var _a;\n        if (!this._maskValue) {\n            return;\n        }\n        this._code = e.code ? e.code : e.key;\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && el.selectionStart !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = ((_a = this.specialCharacters) === null || _a === void 0 ? void 0 : _a.length)\n                    ? this.specialCharacters\n                    : this._config.specialCharacters;\n                if (this.prefix.length > 1 && el.selectionStart <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, this.prefix.length);\n                }\n                else {\n                    if (this._inputValue.length !== el.selectionStart && el.selectionStart !== 1) {\n                        while (this.specialCharacters.includes(this._inputValue[el.selectionStart - 1].toString()) &&\n                            ((this.prefix.length >= 1 && el.selectionStart > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n                        }\n                    }\n                    this.suffixCheckOnPressDelete(e.keyCode, el);\n                }\n            }\n            this.suffixCheckOnPressDelete(e.keyCode, el);\n            if (this._maskService.prefix.length &&\n                el.selectionStart <= this._maskService.prefix.length &&\n                el.selectionEnd <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            const cursorStart = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < el.selectionStart) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        else if ((e.keyCode === 65 && e.ctrlKey === true) || // Ctrl+ A\n            (e.keyCode === 65 && e.metaKey === true) // Cmd + A (Mac)\n        ) {\n            el.setSelectionRange(0, this._getActualInputLength());\n            e.preventDefault();\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    }\n    /** It writes the value in the input */\n    writeValue(inputValue) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\n                if ('disable' in inputValue) {\n                    this.setDisabledState(Boolean(inputValue.disable));\n                }\n                inputValue = inputValue.value;\n            }\n            if (inputValue === undefined) {\n                inputValue = '';\n            }\n            if (typeof inputValue === 'number') {\n                inputValue = String(inputValue);\n                inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\n                this._maskService.isNumberValue = true;\n            }\n            this._inputValue = inputValue;\n            this._setMask();\n            if ((inputValue && this._maskService.maskExpression) ||\n                (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))) {\n                // Let the service we know we are writing value so that triggering onChange function wont happen during applyMask\n                this._maskService.writingValue = true;\n                this._maskService.formElementProperty = [\n                    'value',\n                    this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n                ];\n                // Let the service know we've finished writing value\n                this._maskService.writingValue = false;\n            }\n            else {\n                this._maskService.formElementProperty = ['value', inputValue];\n            }\n            this._inputValue = inputValue;\n        });\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n    suffixCheckOnPressDelete(keyCode, el) {\n        if (keyCode === 46 && this.suffix.length > 0) {\n            if (this._inputValue.length - this.suffix.length <= el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n        }\n        if (keyCode === 8) {\n            if (this.suffix.length > 1 && this._inputValue.length - this.suffix.length < el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n            if (this.suffix.length === 1 && this._inputValue.length === el.selectionStart) {\n                el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n            }\n        }\n    }\n    /** It disables the input element */\n    setDisabledState(isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n    _repeatPatternSymbols(maskExp) {\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp.split('').reduce((accum, currval, index) => {\n                this._start = currval === '{' ? index : this._start;\n                if (currval !== '}') {\n                    return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                }\n                this._end = index;\n                const repeatNumber = Number(maskExp.slice(this._start + 1, this._end));\n                const replaceWith = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                return accum + replaceWith;\n            }, '')) ||\n            maskExp);\n    }\n    // tslint:disable-next-line:no-any\n    _applyMask() {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n    _validateTime(value) {\n        const rowMaskLen = this._maskValue.split('').filter((s) => s !== ':').length;\n        if (!value) {\n            return null; // Don't validate empty values to allow for optional form control\n        }\n        if ((+value[value.length - 1] === 0 && value.length < rowMaskLen) || value.length <= rowMaskLen - 2) {\n            return this._createValidationError(value);\n        }\n        return null;\n    }\n    _getActualInputLength() {\n        return (this._maskService.actualValue.length || this._maskService.actualValue.length + this._maskService.prefix.length);\n    }\n    _createValidationError(actualValue) {\n        return {\n            mask: {\n                requiredMask: this._maskValue,\n                actualValue,\n            },\n        };\n    }\n    _setMask() {\n        if (this._maskExpressionArray.length > 0) {\n            this._maskExpressionArray.some((mask) => {\n                var _a, _b;\n                const test = ((_a = this._maskService.removeMask(this._inputValue)) === null || _a === void 0 ? void 0 : _a.length) <= ((_b = this._maskService.removeMask(mask)) === null || _b === void 0 ? void 0 : _b.length);\n                if (this._inputValue && test) {\n                    this._maskValue = mask;\n                    this.maskExpression = mask;\n                    this._maskService.maskExpression = mask;\n                    return test;\n                }\n                else {\n                    this._maskValue = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this._maskService.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                }\n            });\n        }\n    }\n}\nMaskDirective.ɵfac = function MaskDirective_Factory(t) { return new (t || MaskDirective)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(MaskService), ɵngcc0.ɵɵdirectiveInject(config)); };\nMaskDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaskDirective, selectors: [[\"input\", \"mask\", \"\"], [\"textarea\", \"mask\", \"\"]], hostBindings: function MaskDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"paste\", function MaskDirective_paste_HostBindingHandler() { return ctx.onPaste(); })(\"input\", function MaskDirective_input_HostBindingHandler($event) { return ctx.onInput($event); })(\"blur\", function MaskDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"click\", function MaskDirective_click_HostBindingHandler($event) { return ctx.onFocus($event); })(\"keydown\", function MaskDirective_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { maskExpression: [\"mask\", \"maskExpression\"], specialCharacters: \"specialCharacters\", patterns: \"patterns\", prefix: \"prefix\", suffix: \"suffix\", thousandSeparator: \"thousandSeparator\", decimalMarker: \"decimalMarker\", dropSpecialCharacters: \"dropSpecialCharacters\", hiddenInput: \"hiddenInput\", showMaskTyped: \"showMaskTyped\", placeHolderCharacter: \"placeHolderCharacter\", shownMaskExpression: \"shownMaskExpression\", showTemplate: \"showTemplate\", clearIfNotMatch: \"clearIfNotMatch\", validation: \"validation\", separatorLimit: \"separatorLimit\", allowNegativeNumbers: \"allowNegativeNumbers\", leadZeroDateTime: \"leadZeroDateTime\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            MaskService,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaskDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: MaskService },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\nMaskDirective.propDecorators = {\n    maskExpression: [{ type: Input, args: ['mask',] }],\n    specialCharacters: [{ type: Input }],\n    patterns: [{ type: Input }],\n    prefix: [{ type: Input }],\n    suffix: [{ type: Input }],\n    thousandSeparator: [{ type: Input }],\n    decimalMarker: [{ type: Input }],\n    dropSpecialCharacters: [{ type: Input }],\n    hiddenInput: [{ type: Input }],\n    showMaskTyped: [{ type: Input }],\n    placeHolderCharacter: [{ type: Input }],\n    shownMaskExpression: [{ type: Input }],\n    showTemplate: [{ type: Input }],\n    clearIfNotMatch: [{ type: Input }],\n    validation: [{ type: Input }],\n    separatorLimit: [{ type: Input }],\n    allowNegativeNumbers: [{ type: Input }],\n    leadZeroDateTime: [{ type: Input }],\n    onPaste: [{ type: HostListener, args: ['paste',] }],\n    onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onFocus: [{ type: HostListener, args: ['click', ['$event'],] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'input[mask], textarea[mask]',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    {\n                        provide: NG_VALIDATORS,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    MaskService,\n                ]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MaskService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, { maskExpression: [{\n            type: Input,\n            args: ['mask']\n        }], specialCharacters: [{\n            type: Input\n        }], patterns: [{\n            type: Input\n        }], prefix: [{\n            type: Input\n        }], suffix: [{\n            type: Input\n        }], thousandSeparator: [{\n            type: Input\n        }], decimalMarker: [{\n            type: Input\n        }], dropSpecialCharacters: [{\n            type: Input\n        }], hiddenInput: [{\n            type: Input\n        }], showMaskTyped: [{\n            type: Input\n        }], placeHolderCharacter: [{\n            type: Input\n        }], shownMaskExpression: [{\n            type: Input\n        }], showTemplate: [{\n            type: Input\n        }], clearIfNotMatch: [{\n            type: Input\n        }], validation: [{\n            type: Input\n        }], separatorLimit: [{\n            type: Input\n        }], allowNegativeNumbers: [{\n            type: Input\n        }], leadZeroDateTime: [{\n            type: Input\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], onFocus: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }] }); })();\n\nclass MaskPipe {\n    constructor(_maskService) {\n        this._maskService = _maskService;\n    }\n    transform(value, mask, thousandSeparator = null) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator;\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\nMaskPipe.ɵfac = function MaskPipe_Factory(t) { return new (t || MaskPipe)(ɵngcc0.ɵɵdirectiveInject(MaskApplierService, 16)); };\nMaskPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"mask\", type: MaskPipe, pure: true });\nMaskPipe.ctorParameters = () => [\n    { type: MaskApplierService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'mask',\n                pure: true\n            }]\n    }], function () { return [{ type: MaskApplierService }]; }, null); })();\n\nclass NgxMaskModule {\n    static forRoot(configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    }\n}\nNgxMaskModule.ɵfac = function NgxMaskModule_Factory(t) { return new (t || NgxMaskModule)(); };\nNgxMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxMaskModule });\nNgxMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMaskModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MaskDirective, MaskPipe],\n                declarations: [MaskDirective, MaskPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMaskModule, { declarations: [MaskDirective, MaskPipe], exports: [MaskDirective, MaskPipe] }); })();\n/**\n * @internal\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function ? Object.assign(Object.assign({}, initConfig), configValue()) : Object.assign(Object.assign({}, initConfig), configValue);\n}\n\nconst commonjsGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : typeof self !== 'undefined'\n                ? self\n                : {};\n(function () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        commonjsGlobal.KeyboardEvent = function (_eventType, _init) { };\n    }\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/checkbox/checkbox.snippetcode';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html'\n})\nexport class CheckboxComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeCustom = snippet.snippetCodeCustom;\n  public _snippetCodeCustomColor = snippet.snippetCodeCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Checkbox',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Checkbox',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- Content-Header Component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!--  Checkbox Basic Start -->\n    <section id=\"checkbox-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Checkboxes</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox3\"\n                    value=\"checked-disabled\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox4\"\n                    value=\"unchecked-disabled\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Basic Ends -->\n\n    <!-- Checkbox Custom Start -->\n    <section id=\"checkbox-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustom\">\n            <h4 class=\"card-title\">Custom Checkboxes</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-checkbox</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                  <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Custom Ends -->\n\n    <!--  Checkbox Color Start -->\n    <section id=\"checkbox-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the checkBox use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { CheckboxComponent } from 'app/main/forms/form-elements/checkbox/checkbox.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/checkbox',\n    component: CheckboxComponent,\n    data: { animation: 'checkbox' }\n  }\n];\n\n@NgModule({\n  declarations: [CheckboxComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class CheckboxModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n    <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n    <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox3\"\n      value=\"checked-disabled\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox4\"\n      value=\"unchecked-disabled\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n  </div>\n`\n};\nexport const snippetCodeCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n    <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n    <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n    <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeCustomColor: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-secondary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n  </div>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbDateStruct, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  I18n,\n  CustomDatepickerI18n\n} from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service';\n\n@Component({\n  selector: 'date-picker-i18n',\n  templateUrl: './date-picker-i18n.component.html',\n  providers: [I18n, { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }] // define custom NgbDatepickerI18n provider\n})\nexport class DatePickerI18nComponent implements OnInit {\n  public i18nDPdata: NgbDateStruct;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input\n        class=\"form-control\"\n        placeholder=\"yyyy-mm-dd\"\n        name=\"i18n Date Picker\"\n        [(ngModel)]=\"i18nDPdata\"\n        ngbDatepicker\n        #i18nDP=\"ngbDatepicker\"\n      />\n\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary feather icon-calendar\"\n          (click)=\"i18nDP.toggle()\"\n          type=\"button\"\n          rippleEffect\n        ></button>\n      </div>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { DatePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component';\n\n@NgModule({\n  declarations: [DatePickerI18nComponent],\n  imports: [CommonModule, CoreCommonModule, NgbModule, FormsModule],\n  exports: [DatePickerI18nComponent]\n})\nexport class DatePickerI18nModule {}\n","import { Injectable } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  fr: {\n    weekdays: ['Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa', 'Di'],\n    months: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aou', 'Sep', 'Oct', 'Nov', 'Déc']\n  }\n};\n\n@Injectable()\nexport class I18n {\n  language = 'fr';\n}\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getWeekdayLabel(weekday: number): string {\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n  }\n  getMonthShortName(month: number): string {\n    return I18N_VALUES[this._i18n.language].months[month - 1];\n  }\n  getMonthFullName(month: number): string {\n    return this.getMonthShortName(month);\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport * as snippet from 'app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode';\n\n@Component({\n  selector: 'app-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  styleUrls: ['./date-time-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DateTimePickerComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicDP = snippet.snippetCodeBasicDP;\n  public _snippetCodeDisabledDP = snippet.snippetCodeDisabledDP;\n  public _snippetCodeMinMaxDP = snippet.snippetCodeMinMaxDP;\n  public _snippetCodeCustomFooterDP = snippet.snippetCodeCustomFooterDP;\n  public _snippetCodeI18n = snippet.snippetCodeI18n;\n  public _snippetCodeCustomDay = snippet.snippetCodeCustomDay;\n  public _snippetCodeRangeSelectionDP = snippet.snippetCodeRangeSelectionDP;\n  public _snippetCodeBasicTP = snippet.snippetCodeBasicTP;\n  public _snippetCodeMeridianTP = snippet.snippetCodeMeridianTP;\n  public _snippetCodeCustomTP = snippet.snippetCodeCustomTP;\n  public _snippetCodeSpinnerTP = snippet.snippetCodeSpinnerTP;\n  public _snippetCodeCustomValidationTP = snippet.snippetCodeCustomValidationTP;\n  public _snippetCodei18nTP = snippet.snippetCodei18nTP;\n\n  // Basic Date Picker\n  public basicDPdata: NgbDateStruct;\n\n  // Disabled Date Picker\n  public disabled = true;\n\n  // Min-Max Date Picker\n  public MinMaxDPdata: NgbDateStruct;\n\n  // Custom Footer Date Picker\n  public customFooterDPdata: NgbDateStruct;\n\n  // Custom Day Date Picker\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  // Range selection Date Picker\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  // Custom Validation Time Picker\n  public customValidationTP = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n\n  /**\n   * Constructor\n   *\n   * @param {NgbCalendar} calendar\n   * @param {NgbDateParserFormatter} formatter\n   */\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\n    this.fromDate = calendar.getToday();\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n  }\n\n  /**\n   * Range selection Date Picker\n   *\n   * @param date\n   */\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  /**\n   * Is Hovered\n   *\n   * @param date\n   */\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate)\n    );\n  }\n\n  /**\n   * Is Inside\n   *\n   * @param date\n   */\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  /**\n   *  Is Range\n   *\n   * @param date\n   */\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  /**\n   * Custom Day Date Picker\n   *\n   * @param date\n   * @param current\n   */\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) => date.month !== current.month;\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  /**\n   * Meridian Time Picker\n   */\n  meridianTPtoggle() {\n    this.meridianTP = !this.meridianTP;\n  }\n\n  /**\n   * Custom Time Picker\n   */\n  customTPtoggleSeconds() {\n    this.customTPseconds = !this.customTPseconds;\n  }\n\n  /**\n   * Spinner Time Picker\n   */\n  spinnerTPtoggle() {\n    this.spinnerTP = !this.spinnerTP;\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Date & Time Picker',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Date & Time Picker',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <section class=\"basic-disabled-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicDP\">\n            <h4 class=\"card-title\">Basic Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>ngbDatepicker</code> along with <code>input</code> element to create basic date picker.\n              </p>\n              <!-- Basic Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Basic Date Picker\"\n                      [(ngModel)]=\"basicDPdata\"\n                      ngbDatepicker\n                      #basicDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"basicDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n              <!--/ Basic Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDisabledDP\">\n            <h4 class=\"card-title\">Disabled Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Bind <code>[disabled]</code> by passing <code>true</code> to disable date picker & <code>false</code> to\n                enable date picker.\n              </p>\n              <!-- Disabled Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Disabled Date Picker\"\n                      ngbDatepicker\n                      #disabledDP=\"ngbDatepicker\"\n                      [disabled]=\"disabled\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"disabledDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <button\n                class=\"btn btn-sm btn-outline-{{ disabled ? 'danger' : 'success' }} my-1\"\n                (click)=\"disabled = !disabled\"\n                rippleEffect\n              >\n                {{ disabled ? 'D I S A B L E D' : 'E N A B L E D' }}\n              </button>\n              <!--/ Disabled Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"min-max-custom-footer-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMaxDP\">\n            <h4 class=\"card-title\">Min-Max Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[maxDate]</code> & <code>[minDate]</code> input properties to set upper limit and lower limit\n                of date picker.\n              </p>\n              <!-- Min-Max Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Min-Max Date Picker\"\n                      [(ngModel)]=\"MinMaxDPdata\"\n                      ngbDatepicker\n                      #MinMaxDP=\"ngbDatepicker\"\n                      [minDate]=\"{ year: 2019, month: 1, day: 1 }\"\n                      [maxDate]=\"{ year: 2020, month: 2, day: 15 }\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"MinMaxDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n              <!--/ Min-Max Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomFooterDP\">\n            <h4 class=\"card-title\">Custom Footer Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[footerTemplate]</code> input property to create custom footer date picker.\n              </p>\n              <!-- Custom Footer Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Footer Date Picker\"\n                      [(ngModel)]=\"customFooterDPdata\"\n                      ngbDatepicker\n                      #customFooterDP=\"ngbDatepicker\"\n                      [footerTemplate]=\"footerTemplate\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"customFooterDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template #footerTemplate>\n                <hr class=\"my-0\" />\n                <button\n                  class=\"btn btn-primary btn-sm m-2 float-left\"\n                  (click)=\"customFooterDPdata = today; customFooterDP.close()\"\n                  rippleEffect\n                >\n                  Today\n                </button>\n                <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>\n                  Close\n                </button>\n              </ng-template>\n              <!--/ Custom Footer Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"i18n-custom-day-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeI18n\">\n            <h4 class=\"card-title\">i18n Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbDatepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-datepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/datepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Date Picker -->\n              <date-picker-i18n></date-picker-i18n>\n              <!--/ i18n Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomDay\">\n            <h4 class=\"card-title\">Custom Day Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>[dayTemplate]</code> input property to create custom day date picker.</p>\n              <!-- Custom Day Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Day Date Picker\"\n                      [(ngModel)]=\"CustomDayDPdata\"\n                      ngbDatepicker\n                      [dayTemplate]=\"customDay\"\n                      [markDisabled]=\"isDisabled\"\n                      #CustomDayDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"CustomDayDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template\n                #customDay\n                let-date\n                let-currentMonth=\"currentMonth\"\n                let-selected=\"selected\"\n                let-disabled=\"disabled\"\n                let-focused=\"focused\"\n              >\n                <span\n                  class=\"custom-day\"\n                  [class.weekend]=\"isWeekend(date)\"\n                  [class.focused]=\"focused\"\n                  [class.bg-primary]=\"selected\"\n                  [class.hidden]=\"date.month !== currentMonth\"\n                  [class.text-muted]=\"disabled\"\n                >\n                  {{ date.day }}\n                </span>\n              </ng-template>\n              <!--/ Custom Day Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"range-selection-DP\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRangeSelectionDP\">\n            <h4 class=\"card-title\">Range selection Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                To select range of dates use two <code>input</code> elements along with <code>[dayTemplate]</code> &\n                <code>[displayMonths]</code> input properties for lower limit & upper limit respectively.\n              </p>\n              <!-- Range selection Date Picker -->\n\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group w-0\">\n                    <input\n                      name=\"datepicker\"\n                      class=\"form-control\"\n                      ngbDatepicker\n                      #datepicker=\"ngbDatepicker\"\n                      [autoClose]=\"'outside'\"\n                      (dateSelect)=\"onDateSelection($event)\"\n                      [displayMonths]=\"2\"\n                      [dayTemplate]=\"rangeSelectionDP\"\n                      outsideDays=\"hidden\"\n                      [startDate]=\"fromDate!\"\n                    />\n                    <ng-template #rangeSelectionDP let-date let-focused=\"focused\">\n                      <span\n                        class=\"custom-day\"\n                        [class.focused]=\"focused\"\n                        [class.range]=\"isRange(date)\"\n                        [class.faded]=\"isHovered(date) || isInside(date)\"\n                        (mouseenter)=\"hoveredDate = date\"\n                        (mouseleave)=\"hoveredDate = null\"\n                      >\n                        {{ date.day }}\n                      </span>\n                    </ng-template>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpFromDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpFromDate\"\n                      [value]=\"formatter.format(fromDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group ml-sm-2\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpToDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpToDate\"\n                      [value]=\"formatter.format(toDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              <hr />\n              <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n              <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n              <!--/ Range selection Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"basic-meridian-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicTP\">\n            <h4 class=\"card-title\">Basic Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ngb-timepicker</code> to create basic Time Picker with spinner.</p>\n              <!-- Basic Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ basicTP | json }}</pre>\n              <!--/ Basic Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMeridianTP\">\n            <h4 class=\"card-title\">Meridian Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[meridian]=\"true\"</code> along with <code>ngb-timepicker</code> to show meridian time.\n              </p>\n              <!-- Meridian Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ meridianTP ? 'success' : 'danger' }}\"\n                (click)=\"meridianTPtoggle()\"\n                rippleEffect\n              >\n                Meridian - {{ meridianTP ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ meridianTPdata | json }}</pre>\n              <!--/ Meridian Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"custom-spinner-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomTP\">\n            <h4 class=\"card-title\">Custom Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[seconds]=\"true\"</code> along with <code>ngb-timepicker</code> to show seconds.\n              </p>\n              <!-- Custom Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ customTPseconds ? 'success' : 'danger' }}\"\n                (click)=\"customTPtoggleSeconds()\"\n                rippleEffect\n              >\n                Seconds - {{ customTPseconds ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customTPtime | json }}</pre>\n              <!--/ Custom Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSpinnerTP\">\n            <h4 class=\"card-title\">Spinner Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[spinners]=\"false\"</code> along with <code>ngb-timepicker</code> to hide spinners.\n              </p>\n              <!-- Spinner Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n              <hr />\n\n              <button\n                class=\"m-t-1 btn btn-sm btn-outline-{{ spinnerTP ? 'success' : 'danger' }}\"\n                (click)=\"spinnerTPtoggle()\"\n                rippleEffect\n              >\n                Spinners - {{ spinnerTP ? 'ON' : 'OFF' }}\n              </button>\n              <!--/ Spinner Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"validation-i18n-time-picker\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomValidationTP\">\n            <h4 class=\"card-title\">Custom Validation Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[formControl]</code> along with <code>ngb-timepicker</code> to create custom validation.\n              </p>\n              <!-- Custom Validation Time Picker -->\n              <div class=\"form-group\">\n                <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n                <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n                <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n                  <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n                  <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n                  <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n                </div>\n              </div>\n\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customValidationTP.value | json }}</pre>\n              <!--/ Custom Validation Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodei18nTP\">\n            <h4 class=\"card-title\">i18n Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbTimepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-timepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/timepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Time Picker -->\n              <time-picker-i18n></time-picker-i18n>\n              <!--/ i18n Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TimePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module';\nimport { DatePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module';\n\nimport { DateTimePickerComponent } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/date-time-picker',\n    component: DateTimePickerComponent,\n    data: { animation: 'date-time-picker' }\n  }\n];\n\n@NgModule({\n  declarations: [DateTimePickerComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    TimePickerI18nModule,\n    DatePickerI18nModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DateTimePickerModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicDP: snippetCode = {\n  html: `\n  <!-- Basic Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Basic Date Picker\" [(ngModel)]=\"basicDPdata\"\n          ngbDatepicker #basicDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"basicDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n  <!--/ Basic Date Picker -->\n  `,\n  ts: `\n  public basicDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeDisabledDP: snippetCode = {\n  html: `\n  <!-- Disabled Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Disabled Date Picker\" ngbDatepicker\n          #disabledDP=\"ngbDatepicker\" [disabled]=\"disabled\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"disabledDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <button class=\"btn btn-sm btn-outline-{{disabled ? 'danger' : 'success'}} my-1\" (click)=\"disabled = !disabled\" rippleEffect>\n    {{ disabled ? \"D I S A B L E D\" : \"E N A B L E D\"}}\n  </button>\n  <!--/ Disabled Date Picker -->\n  `,\n  ts: `\n  public disabled = true;\n\n  `\n};\nexport const snippetCodeMinMaxDP: snippetCode = {\n  html: `\n  <!-- Min-Max Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Min-Max Date Picker\" [(ngModel)]=\"MinMaxDPdata\"\n          ngbDatepicker #MinMaxDP=\"ngbDatepicker\" [minDate]=\"{year: 2019, month: 1, day: 1}\"\n          [maxDate]=\"{year: 2020, month: 2, day: 15}\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"MinMaxDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n  <!--/ Min-Max Date Picker -->\n  `,\n  ts: `\n  public MinMaxDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeCustomFooterDP: snippetCode = {\n  html: `\n  <!-- Custom Footer Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Footer Date Picker\"\n          [(ngModel)]=\"customFooterDPdata\" ngbDatepicker #customFooterDP=\"ngbDatepicker\"\n          [footerTemplate]=\"footerTemplate\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"customFooterDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #footerTemplate>\n    <hr class=\"my-0\">\n    <button class=\"btn btn-primary btn-sm m-2 float-left\"\n      (click)=\"customFooterDPdata = today; customFooterDP.close()\" rippleEffect>Today</button>\n    <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>Close</button>\n  </ng-template>\n  <!--/ Custom Footer Date Picker -->\n  `,\n  ts: `\n  public customFooterDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeI18n: snippetCode = {\n  html: `\n  <date-picker-i18n></date-picker-i18n>\n  `\n};\nexport const snippetCodeCustomDay: snippetCode = {\n  html: `\n  <!-- Custom Day Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Day Date Picker\"\n          [(ngModel)]=\"CustomDayDPdata\" ngbDatepicker [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\"\n          #CustomDayDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"CustomDayDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\"\n    let-focused=\"focused\">\n    <span class=\"custom-day\" [class.weekend]=\"isWeekend(date)\" [class.focused]=\"focused\"\n      [class.bg-primary]=\"selected\" [class.hidden]=\"date.month !== currentMonth\" [class.text-muted]=\"disabled\">\n      {{ date.day }}\n    </span>\n  </ng-template>\n  <!--/ Custom Day Date Picker -->\n  `,\n  ts: `\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) =>\n  date.month !== current.month;\n  `\n};\nexport const snippetCodeRangeSelectionDP: snippetCode = {\n  html: `\n  <!-- Range selection Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input name=\"datepicker\" class=\"form-control\" ngbDatepicker #rangeSelectionDP=\"ngbDatepicker\"\n          [autoClose]=\"'outside'\" (dateSelect)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\"\n          outsideDays=\"hidden\" [startDate]=\"fromDate!\" [value]=\"formatter.format(today)\">\n        <ng-template #t let-date let-focused=\"focused\">\n          <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\"\n            [class.faded]=\"isHovered(date) || isInside(date)\" (mouseenter)=\"hoveredDate = date\"\n            (mouseleave)=\"hoveredDate = null\">\n            {{ date.day }}\n          </span>\n        </ng-template>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group ml-sm-2 mt\">\n      <div class=\"input-group\">\n        <input #dpToDate class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dpToDate\"\n          [value]=\"formatter.format(toDate)\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <hr />\n  <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n  <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n  <!--/ Range selection Date Picker -->\n  `,\n  ts: `\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (\n      this.fromDate &&\n      !this.toDate &&\n      date &&\n      date.after(this.fromDate)\n    ) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n  `\n};\n\nexport const snippetCodeBasicTP: snippetCode = {\n  html: `\n  <!-- Basic Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{basicTP | json}}</pre>\n  <!--/ Basic Time Picker -->\n  `,\n  ts: `\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n  `\n};\nexport const snippetCodeMeridianTP: snippetCode = {\n  html: `\n  <!-- Meridian Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{meridianTP ? 'success' : 'danger'}}\" (click)=\"meridianTPtoggle()\">\n    Meridian - {{meridianTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{meridianTPdata | json}}</pre>\n  <!--/ Meridian Time Picker -->\n  `,\n  ts: `\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n  `\n};\nexport const snippetCodeCustomTP: snippetCode = {\n  html: `\n  <!-- Custom Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{customTPseconds ? 'success' : 'danger'}}\"\n    (click)=\"customTPtoggleSeconds()\" rippleEffect>\n    Seconds - {{customTPseconds ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customTPtime | json}}</pre>\n  <!--/ Custom Time Picker -->\n  `,\n  ts: `\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n  `\n};\nexport const snippetCodeSpinnerTP: snippetCode = {\n  html: `\n  <!-- Spinner Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n  <hr />\n\n  <button class=\"m-t-1 btn btn-sm btn-outline-{{spinnerTP ? 'success' : 'danger'}}\" (click)=\"snipperTPtoggle()\" rippleEffect>\n    Spinners - {{spinnerTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <!--/ Spinner Time Picker -->\n  `,\n  ts: `\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  `\n};\nexport const snippetCodeCustomValidationTP: snippetCode = {\n  html: `\n  <!-- Custom Validation Time Picker -->\n  <div class=\"form-group\">\n    <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n    <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n    <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n      <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n      <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n      <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n    </div>\n  </div>\n\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customValidationTP.value | json}}</pre>\n  <!--/ Custom Validation Time Picker -->\n  `,\n  ts: `\n  // Custom Validation Time Picker\n  public customValidationTP = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n  `\n};\nexport const snippetCodei18nTP: snippetCode = {\n  html: `\n  <!-- i18n Time Picker -->\n  <time-picker-i18n></time-picker-i18n>\n  <!--/ i18n Time Picker -->\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'time-picker-i18n',\n  templateUrl: './time-picker-i18n.component.html'\n})\nexport class TimePickerI18nComponent implements OnInit {\n  model = { hour: 13, minute: 30 };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ngb-timepicker [(ngModel)]=\"model\" [meridian]=\"true\"></ngb-timepicker>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule, NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TimePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component';\nimport {\n  CustomTimepickerI18n,\n  I18n\n} from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service';\n\n@NgModule({\n  declarations: [TimePickerI18nComponent],\n  imports: [CommonModule, NgbModule, FormsModule],\n  exports: [TimePickerI18nComponent],\n  providers: [I18n, { provide: NgbTimepickerI18n, useClass: CustomTimepickerI18n }] // define custom NgbTimepickerI18n provider\n})\nexport class TimePickerI18nModule {}\n","import { Injectable } from '@angular/core';\n\nimport { NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  el: { periods: ['πμ', 'μμ'] }\n  // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n  language = 'el';\n}\n\n// Define custom service providing the \"AM\" and \"PM\" translations.\n@Injectable()\nexport class CustomTimepickerI18n extends NgbTimepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getMorningPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[0];\n  }\n\n  getAfternoonPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[1];\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { FileUploader } from 'ng2-file-upload';\n\nconst URL = 'https://your-url.com';\n\n@Component({\n  selector: 'app-file-uploader',\n  templateUrl: './file-uploader.component.html',\n  styleUrls: ['./file-uploader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileUploaderComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public hasAnotherDropZoneOver: boolean = false;\n  public hasBaseDropZoneOver: boolean = false;\n  public uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n  });\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'File Uploader',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'File Uploader',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- ngb-alert component -->\n    <ngb-alert [type]=\"'warning'\" [dismissible]=\"false\">\n      <div class=\"alert-body\">\n        <strong>Note:</strong> File Uploader is for demo purpose only. So, you cannot upload files from here. For\n        Backend connectivity Refer this official\n        <a class=\"alert-link\" href=\"https://valor-software.com/ng2-file-upload/\" target=\"_blank\">documentation</a>.\n      </div>\n    </ngb-alert>\n    <!--/ ngb-alert component -->\n    <!-- File Uploader -->\n    <section id=\"file-upload\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over': hasBaseDropZoneOver }\"\n                (fileOver)=\"fileOverBase($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Drop Files Here To Upload\n              </div>\n            </div>\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over-another': hasAnotherDropZoneOver }\"\n                (fileOver)=\"fileOverAnother($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Another dropzone\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-3\">\n              <h4>Select files</h4>\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-multiple\">Multiple:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    multiple\n                    id=\"file-upload-multiple\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-single\">Single:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    id=\"file-upload-single\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"col-lg-9 overflow-auto\">\n              <div class=\"d-flex justify-content-between mb-1\">\n                <h4>Upload queue</h4>\n                <p>Queue length: {{ uploader?.queue?.length }}</p>\n              </div>\n\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                    <th>Progress</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let item of uploader.queue\">\n                    <td>\n                      <strong>{{ item?.file?.name }}</strong>\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n                      {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\">\n                      <ngb-progressbar type=\"primary\" [value]=\"item.progress\"></ngb-progressbar>\n                    </td>\n                    <td class=\"text-center\">\n                      <span *ngIf=\"item.isSuccess\"><i data-feather=\"check\"></i></span>\n                      <span *ngIf=\"item.isCancel\"><i data-feather=\"slash\"></i></span>\n                      <span *ngIf=\"item.isError\"><i data-feather=\"x-circle\"></i></span>\n                    </td>\n                    <td nowrap>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-success btn-sm mr-50\"\n                        (click)=\"item.upload()\"\n                        [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"\n                        rippleEffect\n                      >\n                        <span data-feather=\"upload\"></span>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-warning btn-sm mr-50\"\n                        (click)=\"item.cancel()\"\n                        [disabled]=\"!item.isUploading\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"slash\"></i>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-danger btn-sm\"\n                        (click)=\"item.remove()\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div id=\"\">\n                <p class=\"mt-1\">Queue progress:</p>\n                <ngb-progressbar class=\"mb-1\" type=\"primary\" [value]=\"uploader.progress\"></ngb-progressbar>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-primary mb-1 mb-sm-0\"\n                  (click)=\"uploader.uploadAll()\"\n                  [disabled]=\"!uploader.getNotUploadedItems().length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"upload\" class=\"mr-25\"></span> Upload all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-outline-warning mb-1 mb-sm-0\"\n                  (click)=\"uploader.cancelAll()\"\n                  [disabled]=\"!uploader.isUploading\"\n                  rippleEffect\n                >\n                  <span data-feather=\"slash\" class=\"mr-25\"></span> Cancel all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-danger mb-1 mb-sm-0\"\n                  (click)=\"uploader.clearQueue()\"\n                  [disabled]=\"!uploader.queue.length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"trash\" class=\"mr-25\"></span> Remove all\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!--/ File Uploader -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FileUploaderComponent } from 'app/main/forms/form-elements/file-uploader/file-uploader.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/file-uploader',\n    component: FileUploaderComponent,\n    data: { animation: 'file-uploader' }\n  }\n];\n\n@NgModule({\n  declarations: [FileUploaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FileUploadModule,\n    CoreCommonModule\n  ]\n})\nexport class FileUploaderModule {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FlatpickrOptions } from 'ng2-flatpickr';\n\nimport {\n  basicDateSnippetCode,\n  dateTimeSnippetCode,\n  DefaultDateSnippetCode,\n  DateRangeSnippetCode,\n  timeSnippetCode,\n  customDateSnippetCode,\n  multipleDateSnippetCode\n} from 'app/main/forms/form-elements/flatpickr/flatpickr.snippetcode';\n\n@Component({\n  selector: 'app-flatpickr',\n  templateUrl: './flatpickr.component.html',\n  styleUrls: ['./flatpickr.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FlatpickrComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicDateOptions: FlatpickrOptions = {\n    altInput: true\n  };\n\n  public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  };\n\n  public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  };\n\n  public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  };\n\n  public timeOptions: FlatpickrOptions = {\n    enableTime: true,\n    noCalendar: true,\n    altInput: true\n  };\n\n  public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  };\n\n  public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  };\n\n  // snippet code variables\n  public _basicDateSnippetCode = basicDateSnippetCode;\n  public _dateTimeSnippetCode = dateTimeSnippetCode;\n  public _DefaultDateSnippetCode = DefaultDateSnippetCode;\n  public _DateRangeSnippetCode = DateRangeSnippetCode;\n  public _timeSnippetCode = timeSnippetCode;\n  public _customDateSnippetCode = customDateSnippetCode;\n  public _multipleDateSnippetCode = multipleDateSnippetCode;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Flatpickr',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Flatpickr',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- flatpickr basic & date-time -->\n    <section id=\"basic-and-time\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_basicDateSnippetCode\">\n            <h4 class=\"card-title\">Basic Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ng2-flatpickr</code> component to get basic flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_dateTimeSnippetCode\">\n            <h4 class=\"card-title\">Date & Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true</code> option to make date and time flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr basic & date-time -->\n\n    <!-- flatpickr default-date & date-range  -->\n    <section id=\"default-date-and-range\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DefaultDateSnippetCode\">\n            <h4 class=\"card-title\">Default Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>defaultDate: '2019-03-19'</code> option to get a default date.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DateRangeSnippetCode\">\n            <h4 class=\"card-title\">Date Range</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'range'</code> option to select range of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr default-date & date-range  -->\n\n    <!-- flatpickr time & custom date  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_timeSnippetCode\">\n            <h4 class=\"card-title\">Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true, noCalendar: true</code> option to only get time.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_customDateSnippetCode\">\n            <h4 class=\"card-title\">Custom Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>altInput: true, altFormat: 'j-m-Y'</code> option to customize time\n                <a href=\"https://flatpickr.js.org/formatting/\">format</a>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple & custom date  -->\n\n    <!-- flatpickr multiple  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_multipleDateSnippetCode\">\n            <h4 class=\"card-title\">Multiple Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'multiple'</code> option to select multiple of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FlatpickrComponent } from 'app/main/forms/form-elements/flatpickr/flatpickr.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/flatpickr',\n    component: FlatpickrComponent,\n    data: { animation: 'flatpickr' }\n  }\n];\n\n@NgModule({\n  declarations: [FlatpickrComponent],\n  imports: [RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, Ng2FlatpickrModule]\n})\nexport class FlatpickrModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const basicDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [ngClass]=\"'firstsecond'\" [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>`,\n  ts: `public basicDateOptions: FlatpickrOptions = {\n  altInput: true\n}`\n};\n\nexport const dateTimeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>`,\n  ts: `public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  }`\n};\n\nexport const DefaultDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>`,\n  ts: `public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  }`\n};\n\nexport const DateRangeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>`,\n  ts: `public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  }`\n};\n\nexport const timeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>`,\n  ts: `public   timeOptions: FlatpickrOptions = {\n  enableTime: true,\n  noCalendar: true,\n  altInput: true\n}`\n};\n\nexport const customDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>`,\n  ts: `public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  }`\n};\n\nexport const multipleDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>`,\n  ts: `public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  }`\n};\n","import { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from 'app/main/forms/form-elements/checkbox/checkbox.module';\nimport { DateTimePickerModule } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.module';\nimport { InputGroupsModule } from 'app/main/forms/form-elements/input-groups/input-groups.module';\nimport { InputMaskModule } from 'app/main/forms/form-elements/input-mask/input-mask.module';\nimport { InputModule } from 'app/main/forms/form-elements/input/input.module';\nimport { NumberInputModule } from 'app/main/forms/form-elements/number-input/number-input.module';\nimport { RadioModule } from 'app/main/forms/form-elements/radio/radio.module';\nimport { SelectModule } from 'app/main/forms/form-elements/select/select.module';\nimport { SwitchModule } from 'app/main/forms/form-elements/switch/switch.module';\nimport { TextareaModule } from 'app/main/forms/form-elements/textarea/textarea.module';\nimport { FileUploaderModule } from 'app/main/forms/form-elements/file-uploader/file-uploader.module';\nimport { QuillEditorModule } from 'app/main/forms/form-elements/quill-editor/quill-editor.module';\nimport { FlatpickrModule } from 'app/main/forms/form-elements/flatpickr/flatpickr.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CheckboxModule,\n    DateTimePickerModule,\n    InputModule,\n    InputGroupsModule,\n    NumberInputModule,\n    RadioModule,\n    SelectModule,\n    SwitchModule,\n    TextareaModule,\n    InputMaskModule,\n    FileUploaderModule,\n    QuillEditorModule,\n    FlatpickrModule\n  ]\n})\nexport class FormElementsModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-groups/input-groups.snippetcode';\n\n@Component({\n  selector: 'app-input-groups',\n  templateUrl: './input-groups.component.html'\n})\nexport class InputGroupsComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicPwdShow = false;\n  public mergedPwdShow = false;\n\n  // Snippet Code Variables\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeMerged = snippet.snippetCodeMerged;\n  public _snippetCodeSizing = snippet.snippetCodeSizing;\n  public _snippetCodeCheckBox = snippet.snippetCodeCheckBox;\n  public _snippetCodeButton = snippet.snippetCodeButton;\n  public _snippetCodeDropdown = snippet.snippetCodeDropdown;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Groups',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Groups',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Input Group Basic & Merged Start -->\n    <section id=\"input-group-basic-merged\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search1\"\n                />\n              </div>\n\n              <label for=\"basic-default-password\">Password</label>\n              <div class=\"input-group form-password-toggle mb-2\">\n                <input\n                  [type]=\"basicPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password\"\n                />\n                <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': basicPwdShow,\n                        'icon-eye': !basicPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMerged\">\n            <h4 class=\"card-title\">Merged</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search2\"\n                />\n              </div>\n\n              <label for=\"basic-default-password1\">Password</label>\n              <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n                <input\n                  [type]=\"mergedPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password1\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password1\"\n                />\n                <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': mergedPwdShow,\n                        'icon-eye': !mergedPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon5\"\n                />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon6\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Basic & Merged Ends -->\n\n    <!-- Input Group Sizing & Checkbox and radio addons Start -->\n    <section id=\"input-group-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizing\">\n            <h4 class=\"card-title\">Sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-lg mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group input-group-sm\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCheckBox\">\n            <h4 class=\"card-title\">Checkbox and radio addons</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"checkbox\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"radio\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n                <div class=\"col-md\">\n                  <!-- Custom checkbox -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                            <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <!-- Custom radio -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                            <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Sizing & Checkbox and radio addons Ends -->\n    <!-- Inputs Group with Buttons -->\n    <section id=\"input-group-buttons\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeButton\">\n            <h4 class=\"card-title\">Input Groups with Buttons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after </b>\n                <code>&lt;input&gt;</code>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"Button on right\"\n                      aria-describedby=\"button-addon2\"\n                    />\n                    <div class=\"input-group-append\" id=\"button-addon2\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n                        <i data-feather=\"search\"></i>\n                      </button>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n                    <div class=\"input-group-append\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Buttons end -->\n\n    <!-- Inputs Group with Dropdown -->\n    <section id=\"input-group-dropdown\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDropdown\">\n            <h4 class=\"card-title\">Input Groups with Dropdown</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n                to get input group with dropdown.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n                    </div>\n                  </fieldset>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          <i data-feather=\"edit-2\"></i>\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n                      <div ngbDropdown class=\"input-group-append\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu class=\"dropdown-menu-right\">\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Dropdown end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputGroupsComponent } from 'app/main/forms/form-elements/input-groups/input-groups.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-groups',\n    component: InputGroupsComponent,\n    data: { animation: 'input-groups' }\n  }\n];\n\n@NgModule({\n  declarations: [InputGroupsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CoreCommonModule,\n    CardSnippetModule,\n    FormsModule\n  ]\n})\nexport class InputGroupsModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search1\"\n    />\n  </div>\n\n  <label for=\"basic-default-password\">Password</label>\n  <div class=\"input-group form-password-toggle mb-2\">\n    <input\n      [type]=\"basicPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password\"\n    />\n    <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': basicPwdShow,\n            'icon-eye': !basicPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon2\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public basicPwdShow = false;\n  `\n};\n\nexport const snippetCodeMerged: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search2\"\n    />\n  </div>\n\n  <label for=\"basic-default-password1\">Password</label>\n  <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n    <input\n      [type]=\"mergedPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password1\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password1\"\n    />\n    <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': mergedPwdShow,\n            'icon-eye': !mergedPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon5\"\n    />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon6\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public mergedPwdShow = false;\n  `\n};\n\nexport const snippetCodeSizing: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"input-group input-group-lg mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group input-group-sm\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeCheckBox: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"row\">\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"checkbox\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"radio\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n    <div class=\"col-md\">\n      <!-- Custom checkbox -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <!-- Custom radio -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeButton: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after</b>\n    <code>&lt;input&gt;</code>.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Button on right\"\n          aria-describedby=\"button-addon2\"\n        />\n        <div class=\"input-group-append\" id=\"button-addon2\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n            <i data-feather=\"search\"></i>\n          </button>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeDropdown: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n    to get input group with dropdown.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n        </div>\n      </fieldset>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              <i data-feather=\"edit-2\"></i>\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n          <div ngbDropdown class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\">\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-mask/input-mask.snippetcode';\n\n@Component({\n  selector: 'app-input-mask',\n  templateUrl: './input-mask.component.html'\n})\nexport class InputMaskComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public _snippetCodeCredit = snippet.snippetCodeCredit;\n  public _snippetCodePhone = snippet.snippetCodePhone;\n  public _snippetCodeDate = snippet.snippetCodeDate;\n  public _snippetCodeTime = snippet.snippetCodeTime;\n  public _snippetCodeNumeral = snippet.snippetCodeNumeral;\n  public _snippetCodeSecure = snippet.snippetCodeSecure;\n  public _snippetCodePrefix = snippet.snippetCodePrefix;\n  public _snippetCodeSuffix = snippet.snippetCodeSuffix;\n  public _snippetCodeBlocks = snippet.snippetCodeBlocks;\n  public _snippetCodeDelimiters = snippet.snippetCodeDelimiters;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Mask',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Mask',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <section id=\"credit-phone-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCredit\">\n            <h4 class=\"card-title\">Credit Card</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePhone\">\n            <h4 class=\"card-title\">Phone number</h4>\n            <div class=\"card-body\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"date-time-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDate\">\n            <h4 class=\"card-title\">Date</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTime\">\n            <h4 class=\"card-title\">Time (24 hour format)</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"numeral-secure-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeNumeral\">\n            <h4 class=\"card-title\">Numeral Formatting</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSecure\">\n            <h4 class=\"card-title\">Secure Input</h4>\n            <div class=\"card-body\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"XXX/X9/2032\"\n                [hiddenInput]=\"true\"\n                mask=\"XXX/X0/0000\"\n              />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"prefix-suffix-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePrefix\">\n            <h4 class=\"card-title\">Prefix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSuffix\">\n            <h4 class=\"card-title\">Suffix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"block-delimiters-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBlocks\">\n            <h4 class=\"card-title\">Blocks</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDelimiters\">\n            <h4 class=\"card-title\">Delimiters</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputMaskComponent } from 'app/main/forms/form-elements/input-mask/input-mask.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-mask',\n    component: InputMaskComponent,\n    data: { animation: 'input-mask' }\n  }\n];\n\n@NgModule({\n  declarations: [InputMaskComponent],\n  imports: [\n    CommonModule,\n    CardSnippetModule,\n    ContentHeaderModule,\n    RouterModule.forChild(routes),\n    NgxMaskModule.forRoot()\n  ]\n})\nexport class InputMaskModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeCredit: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n  `\n};\nexport const snippetCodePhone: snippetCode = {\n  html: `\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n  </div>\n  `\n};\nexport const snippetCodeDate: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n  `\n};\nexport const snippetCodeTime: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n  `\n};\nexport const snippetCodeNumeral: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n  `\n};\nexport const snippetCodeSecure: snippetCode = {\n  html: `\n  <input\n  class=\"form-control\"\n  type=\"text\"\n  placeholder=\"XXX/X9/2032\"\n  [hiddenInput]=\"true\"\n  mask=\"XXX/X0/0000\"\n  />\n  `\n};\nexport const snippetCodePrefix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n  `\n};\nexport const snippetCodeSuffix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n  `\n};\nexport const snippetCodeBlocks: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n  `\n};\nexport const snippetCodeDelimiters: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input/input.snippetcode';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicInputs = snippet.snippetCodeBasicInputs;\n  public _snippetCodeSizingOptions = snippet.snippetCodeSizingOptions;\n  public _snippetCodeHorizontalFormLabelSizing = snippet.snippetCodeHorizontalFormLabelSizing;\n  public _snippetCodeFloatingLabelInputs = snippet.snippetCodeFloatingLabelInputs;\n  public _snippetCodeFileInput = snippet.snippetCodeFileInput;\n  public _snippetCodeInputValidationStates = snippet.snippetCodeInputValidationStates;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Inputs start -->\n    <section id=\"basic-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicInputs\">\n            <h4 class=\"card-title\">Basic Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInput\">Basic Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"helpInputTop\">Input text with help</label>\n                    <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n                    <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Disabled Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"helperText\">With Helper Text</label>\n                    <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n                    <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Input</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"readonlyInput\"\n                      readonly=\"readonly\"\n                      value=\"You can't update me :P\"\n                    />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Static Text</label>\n                    <p class=\"form-control-static\" id=\"staticInput\">email@pixinvent.com</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Inputs end -->\n\n    <!-- Input Sizing start -->\n    <section id=\"input-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizingOptions\">\n            <h4 class=\"card-title\">Sizing Options</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    For different sizes of Input, Use classes like <code>.form-control-lg</code> &amp;\n                    <code>.form-control-sm</code> for Large, Small input box.\n                  </p>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Large</label>\n                    <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Default</label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Small</label>\n                    <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontalFormLabelSizing\">\n            <h4 class=\"card-title\">Horizontal form label sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-2\">\n                    Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to your\n                    <code>&lt;label&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly follow the size of\n                    <code>.form-control-lg</code> and <code>.form-control-sm</code>.\n                  </p>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n                    <div class=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control form-control-lg\"\n                        id=\"colFormLabelLg\"\n                        placeholder=\"Large Input\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n                    <div class=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control form-control-sm\"\n                        id=\"colFormLabelSm\"\n                        placeholder=\"Small Input\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Sizing end -->\n\n    <!-- Floating Label Inputs start -->\n    <section id=\"floating-label-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloatingLabelInputs\">\n            <h4 class=\"card-title\">Floating Label Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-1\">\n                  <p class=\"card-text mb-1\">\n                    For Floating Label Inputs, need to use <code>.form-label-group</code> class & add attribute\n                    <code>disabled</code> for disabled Floating Label Input.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n                    <label for=\"floating-label1\">Label-placeholder</label>\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"floating-label-disable\"\n                      placeholder=\"Label-placeholder\"\n                      disabled\n                    />\n                    <label for=\"floating-label-disable\">Disabled-placeholder</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Inputs end -->\n\n    <!-- Basic File Browser start -->\n    <section id=\"input-file-browser\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFileInput\">\n            <h4 class=\"card-title\">File input</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">Simple File Input</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">With Browse button</label>\n                    <div class=\"custom-file\">\n                      <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n                      <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic File Browser end -->\n\n    <!-- validations start -->\n    <section class=\"validations\" id=\"validation\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidationStates\">\n            <h4 class=\"card-title\">Input Validation States</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n                    <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n                    classes.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"valid-state\">Valid State</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control is-valid\"\n                    id=\"valid-state\"\n                    placeholder=\"Valid\"\n                    value=\"Valid\"\n                    required\n                  />\n                  <div class=\"valid-feedback\">This is valid state.</div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"invalid-state\">Invalid State</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control is-invalid\"\n                    id=\"invalid-state\"\n                    placeholder=\"Invalid\"\n                    value=\"Invalid\"\n                    required\n                  />\n                  <div class=\"invalid-feedback\">This is invalid state.</div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- validations end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputComponent } from 'app/main/forms/form-elements/input/input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input',\n    component: InputComponent,\n    data: { animation: 'input' }\n  }\n];\n\n@NgModule({\n  declarations: [InputComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class InputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicInputs: snippetCode = {\n  html: `\n<div class=\"row\">\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"basicInput\">Basic Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"helpInputTop\">Input text with help</label>\n      <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n      <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Disabled Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"helperText\">With Helper Text</label>\n      <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n      <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Input</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"readonlyInput\"\n        readonly=\"readonly\"\n        value=\"You can't update me :P\"\n      />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Static Text</label>\n      <p class=\"form-control-static\" id=\"staticInput\">email@pixinvent.com</p>\n    </div>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeSizingOptions: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"largeInput\">Large</label>\n  <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Default</label>\n  <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Small</label>\n  <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n</div>\n  `\n};\nexport const snippetCodeHorizontalFormLabelSizing: snippetCode = {\n  html: `\n<div class=\"form-group row\">\n  <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-lg\"\n      id=\"colFormLabelLg\"\n      placeholder=\"Large Input\"\n    />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n  <div class=\"col-sm-9\">\n    <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-sm\"\n      id=\"colFormLabelSm\"\n      placeholder=\"Small Input\"\n    />\n  </div>\n</div>\n  `\n};\nexport const snippetCodeFloatingLabelInputs: snippetCode = {\n  html: `\n<div class=\"form-label-group\">\n  <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n  <label for=\"floating-label1\">Label-placeholder</label>\n</div>\n\n<div class=\"form-label-group\">\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    id=\"floating-label-disable\"\n    placeholder=\"Label-placeholder\"\n    disabled\n  />\n  <label for=\"floating-label-disable\">Disabled-placeholder</label>\n</div>\n  `\n};\nexport const snippetCodeFileInput: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">Simple File Input</label>\n  <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n</div>\n\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">With Browse button</label>\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeInputValidationStates: snippetCode = {\n  html: `\n<div class=\"row match-height\">\n  <div class=\"col-12\">\n    <p>\n      You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n      <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n      classes.\n    </p>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"valid-state\">Valid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-valid\"\n      id=\"valid-state\"\n      placeholder=\"Valid\"\n      value=\"Valid\"\n      required\n    />\n    <div class=\"valid-feedback\">This is valid state.</div>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"invalid-state\">Invalid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-invalid\"\n      id=\"invalid-state\"\n      placeholder=\"Invalid\"\n      value=\"Invalid\"\n      required\n    />\n    <div class=\"invalid-feedback\">This is invalid state.</div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/number-input/number-input.snippetcode';\n\n@Component({\n  selector: 'app-number-input',\n  templateUrl: './number-input.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class NumberInputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTouchspin = snippet.snippetCodeTouchspin;\n  public _snippetCodeSize = snippet.snippetCodeSize;\n  public _snippetCodeMinMax = snippet.snippetCodeMinMax;\n  public _snippetCodeStep = snippet.snippetCodeStep;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n\n  public dateValue: number;\n\n  constructor() {}\n\n  /***\n   * On touchspin count change\n   */\n  countChange(value) {\n    // this.dateValue = value;\n    console.log(value);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Number Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Number Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- core TouchSpin Spinners start -->\n    <section id=\"basic-touchspin\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTouchspin\">\n            <h4 class=\"card-title\">Touchspin</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use <code>core-touchspin</code> component to get default touchspin. To disable touchspin use\n                    <code>[disable]=\"true\"</code> & to get touchspin with chevron icon use\n                    <code>[iconChevron]=\"true\"</code>.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin default -->\n                    <core-touchspin [numberValue]=\"50\" (onChange)=\"countChange($event)\"></core-touchspin>\n\n                    <!-- touchspin disabled -->\n                    <core-touchspin [disable]=\"true\"></core-touchspin>\n\n                    <!-- touchspin wih icon chevron  -->\n                    <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Size start -->\n    <section id=\"touchspin-size\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSize\">\n            <h4 class=\"card-title\">Size</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[size]</code> add pass <code>'sm' | 'lg'</code> to get small and large\n                    touchspin respectively. <strong>Default</strong> is Medium size.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin size large -->\n                    <core-touchspin [size]=\"'lg'\"></core-touchspin>\n\n                    <!-- touchspin size default -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin size small -->\n                    <core-touchspin [size]=\"'sm'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Min-max start -->\n    <section id=\"touchspin-min-max\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMax\">\n            <h4 class=\"card-title\">Min - Max</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    Use input property <code>[minValue]</code> & <code>[maxValue]</code> to set lower-limit and\n                    upper-limit of input number respectively.\n                  </p>\n\n                  <!-- touchspin min-max -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Step start -->\n    <section id=\"touchspin-step\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeStep\">\n            <h4 class=\"card-title\">Step</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">Use input property <code>[numberValue]</code> to set value of input number.</p>\n\n                  <!-- touchspin steps -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Colors start -->\n    <section id=\"touchspin-colors\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors Variation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[color]=\"'colorName'\"</code> to get your desired color variation.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin color default primary -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin color success -->\n                    <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n                    <!-- touchspin color warning -->\n                    <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n                    <!-- touchspin color info -->\n                    <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n                    <!-- touchspin color danger -->\n                    <core-touchspin [color]=\"'danger'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Decimal end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreTouchspinModule } from '@core/components/core-touchspin/core-touchspin.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { NumberInputComponent } from 'app/main/forms/form-elements/number-input/number-input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/number-input',\n    component: NumberInputComponent,\n    data: { animation: 'number-input' }\n  }\n];\n\n@NgModule({\n  declarations: [NumberInputComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreTouchspinModule\n  ]\n})\nexport class NumberInputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTouchspin: snippetCode = {\n  html: `\n  <!-- touchspin default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin disabled -->\n  <core-touchspin [disable]=\"true\"></core-touchspin>\n\n  <!-- touchspin wih icon chevron  -->\n  <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n  `\n};\nexport const snippetCodeSize: snippetCode = {\n  html: `\n  <!-- touchspin size small -->\n  <core-touchspin [size]=\"'sm'\"></core-touchspin>\n\n  <!-- touchspin size default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin size large -->\n  <core-touchspin [size]=\"'lg'\"></core-touchspin>\n  `\n};\n\nexport const snippetCodeMinMax: snippetCode = {\n  html: `\n  <!-- touchspin min-max -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n  `\n};\nexport const snippetCodeStep: snippetCode = {\n  html: `\n  <!-- touchspin steps -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <!-- touchspin color default primary -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin color success -->\n  <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n  <!-- touchspin color warning -->\n  <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n  <!-- touchspin color info -->\n  <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n  <!-- touchspin color danger -->\n  <core-touchspin [color]=\"'danger'\"></core-touchspin>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/quill-editor/quill-editor.snippetcode';\n\n@Component({\n  selector: 'app-quill-editor',\n  templateUrl: './quill-editor.component.html',\n  styleUrls: ['./quill-editor.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuillEditorComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // snippet code variables\n  public _snippetCodeSnowEditor = snippet.snippetCodeSnowEditor;\n  public _snippetCodeBubbleEditor = snippet.snippetCodeBubbleEditor;\n  public _snippetCodeFullEditor = snippet.snippetCodeFullEditor;\n  public _quillEditorContent = snippet.quillEditorContent;\n\n  snowEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  bubbleEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n  fullEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Quill Editor',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Quill Editor',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- quill snow  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeSnowEditor\">\n      <h4 class=\"card-title\">Snow Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          By default <strong>Snow Editor</strong> is custom editor. Here we have customized the toolbar with\n          <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor [(ngModel)]=\"snowEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\">\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill snow  -->\n\n    <!-- quill Bubble  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeBubbleEditor\">\n      <h4 class=\"card-title\">Bubble Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          To get <strong>Bubble Editor</strong> use <code>theme=\"bubble\"</code>. Here we have customized the bubble\n          toolbar with <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor\n          theme=\"bubble\"\n          [(ngModel)]=\"bubbleEditorRef\"\n          [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n        >\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Aligment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Bubble  -->\n\n    <!-- quill Full  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeFullEditor\">\n      <h4 class=\"card-title\">Full Editor</h4>\n      <div class=\"card-body\">\n        <quill-editor [(ngModel)]=\"fullEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n          ><div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Full  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuillModule } from 'ngx-quill';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { QuillEditorComponent } from 'app/main/forms/form-elements/quill-editor/quill-editor.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/quill-editor',\n    component: QuillEditorComponent,\n    data: { animation: 'quill-editor' }\n  }\n];\n\n@NgModule({\n  declarations: [QuillEditorComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    ContentHeaderModule,\n    CardSnippetModule,\n    QuillModule.forRoot(),\n    CoreCommonModule\n  ]\n})\nexport class QuillEditorModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeSnowEditor: snippetCode = {\n  html: `\n  <quill-editor  [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Alignment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n      </span>\n    </div>\n\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\n\nexport const snippetCodeBubbleEditor: snippetCode = {\n  html: `\n  <quill-editor theme=\"bubble\" [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Aligment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n    </div>\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const snippetCodeFullEditor: snippetCode = {\n  html: `\n  <quill-editor [(ngModel)]=\"quillEditorContent\"></quill-editor>\n      `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const quillEditorContent: snippetCode = {\n  html: `\n<h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n<p><br></p>\n<p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n  built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n    architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n  completely customizable to fit any need.</p>\n<p><br></p>\n<iframe class=\"ql-video ql-align-center\"\n  src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n<p><br></p>\n<p><br></p>\n<h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n<p><br></p>\n<pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n  // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  var quill = new Quill('#editor', &#123;\n  modules: &#123;\n  toolbar: '#toolbar'\n  &#125;,\n  theme: 'snow'\n  &#125;);\n  // Open your browser's developer console to try out the API!\n</pre>\n<p><br></p>\n<p><br></p>\n<p class=\"ql-align-center\"><strong>Built with</strong></p>\n<p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n    data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n<p><br></p>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/radio/radio.snippetcode';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html'\n})\nexport class RadioComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeRadioBasic = snippet.snippetCodeRadioBasic;\n  public _snippetCodeRadioCustom = snippet.snippetCodeRadioCustom;\n  public _snippetCodeRadioCustomColor = snippet.snippetCodeRadioCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Radio',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Radio',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Radio Basic Start -->\n    <section id=\"radio-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioBasic\">\n            <h4 class=\"card-title\">Basic Radio Buttons</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio1\"\n                    value=\"option1\"\n                    checked\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio2\"\n                    value=\"option2\"\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio3\"\n                    value=\"option3\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio4\"\n                    value=\"option4\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Basic Ends -->\n\n    <!-- Radio Custom Start -->\n    <section id=\"radio-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustom\">\n            <h4 class=\"card-title\">Custom Radio Buttons</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-radio</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n                  <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio3\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio4\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Ends -->\n\n    <!-- Radio Custom Color Start -->\n    <section id=\"radio-custom-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the radio use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio1\"\n                    name=\"customColorRadio1\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio2\"\n                    name=\"customColorRadio2\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio3\"\n                    name=\"customColorRadio3\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio5\"\n                    name=\"customColorRadio5\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio4\"\n                    name=\"customColorRadio4\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-radio\">\n                  <input type=\"radio\" id=\"customRadio6\" name=\"customColorRadio6\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { RadioComponent } from 'app/main/forms/form-elements/radio/radio.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/radio',\n    component: RadioComponent,\n    data: { animation: 'radio' }\n  }\n];\n\n@NgModule({\n  declarations: [RadioComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class RadioModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeRadioBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio1\"\n      value=\"option1\"\n      checked\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio2\"\n      value=\"option2\"\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio3\"\n      value=\"option3\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio4\"\n      value=\"option4\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n    <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n    <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio3\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      checked\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio4\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustomColor: snippetCode = {\n  html: `\n<div class=\"custom-control custom-control-primary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio1\"\n    name=\"customColorRadio1\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n</div>\n\n<div class=\"custom-control custom-control-secondary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio2\"\n    name=\"customColorRadio2\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n</div>\n\n<div class=\"custom-control custom-control-success custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio3\"\n    name=\"customColorRadio3\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n</div>\n\n<div class=\"custom-control custom-control-danger custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio5\"\n    name=\"customColorRadio5\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n</div>\n\n<div class=\"custom-control custom-control-warning custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio4\"\n    name=\"customColorRadio4\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n</div>\n\n<div class=\"custom-control custom-control-info custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customRadio6\"\n    name=\"customColorRadio6\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n</div>\n  `\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { delay, map, tap } from 'rxjs/operators';\n\nexport interface Person {\n  id: string;\n  isActive: boolean;\n  age: number;\n  name: string;\n  gender: string;\n  company: string;\n  email: string;\n  phone: string;\n  disabled?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _gitHubAccountsCache = new Map<string, []>();\n\n  constructor(private http: HttpClient) {}\n\n  getGithubAccounts(term: string = null) {\n    if (this._gitHubAccountsCache.has(term)) {\n      return of(this._gitHubAccountsCache.get(term));\n    }\n\n    if (term) {\n      return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).pipe(\n        map(rsp => rsp.items),\n        tap(data => this._gitHubAccountsCache.set(term, data))\n      );\n    } else {\n      return of([]);\n    }\n  }\n\n  getAlbums() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\n  }\n\n  getPhotos() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\n  }\n\n  getPeople(term: string = null): Observable<Person[]> {\n    let items = getMockPeople();\n    if (term) {\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n    }\n    return of(items).pipe(delay(50));\n  }\n}\n\nfunction getMockPeople() {\n  return [\n    {\n      id: '5a15b13c36e7a7f00cf0d7cb',\n      index: 2,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 23,\n      name: 'Karyn Wright',\n      gender: 'female',\n      company: 'ZOLAR',\n      email: 'karynwright@zolar.com',\n      phone: '+1 (851) 583-2547'\n    },\n    {\n      id: '5a15b13c2340978ec3d2c0ea',\n      index: 3,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 35,\n      name: 'Rochelle Estes',\n      disabled: true,\n      gender: 'female',\n      company: 'EXTRAWEAR',\n      email: 'rochelleestes@extrawear.com',\n      phone: '+1 (849) 408-2029'\n    },\n    {\n      id: '5a15b13c663ea0af9ad0dae8',\n      index: 4,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Mendoza Ruiz',\n      gender: 'male',\n      company: 'ZYTRAX',\n      email: 'mendozaruiz@zytrax.com',\n      phone: '+1 (904) 536-2020'\n    },\n    {\n      id: '5a15b13cc9eeb36511d65acf',\n      index: 5,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 39,\n      name: 'Rosales Russell',\n      gender: 'male',\n      company: 'ELEMANTRA',\n      email: 'rosalesrussell@elemantra.com',\n      phone: '+1 (868) 473-3073'\n    },\n    {\n      id: '5a15b13c728cd3f43cc0fe8a',\n      index: 6,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Marquez Nolan',\n      gender: 'male',\n      company: 'MIRACLIS',\n      disabled: true,\n      email: 'marqueznolan@miraclis.com',\n      phone: '+1 (853) 571-3921'\n    },\n    {\n      id: '5a15b13ca51b0aaf8a99c05a',\n      index: 7,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 28,\n      name: 'Franklin James',\n      gender: 'male',\n      company: 'CAXT',\n      email: 'franklinjames@caxt.com',\n      phone: '+1 (868) 539-2984'\n    },\n    {\n      id: '5a15b13cc3b9381ffcb1d6f7',\n      index: 8,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Elsa Bradley',\n      gender: 'female',\n      company: 'MATRIXITY',\n      email: 'elsabradley@matrixity.com',\n      phone: '+1 (994) 583-3850'\n    },\n    {\n      id: '5a15b13ce58cb6ff62c65164',\n      index: 9,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 40,\n      name: 'Pearson Thompson',\n      gender: 'male',\n      company: 'EZENT',\n      email: 'pearsonthompson@ezent.com',\n      phone: '+1 (917) 537-2178'\n    },\n    {\n      id: '5a15b13c90b95eb68010c86e',\n      index: 10,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Ina Pugh',\n      gender: 'female',\n      company: 'MANTRIX',\n      email: 'inapugh@mantrix.com',\n      phone: '+1 (917) 450-2372'\n    },\n    {\n      id: '5a15b13c2b1746e12788711f',\n      index: 11,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Nguyen Elliott',\n      gender: 'male',\n      company: 'PORTALINE',\n      email: 'nguyenelliott@portaline.com',\n      phone: '+1 (905) 491-3377'\n    },\n    {\n      id: '5a15b13c605403381eec5019',\n      index: 12,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 31,\n      name: 'Mills Barnett',\n      gender: 'male',\n      company: 'FARMEX',\n      email: 'millsbarnett@farmex.com',\n      phone: '+1 (882) 462-3986'\n    },\n    {\n      id: '5a15b13c67e2e6d1a3cd6ca5',\n      index: 13,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 36,\n      name: 'Margaret Reynolds',\n      gender: 'female',\n      company: 'ROOFORIA',\n      email: 'margaretreynolds@rooforia.com',\n      phone: '+1 (935) 435-2345'\n    },\n    {\n      id: '5a15b13c947c836d177aa85c',\n      index: 14,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 29,\n      name: 'Yvette Navarro',\n      gender: 'female',\n      company: 'KINETICA',\n      email: 'yvettenavarro@kinetica.com',\n      phone: '+1 (807) 485-3824'\n    },\n    {\n      id: '5a15b13c5dbbe61245c1fb73',\n      index: 15,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 20,\n      name: 'Elisa Guzman',\n      gender: 'female',\n      company: 'KAGE',\n      email: 'elisaguzman@kage.com',\n      phone: '+1 (868) 594-2919'\n    },\n    {\n      id: '5a15b13c38fd49fefea8db80',\n      index: 16,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 33,\n      name: 'Jodie Bowman',\n      gender: 'female',\n      company: 'EMTRAC',\n      email: 'jodiebowman@emtrac.com',\n      phone: '+1 (891) 565-2560'\n    },\n    {\n      id: '5a15b13c9680913c470eb8fd',\n      index: 17,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Diann Booker',\n      gender: 'female',\n      company: 'LYRIA',\n      email: 'diannbooker@lyria.com',\n      phone: '+1 (830) 555-3209'\n    }\n  ];\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Bootstrap Select start -->\n    <section class=\"bootstrap-select\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <!-- Basic Select -->\n              <div class=\"form-group\">\n                <label for=\"basicSelect\">Basic Select</label>\n                <select class=\"form-control\" id=\"basicSelect\">\n                  <option>IT</option>\n                  <option>Blade Runner</option>\n                  <option>Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Custom Select -->\n              <div class=\"form-group\">\n                <label for=\"customSelect\">Custom Select</label>\n                <select class=\"custom-select\" id=\"customSelect\">\n                  <option selected>Open this menu</option>\n                  <option value=\"IT\">IT</option>\n                  <option value=\"Blade Runner\">Blade Runner</option>\n                  <option value=\"Thor Ragnarok\">Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Disabled Select -->\n              <div class=\"form-group\">\n                <label for=\"disabledSelect\">Disabled Select</label>\n                <select class=\"form-control\" disabled=\"disabled\" id=\"disabledSelect\">\n                  <option>Green</option>\n                  <option>Red</option>\n                  <option>Blue</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select Sizing</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <label for=\"selectLarge\">Select Large</label>\n                <select class=\"form-control form-control-lg mb-1\" id=\"selectLarge\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectDefault\">Default</label>\n                <select class=\"form-control mb-1\" id=\"selectDefault\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectSmall\">Select Small</label>\n                <select class=\"form-control form-control-sm\" id=\"selectSmall\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Multi Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <!-- Multiple Select -->\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"normalMultiSelect\">Multiple Select</label>\n                    <select class=\"form-control\" id=\"normalMultiSelect\" multiple=\"multiple\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectMulti\">Custom Multiple Select</label>\n                    <select class=\"custom-select\" id=\"customSelectMulti\" multiple>\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectSize\">Custom Select Size</label>\n                    <select class=\"custom-select\" id=\"customSelectSize\" size=\"4\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Bootstrap Select end -->\n\n    <!-- Basic Select start -->\n    <section class=\"basic-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Ng-Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-2\">\n                  <a href=\"https://github.com/ng-select/ng-select\" target=\"_blank\"\n                    >For more information on ng-select.</a\n                  >\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Select with Search</label>\n                  <div class=\"form-group\">\n                    <!-- Basic Select with Search -->\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    <!--/ Basic Select with Search -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Group by item</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Group by item -->\n                    <ng-select\n                      [items]=\"selectGroup\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                      groupBy=\"country\"\n                      [(ngModel)]=\"selectGroupselected\"\n                    >\n                      <ng-template ng-optgroup-tmp let-item=\"item\">\n                        {{ item.country || 'Unnamed group' }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n                    <small>Selected: {{ selectGroupselected | json }}</small>\n                    <!--/ Select Group by item -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select With Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select With Icon -->\n                    <ng-select [items]=\"selectIcon\" [(ngModel)]=\"selectIconSelected\" bindLabel=\"name\" bindValue=\"name\">\n                      <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\n                        <i [class]=\"item.icon\"></i>\n                        {{ item.name }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select With Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select with custom Option</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select with custom Option -->\n                    <ng-select\n                      [items]=\"selectIcon\"\n                      [(ngModel)]=\"selectCustomSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n                        <div *ngIf=\"item.name === 'Firefox'\">{{ item.name }}</div>\n                        <div style=\"margin: 10px 0\" class=\"card\" *ngIf=\"item.name !== 'Safari'\">\n                          <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ item.name }}</h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n                            <p class=\"card-text\">\n                              <i [class]=\"item.icon\"></i>\n                              Some quick example text to build\n                            </p>\n                            <div *ngIf=\"item.name === 'Opera'\">\n                              <a href=\"#\" class=\"card-link\">Card link</a>\n                              <a href=\"#\" class=\"card-link\">Another link</a>\n                            </div>\n                          </div>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select with custom Option -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Select end -->\n\n    <!-- Multiple Select start -->\n    <section class=\"multiple-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multiple Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Multi select</label>\n\n                  <div class=\"form-group\">\n                    <!-- Basic Multi select -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Basic Multi select -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Group</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with group -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      groupBy=\"gender\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiGroupSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi with group -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Add custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Add custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select tag\"\n                      [(ngModel)]=\"SelectTag\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Add custom Tag -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"selectAddTagMethod\"\n                      [hideSelected]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"customTagselected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n\n                    <br />\n                    Selected value: {{ customTagselected | json }}\n                    <!--/ Select Custom Tag -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Multiple Select end -->\n\n    <!-- Select Advance Options start -->\n    <section class=\"select-advance\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Advance Options</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with Icon -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      [(ngModel)]=\"multiIconGithubUsersSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"\n                          ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                        >\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n\n                      <ng-template ng-option-tmp let-item=\"item\">\n                        <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi with Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi Custom</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi Custom -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      placeholder=\"Select items\"\n                      [(ngModel)]=\"multiCustomGithubUsersSelected\"\n                    >\n                      <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                        <div class=\"ng-value\" *ngFor=\"let item of items | slice: 0:2\">\n                          <span class=\"ng-value-label\"\n                            ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                          >\n                          <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                        </div>\n                        <div class=\"ng-value\" *ngIf=\"items.length > 2\">\n                          <span class=\"ng-value-label\">{{ items.length - 2 }} more...</span>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi Custom -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Multi select with limited number of selections</label>\n\n                  <div class=\"form-group\">\n                    <!-- Multi select with limited number of selections -->\n                    <ngb-alert\n                      [type]=\"'warning'\"\n                      [dismissible]=\"false\"\n                      class=\"mb-2\"\n                      *ngIf=\"selectMultiLimitedSelected.length === 3\"\n                    >\n                      <div class=\"alert-body\">\n                        <small>Max selection reached</small>\n                      </div>\n                    </ngb-alert>\n\n                    <ng-select\n                      #selectMultiLimited\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [maxSelectedItems]=\"3\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"selectMultiLimitedSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n\n                    <div class=\"mt-1\">\n                      Selected value: <br />\n                      <ul>\n                        <li *ngFor=\"let item of selectMultiLimitedSelected\">{{ item.name }}</li>\n                      </ul>\n                      <button (click)=\"multiLimitedClearModel()\" class=\"btn btn-secondary btn-sm\" rippleEffect>\n                        Clear model\n                      </button>\n                    </div>\n                    <!-- Multi select with limited number of selections -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom header footer template</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom header footer template -->\n                    <ng-select\n                      [multiple]=\"true\"\n                      [items]=\"selectCustomHeaderFooter\"\n                      [(ngModel)]=\"selectCustomHeaderFooterSelected\"\n                      placeholder=\"Select people\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                      <ng-template ng-header-tmp>\n                        <button\n                          (click)=\"customHeaderFooterSelectAll()\"\n                          class=\"btn btn-sm btn-secondary mr-1\"\n                          rippleEffect\n                        >\n                          Select all\n                        </button>\n                        <button (click)=\"customHeaderFooterUnselectAll()\" class=\"btn btn-sm btn-secondary\" rippleEffect>\n                          Unselect all\n                        </button>\n                      </ng-template>\n                      <ng-template ng-footer-tmp>\n                        Selected count: {{ selectCustomHeaderFooterSelected.length }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n\n                    Selected people: {{ selectCustomHeaderFooterSelected }}\n                    <!--/ Select Custom header footer template -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <!-- Button trigger modal -->\n                  <button\n                    type=\"button\"\n                    (click)=\"modalSelectOpen(modalSelect)\"\n                    class=\"btn btn-outline-primary btn-block\"\n                    rippleEffect\n                  >\n                    Ng-Select in Modal\n                  </button>\n\n                  <!-- Modal -->\n                  <ng-template #modalSelect let-modal>\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel1\">ng-select in Modal</h4>\n                      <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                      <p>This is <code>ng-select</code> example in Modal.</p>\n                      <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('Accept click')\" rippleEffect>\n                        Accept\n                      </button>\n                    </div>\n                  </ng-template>\n                  <!-- / Modal -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Advance Options end -->\n\n    <!-- Select Sizing start -->\n    <section class=\"select-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- select size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      #SelectSizeLarge\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeLargeSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeLarge.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ select size large -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size default -->\n                    <ng-select\n                      #SelectSizeDefault\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeDefaultSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeDefault.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ Select Size default -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      #SelectSizeSmall\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeSmallSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeSmall.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multi Select Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      [items]=\"MultiLarge | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiLargeSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size large -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size default -->\n                    <ng-select\n                      [items]=\"MultiDefault | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiDefaultSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size default -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      [items]=\"MultiSmall | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiSmallSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Sizing end -->\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs';\n\nimport { Person, DataService } from 'app/main/forms/form-elements/select/data.service';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // select basic\n  public selectBasic: Person[] = [];\n  public selectBasicLoading = false;\n\n  // select group\n  public selectGroupselected = 'Adam';\n  public selectGroup = [\n    {\n      name: 'Adam',\n      country: 'United States'\n    },\n    {\n      name: 'Homer',\n      country: ''\n    },\n    {\n      name: 'Samantha',\n      country: 'United States'\n    },\n    {\n      name: 'Amalie',\n      country: 'Argentina'\n    },\n    {\n      name: 'Estefanía',\n      country: 'Argentina'\n    },\n    {\n      name: 'Adrian',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Wladimir',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Natasha',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Nicole',\n      country: 'Colombia'\n    },\n    {\n      name: 'Michael',\n      country: 'Colombia'\n    },\n    {\n      name: 'Nicolás',\n      country: 'Colombia'\n    }\n  ];\n\n  // select icon\n  public selectIcon = [\n    {\n      id: 1,\n      name: 'Chrome',\n      icon: 'fa fa-chrome'\n    },\n    {\n      id: 2,\n      name: 'Firefox',\n      icon: 'fa fa-firefox'\n    },\n    {\n      id: 3,\n      name: 'Safari',\n      icon: 'fa fa-safari'\n    },\n    {\n      id: 4,\n      name: 'Opera',\n      icon: 'fa fa-opera'\n    }\n  ];\n  public selectIconSelected = this.selectIcon[0].name;\n\n  // select custom option\n  public selectCustomSelected = this.selectIcon[0].name;\n\n  // select tag\n  public SelectTag;\n\n  // Select Custom Tag\n  public customTagselected;\n  public customTag: any[] = [];\n  public customTagNames = ['Uber', 'Microsoft', 'Flexigen'];\n\n  // select Basic Multi\n  public selectMulti: Observable<any[]>;\n  public selectMultiSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with group\n  public selectMultiGroupSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with Icon\n  public multiIconGithubUsers: Observable<any[]>;\n  public multiIconGithubUsersSelected = ['anjmao'];\n\n  // Select Multi Custom\n  public multiCustomGithubUsersSelected = ['anjmao'];\n\n  // select with limited number of selections\n  public selectMultiLimitedSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Custom header footer template\n  public selectCustomHeaderFooter = [];\n  public selectCustomHeaderFooterSelected = [];\n\n  // select size\n  public SelectSizeLargeSelected = 'Adam';\n  public SelectSizeDefaultSelected = 'Adam';\n  public SelectSizeSmallSelected = 'Adam';\n\n  // multiple sizes\n  public MultiLarge: Observable<any[]>;\n  public MultiLargeSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiDefault: Observable<any[]>;\n  public MultiDefaultSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiSmall: Observable<any[]>;\n  public MultiSmallSelected = [{ name: 'Karyn Wright' }];\n\n  /**\n   * Constructor\n   *\n   * @param {DataService} dataService\n   * @param {NgbModal} modalService\n   */\n  constructor(private dataService: DataService, private modalService: NgbModal) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  // select basic\n  private selectBasicMethod() {\n    this.selectBasicLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.selectBasic = x;\n      this.selectBasicLoading = false;\n    });\n  }\n\n  // select multi limited selections\n  multiLimitedClearModel() {\n    this.selectMultiLimitedSelected = [];\n  }\n\n  /**\n   * Select Custom Tag\n   *\n   * @param name\n   */\n  selectAddTagMethod(name) {\n    return { name: name, tag: true };\n  }\n\n  customHeaderFooterSelectAll() {\n    this.selectCustomHeaderFooterSelected = this.selectCustomHeaderFooter.map(x => x.name);\n  }\n\n  customHeaderFooterUnselectAll() {\n    this.selectCustomHeaderFooterSelected = [];\n  }\n\n  // ng-select in model\n  modalSelectOpen(modalSelect) {\n    this.modalService.open(modalSelect, {\n      windowClass: 'modal'\n    });\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this.selectBasicMethod();\n\n    this.selectMulti = this.dataService.getPeople();\n\n    this.customTagNames.forEach((c, i) => {\n      this.customTag.push({ id: i, name: c });\n    });\n\n    this.multiIconGithubUsers = this.dataService.getGithubAccounts('anjm');\n\n    this.dataService.getPeople().subscribe(items => {\n      this.selectCustomHeaderFooter = items;\n    });\n\n    // multiple sizes\n    this.MultiLarge = this.dataService.getPeople();\n    this.MultiDefault = this.dataService.getPeople();\n    this.MultiSmall = this.dataService.getPeople();\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Select',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Select',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SelectComponent } from 'app/main/forms/form-elements/select/select.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/select',\n    component: SelectComponent,\n    data: { animation: 'select' }\n  }\n];\n\n@NgModule({\n  declarations: [SelectComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    NgSelectModule\n  ]\n})\nexport class SelectModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/switch/switch.snippetcode';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html'\n})\nexport class SwitchComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Switch',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Switch',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Switches Starts -->\n    <section id=\"basic-switches\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Switch</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">use class <code>.switch-label</code> to add a label to switch.</p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n                </div>\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Switches Ends -->\n\n    <!-- Switch Colors Starts -->\n    <section id=\"switch-colors\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.custom-control-&#123;$color-name&#125;</code> with <code>.custom-switch</code> to\n                change switch's color\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-switch\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-switch\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-switch\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-switch\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-switch\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n                </div>\n                <div class=\"custom-control custom-control-dark custom-switch\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Colors Ends -->\n\n    <!-- Switch Icons Starts -->\n    <section id=\"switch-icons\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Icons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.switch-icon-left & .switch-icon-right</code> inside of\n                <code>.custom-control-label</code> to create a switch with icon.\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch10\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-secondary\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch11\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-success\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch111\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-danger\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch12\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-warning\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch14\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-info\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch13\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-dark\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch15\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Icons Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SwitchComponent } from 'app/main/forms/form-elements/switch/switch.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/switch',\n    component: SwitchComponent,\n    data: { animation: 'switch' }\n  }\n];\n\n@NgModule({\n  declarations: [SwitchComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreCommonModule\n  ]\n})\nexport class SwitchModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n    <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n    <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n  </div>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n    <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n  </div>\n  \n  <div class=\"custom-control custom-control-secondary custom-switch\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n    <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-switch\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n    <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-switch\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n    <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-switch\">\n    <p class=\"mb-50\">Warning</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n    <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-switch\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n    <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-dark custom-switch\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n    <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n  </div>\n\n  `\n};\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch10\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-secondary\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch11\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-success\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch111\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-danger\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch12\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-warning\">\n  <p class=\"mb-50\">Warning</p>\n  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n  <label class=\"custom-control-label\" for=\"customSwitch14\">\n    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n  </label>\n</div>\n\n  <div class=\"custom-control custom-switch custom-switch-info\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch13\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-dark\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch15\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\nimport * as snippet from 'app/main/forms/form-elements/textarea/textarea.snippetcode';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html'\n})\nexport class TextareaComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeDefault = snippet.snippetCodeDefault;\n  public _snippetCodeFloating = snippet.snippetCodeFloating;\n  public _snippetCodeCounter = snippet.snippetCodeCounter;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Textarea',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Textarea',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Textarea start -->\n    <section class=\"basic-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDefault\">\n            <h4 class=\"card-title\">Default</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">To add a Textarea we have the component <code>textarea</code>.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <label for=\"basicTextarea\">Textarea</label>\n                  <fieldset class=\"form-group\">\n                    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Textarea end -->\n\n    <!-- Floating Label Textarea start -->\n    <section class=\"floating-label-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloating\">\n            <h4 class=\"card-title\">Floating Label</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">Use <code>.form-label-group</code> to add a Floating Label with Textarea.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group\">\n                    <textarea\n                      class=\"form-control\"\n                      id=\"label-textarea\"\n                      rows=\"3\"\n                      placeholder=\"Label in Textarea\"\n                    ></textarea>\n                    <label for=\"label-textarea\">Label in Textarea</label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Textarea end -->\n\n    <!-- Counter Textarea start -->\n    <section class=\"counter-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCounter\">\n            <h4 class=\"card-title\">Counter</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">\n                There are times when we need the user to only enter a certain number of characters for it, we have the\n                property counter, the value is a number and determines the maximum. Use\n                <code>[maxlength]</code> property with <code>&lt;textarea&gt;</code>tag for limiting text input length.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group mb-0\">\n                    <textarea\n                      [(ngModel)]=\"textLength.value\"\n                      #textLength\n                      [maxlength]=\"20\"\n                      class=\"form-control char-textarea\"\n                      id=\"textarea-counter\"\n                      rows=\"3\"\n                      placeholder=\"Counter\"\n                    ></textarea>\n                    <label for=\"textarea-counter\">Counter</label>\n                  </fieldset>\n                  <small class=\"textarea-counter-value float-right\"\n                    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n                    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n                  </small>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Counter Textarea end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TextareaComponent } from 'app/main/forms/form-elements/textarea/textarea.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/textarea',\n    component: TextareaComponent,\n    data: { animation: 'textarea' }\n  }\n];\n\n@NgModule({\n  declarations: [TextareaComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class TextareaModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeDefault: snippetCode = {\n  html: `\n  <label for=\"basicTextarea\">Textarea</label>\n  <fieldset class=\"form-group\">\n    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n  </fieldset>\n  `\n};\nexport const snippetCodeFloating: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group\">\n    <textarea class=\"form-control\" id=\"label-textarea\" rows=\"3\" placeholder=\"Label in Textarea\"></textarea>\n    <label for=\"label-textarea\">Label in Textarea</label>\n  </fieldset>\n  `\n};\nexport const snippetCodeCounter: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group mb-0\">\n      <textarea [(ngModel)]=\"textLength.value\" #textLength [maxlength]=\"20\"  class=\"form-control char-textarea\" id=\"textarea-counter\" rows=\"3\" placeholder=\"Counter\"></textarea>\n      <label for=\"textarea-counter\">Counter</label>\n  </fieldset>\n  <small class=\"textarea-counter-value float-right\"\n    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n  </small>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-layout/form-layout.snippetcode';\n\n@Component({\n  selector: 'app-form-layout',\n  templateUrl: './form-layout.component.html'\n})\nexport class FormLayoutComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeHorizontal = snippet.snippetCodeHorizontal;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n  public _snippetCodeVertical = snippet.snippetCodeVertical;\n  public _snippetCodeVertiacalIcons = snippet.snippetCodeVertiacalIcons;\n  public _snippetCodeMultiple = snippet.snippetCodeMultiple;\n\n  constructor() {}\n\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Layouts',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Layouts',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Horizontal form layout section start -->\n    <section id=\"basic-horizontal-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontal\">\n            <h4 class=\"card-title\">Horizontal Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"first-name\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-id\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-info\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"number\"\n                          id=\"contact-info\"\n                          class=\"form-control\"\n                          name=\"contact\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"password\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"password\"\n                          id=\"password\"\n                          class=\"form-control\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n                        <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Horizontal Form with Icons</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"fname-icon\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            id=\"fname-icon\"\n                            class=\"form-control\"\n                            name=\"fname-icon\"\n                            placeholder=\"First Name\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-icon\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                          </div>\n                          <input\n                            type=\"email\"\n                            id=\"email-icon\"\n                            class=\"form-control\"\n                            name=\"email-id-icon\"\n                            placeholder=\"Email\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-icon\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                          </div>\n                          <input\n                            type=\"number\"\n                            id=\"contact-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Mobile\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"pass-icon\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                          </div>\n                          <input\n                            type=\"password\"\n                            id=\"pass-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Password\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                        <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Horizontal form layout section end -->\n\n    <!-- Basic Vertical form layout section start -->\n    <section id=\"basic-vertical-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertical\">\n            <h4 class=\"card-title\">Vertical Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-vertical\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-vertical\"\n                        class=\"form-control\"\n                        name=\"fname\"\n                        placeholder=\"First Name\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-vertical\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-vertical\"\n                        class=\"form-control\"\n                        name=\"email-id\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-vertical\">Mobile</label>\n                      <input\n                        type=\"number\"\n                        id=\"contact-info-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Mobile\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-vertical\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n                        <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertiacalIcons\">\n            <h4 class=\"card-title\">Vertical Form with Icons</h4>\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-icon\">First Name</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                        </div>\n                        <input\n                          type=\"text\"\n                          id=\"first-name-icon\"\n                          class=\"form-control\"\n                          name=\"fname-icon\"\n                          placeholder=\"First Name\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-icon\">Email</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                        </div>\n                        <input\n                          type=\"email\"\n                          id=\"email-id-icon\"\n                          class=\"form-control\"\n                          name=\"email-id-icon\"\n                          placeholder=\"Email\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-icon\">Mobile</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          id=\"contact-info-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-icon\">Password</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                        </div>\n                        <input\n                          type=\"password\"\n                          id=\"password-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n                        <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Vertical form layout section end -->\n\n    <!-- / Basic multiple Column Form section start -->\n    <section id=\"multiple-column-form\">\n      <div class=\"row match-height\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMultiple\">\n            <h4 class=\"card-title\">Multiple Column</h4>\n            <div class=\"card-body\">\n              <form class=\"form\">\n                <div class=\"row\">\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-column\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"First Name\"\n                        name=\"fname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"last-name-column\">Last Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"last-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"Last Name\"\n                        name=\"lname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"city-column\">City</label>\n                      <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"country-floating\">Country</label>\n                      <input\n                        type=\"text\"\n                        id=\"country-floating\"\n                        class=\"form-control\"\n                        name=\"country-floating\"\n                        placeholder=\"Country\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"company-column\">Company</label>\n                      <input\n                        type=\"text\"\n                        id=\"company-column\"\n                        class=\"form-control\"\n                        name=\"company-column\"\n                        placeholder=\"Company\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-column\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-column\"\n                        class=\"form-control\"\n                        name=\"email-id-column\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic multiple Column Form section end -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormLayoutComponent } from 'app/main/forms/form-layout/form-layout.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-layout',\n    component: FormLayoutComponent,\n    data: { animation: 'layout' }\n  }\n];\n\n@NgModule({\n  declarations: [FormLayoutComponent],\n  imports: [RouterModule.forChild(routes), ContentHeaderModule, CardSnippetModule, FormsModule, CoreCommonModule]\n})\nexport class FormLayoutModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeHorizontal: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"number\"\n            id=\"contact-info\"\n            class=\"form-control\"\n            name=\"contact\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n          <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"fname-icon\"\n              class=\"form-control\"\n              name=\"fname-icon\"\n              placeholder=\"First Name\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n            </div>\n            <input\n              type=\"email\"\n              id=\"email-icon\"\n              class=\"form-control\"\n              name=\"email-id-icon\"\n              placeholder=\"Email\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"contact-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Mobile\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n            </div>\n            <input\n              type=\"password\"\n              id=\"pass-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Password\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n          <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertical: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-vertical\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-vertical\"\n          class=\"form-control\"\n          name=\"fname\"\n          placeholder=\"First Name\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-vertical\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-vertical\"\n          class=\"form-control\"\n          name=\"email-id\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-vertical\">Mobile</label>\n        <input\n          type=\"number\"\n          id=\"contact-info-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Mobile\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-vertical\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Password\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n          <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertiacalIcons: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-icon\">First Name</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n          </div>\n          <input\n            type=\"text\"\n            id=\"first-name-icon\"\n            class=\"form-control\"\n            name=\"fname-icon\"\n            placeholder=\"First Name\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-icon\">Email</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n          </div>\n          <input\n            type=\"email\"\n            id=\"email-id-icon\"\n            class=\"form-control\"\n            name=\"email-id-icon\"\n            placeholder=\"Email\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-icon\">Mobile</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n          </div>\n          <input\n            type=\"number\"\n            id=\"contact-info-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-icon\">Password</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n          </div>\n          <input\n            type=\"password\"\n            id=\"password-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n          <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\nexport const snippetCodeMultiple: snippetCode = {\n  html: `\n<form class=\"form\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-column\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-column\"\n          class=\"form-control\"\n          placeholder=\"First Name\"\n          name=\"fname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"last-name-column\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"last-name-column\"\n          class=\"form-control\"\n          placeholder=\"Last Name\"\n          name=\"lname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"city-column\">City</label>\n        <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"country-floating\">Country</label>\n        <input\n          type=\"text\"\n          id=\"country-floating\"\n          class=\"form-control\"\n          name=\"country-floating\"\n          placeholder=\"Country\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"company-column\">Company</label>\n        <input\n          type=\"text\"\n          id=\"company-column\"\n          class=\"form-control\"\n          name=\"company-column\"\n          placeholder=\"Company\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-column\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-column\"\n          class=\"form-control\"\n          name=\"email-id-column\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const repeaterAnimation = trigger('heightIn', [\n  transition(':enter', [\n    style({ opacity: '0', height: '0px' }),\n    animate('.2s ease-out', style({ opacity: '1', height: '*' }))\n  ])\n]);\n","import { Component, OnInit } from '@angular/core';\n\nimport { repeaterAnimation } from 'app/main/forms/form-repeater/form-repeater.animation';\n\nimport * as snippet from 'app/main/forms/form-repeater/form-repeater.snippetcode';\n\n@Component({\n  selector: 'app-form-repeater',\n  templateUrl: './form-repeater.component.html',\n  animations: [repeaterAnimation]\n})\nexport class FormRepeaterComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // snippet code variable\n  public _snippetCodeInvoiceRepeater = snippet.snippetCodeInvoiceRepeater;\n\n  constructor() {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Reports',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Reports',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <section class=\"form-control-repeater\">\n      <div class=\"row\">\n        <!-- Invoice repeater -->\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInvoiceRepeater\">\n            <h4 class=\"card-title\">Form Repeater</h4>\n            <div class=\"card-body\">\n              <form action=\"#\" class=\"invoice-repeater\">\n                <div *ngFor=\"let item of items; let i = index\" @heightIn>\n                  <div class=\"row d-flex align-items-end\">\n                    <div class=\"col-md-4 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemName{{ i }}\">Item Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          [(ngModel)]=\"item.itemName\"\n                          name=\"itemName{{ i }}\"\n                          id=\"itemName{{ i }}\"\n                          placeholder=\"Vuexy Admin Template\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemCost\">Cost</label>\n                        <input\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"itemcost\"\n                          [(ngModel)]=\"item.itemCost\"\n                          name=\"itemCost{{ i }}\"\n                          id=\"itemCost{{ i }}\"\n                          placeholder=\"32\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemQuantity{{ i }}\">Quantity</label>\n                        <input\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"itemQuantity{{ i }}\"\n                          name=\"itemQuantity{{ i }}\"\n                          [(ngModel)]=\"item.itemQuantity\"\n                          placeholder=\"1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"staticPrice\">Price</label>\n                        <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12 mb-50\">\n                      <div class=\"form-group\">\n                        <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n                          <i data-feather=\"x\" class=\"mr-25\"></i>\n                          <span>Delete</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              </form>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n                    <i data-feather=\"plus\" class=\"mr-25\"></i>\n                    <span>Add New</span>\n                  </button>\n                </div>\n              </div>\n              <pre class=\"p-1 text-white mt-1\">\n                <div  *ngFor=\"let item of items; let i = index\">\n    Index: {{ i }}\n    Item Name: {{ item.itemName }}\n    Cost: {{ item.itemCost }}\n    Quantity: {{ item.itemQuantity }}</div>\n              </pre>\n            </div>\n          </core-card-snippet>\n        </div>\n        <!--/ Invoice repeater -->\n      </div>\n    </section>\n\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreCommonModule } from '@core/common.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { FormRepeaterComponent } from 'app/main/forms/form-repeater/form-repeater.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-repeater',\n    component: FormRepeaterComponent,\n    data: { animation: 'repeater' }\n  }\n];\n\n@NgModule({\n  declarations: [FormRepeaterComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), CardSnippetModule, FormsModule, CoreCommonModule, ContentHeaderModule]\n})\nexport class FormRepeaterModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeInvoiceRepeater: snippetCode = {\n  html: `\n  <form action=\"#\" class=\"invoice-repeater\">\n  <div *ngFor=\"let item of items; let i = index\" @heightIn>\n    <div class=\"row d-flex align-items-end\">\n      <div class=\"col-md-4 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemName{{ i }}\">Item Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [(ngModel)]=\"item.itemName\"\n            name=\"itemName{{ i }}\"\n            id=\"itemName{{ i }}\"\n            placeholder=\"Vuexy Admin Template\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemCost\">Cost</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemcost\"\n            [(ngModel)]=\"item.itemCost\"\n            name=\"itemCost{{ i }}\"\n            id=\"itemCost{{ i }}\"\n            placeholder=\"32\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemQuantity{{ i }}\">Quantity</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemQuantity{{ i }}\"\n            name=\"itemQuantity{{ i }}\"\n            [(ngModel)]=\"item.itemQuantity\"\n            placeholder=\"1\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"staticPrice\">Price</label>\n          <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12 mb-50\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n            <i data-feather=\"x\" class=\"mr-25\"></i>\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <hr />\n  </div>\n</form>\n<div class=\"row\">\n  <div class=\"col-12\">\n    <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n      <i data-feather=\"plus\" class=\"mr-25\"></i>\n      <span>Add New</span>\n    </button>\n  </div>\n</div>\n<pre class=\"p-1 text-white mt-1\">\n  <div  *ngFor=\"let item of items; let i = index\">\nIndex: {{ i }}\nItem Name: {{ item.itemName }}\nCost: {{ item.itemCost }}\nQuantity: {{ item.itemQuantity }}</div>\n</pre>\n`,\n  ts: `\n  // public\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n`\n};\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport * as snippet from 'app/main/forms/form-validation/form-validation.snippetcode';\nimport { MustMatch } from './_helpers/must-match.validator';\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html'\n})\nexport class FormValidationComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTDsimpleValidation = snippet.snippetCodeTDsimpleValidation;\n  public _snippetCodeTDMultiRuleValidation = snippet.snippetCodeTDMultiRuleValidation;\n  public _snippetCodeInputValidation = snippet.snippetCodeInputValidation;\n  public _snippetCodeReactiveForms = snippet.snippetCodeReactiveForms;\n\n  public TDNameVar;\n  public TDEmailVar;\n\n  public ReactiveUserDetailsForm: FormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n    console.log(this.ReactiveUserDetailsForm.value);\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.ReactiveUserDetailsForm.value));\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Validation',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Validation',\n            isLink: false\n          }\n        ]\n      }\n    };\n\n    // Reactive form initialization\n    this.ReactiveUserDetailsForm = this.formBuilder.group(\n      {\n        userName: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confPassword: ['', [Validators.required, Validators.minLength(6)]],\n        country: ['', [Validators.required]],\n        language: ['', [Validators.required]],\n        age: ['', [Validators.required]],\n        phoneNumber: ['', [Validators.required]]\n      },\n      {\n        validator: MustMatch('password', 'confPassword')\n      }\n    );\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <div class=\"row\">\n      <div class=\"col-12 mt-1 mb-1\">\n        <h4 class=\"text-uppercase\">Template Driven Form Validation</h4>\n        <p>\n          Template driven forms are forms where we write\n          <strong>logic, validations, controls etc, in html code</strong>. Template driven forms are suitable for simple\n          scenarios, uses two way data binding using the <code>[(NgModel)]</code> syntax.\n        </p>\n      </div>\n    </div>\n    <!-- Template Driven Simple Validation -->\n    <section id=\"simple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDsimpleValidation\">\n            <h4 class=\"card-title\">Simple Form Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDSimpleForm.form.valid)\" #TDSimpleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDNameRef.invalid\"\n                        [(ngModel)]=\"TDNameVar\"\n                        #TDNameRef=\"ngModel\"\n                        required\n                        id=\"TDName\"\n                        name=\"TDName\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDEmailRef.invalid\"\n                        [(ngModel)]=\"TDEmailVar\"\n                        #TDEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDEmail\"\n                        name=\"TDEmail\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDEmailRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n\n              <pre class=\"p-1 text-white mt-1\">\nUsername: {{ TDNameVar }}\n\nEmail: {{ TDEmailVar }}\n            </pre\n              >\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Simple Validation -->\n    <!-- Template Driven Multiple Rules Validation -->\n    <section id=\"multiple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDMultiRuleValidation\">\n            <h4 class=\"card-title\">Validating Multiple Rules</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDMultiRuleForm.form.valid)\" #TDMultiRuleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\"\n                        ngModel\n                        #TDMultiRuleNameRef=\"ngModel\"\n                        required\n                        id=\"TDMultiRuleName\"\n                        name=\"TDMultiRuleName\"\n                        type=\"text\"\n                        placeholder=\"Your Name\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                        ngModel\n                        #TDMultiRuleEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDMultiRuleEmail\"\n                        name=\"TDMultiRuleEmail\"\n                        type=\"text\"\n                        placeholder=\"Your Email\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDMultiRulePassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDMultiRulePasswordRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                        id=\"TDMultiRulePassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n                      <input\n                        type=\"password\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDMultiRuleConfPassword\"\n                        placeholder=\"Confirm Password\"\n                        class=\"form-control\"\n                        required\n                        ngModel\n                        #TDMultiRuleConfPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n                        id=\"TDMultiRuleConfPassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\">\n                          Confirm password is required.\n                        </small>\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Multiple Rules Validation -->\n    <!-- Template Driven Input Validation -->\n    <section class=\"input-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidation\">\n            <h4 class=\"card-title\">Inputs Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDRequiredFieldRef=\"ngModel\"\n                        required\n                        id=\"TDRequiredField\"\n                        name=\"TDRequiredField\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        >This field is required!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDNumberOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[0-9]+\"\n                        id=\"TDNumberOnly\"\n                        name=\"TDNumberOnly\"\n                        type=\"text\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The numeric field may only contain numeric characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDAlphabetOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[a-zA-Z]+$\"\n                        id=\"TDAlphabetOnly\"\n                        name=\"TDAlphabetOnly\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The alphabetic field may only contain alphabet characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDPasswordOnly\"\n                        class=\"form-control\"\n                        [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        id=\"TDPasswordOnly\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDPasswordOnlyRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                      />\n                      <div\n                        *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n                      <input\n                        type=\"password\"\n                        id=\"TDRepeatPassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDRepeatPassword\"\n                        placeholder=\"Confirm Password\"\n                        required\n                        ngModel\n                        #TDRepeatPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      />\n                      <div\n                        *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n                      <input\n                        type=\"email\"\n                        id=\"TDValidEmail\"\n                        name=\"TDValidEmail\"\n                        class=\"form-control\"\n                        [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        required\n                        #TDValidEmailRef=\"ngModel\"\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        placeholder=\"Email\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid email!</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDNumBtwTenTwenty\"\n                        id=\"TDNumBtwTenTwenty\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"\\b([1][0-9]|2[0])\\b\"\n                        min=\"10\"\n                        max=\"20\"\n                        required\n                        placeholder=\"Enter Number between 10 & 20\"\n                        ngModel\n                        #TDNumBtwTenTwentyRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        >Enter Number between 10 & 20!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRegex\"\n                        >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDRegex\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^([0-9]+)$\"\n                        id=\"TDRegex\"\n                        placeholder=\"Enter specified regular expression\"\n                        required\n                        ngModel\n                        #TDRegexRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        >The regex field format is invalid!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n                        >Length should not be less than the specified length : 3</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDLengthLessThree\"\n                        id=\"TDLengthLessThree\"\n                        class=\"form-control\"\n                        [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        minlength=\"3\"\n                        placeholder=\"Enter minimum 3 characters\"\n                        ngModel\n                        required\n                        #TDLengthLessThreeRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        >The min field must be at least 3 characters!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n                        >The digits field must be numeric and exactly contain 3 digits</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDNumThreeDigit\"\n                        id=\"TDNumThreeDigit\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"[1-9][0-9]{0,2}\"\n                        maxlength=\"3\"\n                        minlength=\"3\"\n                        placeholder=\"Enter Exactly 3 digits\"\n                        ngModel\n                        required\n                        #TDNumThreeDigitRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        >The digits field must be numeric and exactly contain 3 digits!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDCharNumDU\"\n                        >Only alphabetic characters, numbers, dashes or underscores</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDCharNumDU\"\n                        id=\"TDCharNumDU\"\n                        class=\"form-control\"\n                        [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^[-a-zA-Z_\\d]+$\"\n                        placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n                        required\n                        ngModel\n                        #TDCharNumDURef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        >Must Enter Character, Number, Dash or Uderscore!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDUrl\"\n                        id=\"TDUrl\"\n                        class=\"form-control\"\n                        [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n                        placeholder=\"Enter valid url\"\n                        required\n                        ngModel\n                        #TDUrlRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid url!</small\n                      >\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Input Validation -->\n    <section id=\"reactive-forms\">\n      <div class=\"row\">\n        <div class=\"col-12 mt-1 mb-1\">\n          <h4 class=\"text-uppercase\">Reactive Form Validation</h4>\n          <p>\n            Reactive forms provide a model-driven approach to handling form inputs whose values change over time.\n            Validate form values, and create dynamic forms where you can add or remove controls at run time.\n          </p>\n          <p>\n            Reactive forms are more robust: they’re more scalable, reusable, and testable. If forms are a key part of\n            your application, use reactive forms\n          </p>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeReactiveForms\">\n            <h4 class=\"card-title\">User Details Form with Validation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n                    <h6 class=\"mb-2\">1. Account Details</h6>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDUserName\">Username</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDUserName\"\n                            formControlName=\"userName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDEmail\">Email</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDEmail\"\n                            formControlName=\"email\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.email.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPassword\">Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDPassword\"\n                            formControlName=\"password\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.password.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.password.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">\n                              Password must be at least 6 characters\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDConfPassword\">Confirm Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDConfPassword\"\n                            formControlName=\"confPassword\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">\n                              Confirm Password must be at least 6 characters\n                            </div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.mustMatch\">Passwords must match</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <h6 class=\"mb-2\">2. Personal Info</h6>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDFirstName\">First Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDFirstName\"\n                            formControlName=\"firstName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLastName\">Last Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDLastName\"\n                            formControlName=\"lastName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDCountry\">Country</label>\n                          <select\n                            id=\"UDCountry\"\n                            formControlName=\"country\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.country.errors }\"\n                          >\n                            <option value=\"USA\">USA</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Russia\">Russia</option>\n                            <option value=\"UK\">UK</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.country.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLanguage\">Language</label>\n                          <select\n                            id=\"UDLanguage\"\n                            formControlName=\"language\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.language.errors }\"\n                          >\n                            <option selected value=\"English\">English</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"French\">French</option>\n                            <option value=\"Portuguese\">Portuguese</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.language.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDAge\">Age</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDAge\"\n                            formControlName=\"age\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.age.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPhoneNumber\">Phone Number</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDPhoneNumber\"\n                            formControlName=\"phoneNumber\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <div class=\"form-group\">\n                          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormValidationComponent } from 'app/main/forms/form-validation/form-validation.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-validation',\n    component: FormValidationComponent,\n    data: { animation: 'validation' }\n  }\n];\n\n@NgModule({\n  declarations: [FormValidationComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FormValidationModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTDsimpleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDSimpleForm.form.valid\" #TDSimpleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDNameRef=\"ngModel\" required id=\"TDName\" name=\"TDName\"\n            type=\"text\" placeholder=\"Name\">\n          <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDEmailRef=\"ngModel\" required email id=\"TDEmail\"\n            name=\"TDEmail\" type=\"text\" placeholder=\"Email\">\n          <span *ngIf=\"TDSimpleForm.submitted\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeTDMultiRuleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDMultiRuleForm.form.valid\" #TDMultiRuleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleNameRef=\"ngModel\" required\n            id=\"TDMultiRuleName\" name=\"TDMultiRuleName\" type=\"text\" placeholder=\"Your Name\">\n          <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleEmailRef=\"ngModel\" required email\n            id=\"TDMultiRuleEmail\" name=\"TDMultiRuleEmail\" type=\"text\" placeholder=\"Your Email\">\n          <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n          <input type=\"password\" name=\"TDMultiRulePassword\" class=\"form-control\" placeholder=\"Your Password\"\n            ngModel #TDMultiRulePasswordRef=\"ngModel\" required minlength=\"6\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" id=\"TDMultiRulePassword\">\n          <div *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\"> Must contain at least one number and one\n              uppercase and\n              lowercase letter, and at least 8 or more characters.</small>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" minlength=\"6\"\n            name=\"TDMultiRuleConfPassword\" placeholder=\"Confirm Password\" class=\"form-control\" required ngModel\n            #TDMultiRuleConfPasswordRef=\"ngModel\" pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n            id=\"TDMultiRuleConfPassword\">\n          <div *ngIf=\" TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\"> Confirm password is required. </small>\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\"> Password & Confirm Password does not\n              match.</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeInputValidation: snippetCode = {\n  html: `\n<form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDRequiredFieldRef=\"ngModel\"\n          required\n          id=\"TDRequiredField\"\n          name=\"TDRequiredField\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          >This field is required!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDNumberOnlyRef=\"ngModel\"\n          required\n          pattern=\"[0-9]+\"\n          id=\"TDNumberOnly\"\n          name=\"TDNumberOnly\"\n          type=\"text\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          >The numeric field may only contain numeric characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDAlphabetOnlyRef=\"ngModel\"\n          required\n          pattern=\"[a-zA-Z]+$\"\n          id=\"TDAlphabetOnly\"\n          name=\"TDAlphabetOnly\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          >The alphabetic field may only contain alphabet characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n        <input\n          type=\"password\"\n          name=\"TDPasswordOnly\"\n          class=\"form-control\"\n          [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          id=\"TDPasswordOnly\"\n          placeholder=\"Your Password\"\n          ngModel\n          #TDPasswordOnlyRef=\"ngModel\"\n          required\n          minlength=\"6\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n        />\n        <div\n          *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n          <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n            Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n            more characters.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n        <input\n          type=\"password\"\n          id=\"TDRepeatPassword\"\n          class=\"form-control\"\n          [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          placeholder=\"Confirm Password\"\n          minlength=\"6\"\n          name=\"TDRepeatPassword\"\n          placeholder=\"Confirm Password\"\n          required\n          ngModel\n          #TDRepeatPasswordRef=\"ngModel\"\n          pattern=\"{{ TDPasswordOnlyRef.value }}\"\n        />\n        <div\n          *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n          <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n            Password & Confirm Password does not match.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n        <input\n          type=\"email\"\n          id=\"TDValidEmail\"\n          name=\"TDValidEmail\"\n          class=\"form-control\"\n          [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          required\n          #TDValidEmailRef=\"ngModel\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          placeholder=\"Email\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid email!</small\n        >\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n        <input\n          type=\"text\"\n          name=\"TDNumBtwTenTwenty\"\n          id=\"TDNumBtwTenTwenty\"\n          class=\"form-control\"\n          [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          min=\"10\"\n          max=\"20\"\n          required\n          placeholder=\"Enter Number between 10 & 20\"\n          ngModel\n          #TDNumBtwTenTwentyRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          >Enter Number between 10 & 20!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRegex\"\n          >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDRegex\"\n          class=\"form-control\"\n          [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^([0-9]+)$\"\n          id=\"TDRegex\"\n          placeholder=\"Enter specified regular expression\"\n          required\n          ngModel\n          #TDRegexRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          >The regex field format is invalid!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n          >Length should not be less than the specified length : 3</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDLengthLessThree\"\n          id=\"TDLengthLessThree\"\n          class=\"form-control\"\n          [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          minlength=\"3\"\n          placeholder=\"Enter minimum 3 characters\"\n          ngModel\n          required\n          #TDLengthLessThreeRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          >The min field must be at least 3 characters!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n          >The digits field must be numeric and exactly contain 3 digits</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDNumThreeDigit\"\n          id=\"TDNumThreeDigit\"\n          class=\"form-control\"\n          [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          maxlength=\"3\"\n          minlength=\"3\"\n          placeholder=\"Enter Exactly 3 digits\"\n          ngModel\n          required\n          #TDNumThreeDigitRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          >The digits field must be numeric and exactly contain 3 digits!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDCharNumDU\"\n          >Only alphabetic characters, numbers, dashes or underscores</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDCharNumDU\"\n          id=\"TDCharNumDU\"\n          class=\"form-control\"\n          [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          pattern=\"^[-a-zA-Z_\\d]+$\"\n          placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n          required\n          ngModel\n          #TDCharNumDURef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          >Must Enter Character, Number, Dash or Uderscore!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n        <input\n          type=\"text\"\n          name=\"TDUrl\"\n          id=\"TDUrl\"\n          class=\"form-control\"\n          [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n          placeholder=\"Enter valid url\"\n          required\n          ngModel\n          #TDUrlRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid url!</small\n        >\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n</form>\n  `\n};\nexport const snippetCodeReactiveForms: snippetCode = {\n  html: `\n  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n    <h6 class=\"mb-2\">1. Account Details</h6>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDUserName\">Username</label>\n          <input type=\"text\" id=\"UDUserName\" [(ngModel)]=\"UDForm.userName\" formControlName=\"userName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.userName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.userName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDEmail\">Email</label>\n          <input type=\"text\" id=\"UDEmail\" formControlName=\"email\" [(ngModel)]=\"UDForm.email\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.email.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPassword\">Password</label>\n          <input type=\"password\" id=\"UDPassword\" formControlName=\"password\" [(ngModel)]=\"UDForm.password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.password.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDConfPassword\">Confirm Password</label>\n          <input type=\"password\" id=\"UDConfPassword\" formControlName=\"confPassword\"\n            [(ngModel)]=\"UDForm.confPassword\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.confPassword.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.confPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">Confirm Password must be at least 6\n              characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <h6 class=\"mb-2\">2. Personal Info</h6>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDFirstName\">First Name</label>\n          <input type=\"text\" id=\"UDFirstName\" [(ngModel)]=\"UDForm.firstName\" formControlName=\"firstName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.firstName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLastName\">Last Name</label>\n          <input type=\"text\" id=\"UDLastName\" formControlName=\"lastName\" [(ngModel)]=\"UDForm.lastName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.lastName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDCountry\">Country</label>\n          <select id=\"UDCountry\" formControlName=\"country\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.country.errors }\">\n            <option value=\"USA\">USA</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"Russia\">Russia</option>\n            <option value=\"UK\">UK</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.country.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLanguage\">Language</label>\n          <select id=\"UDLanguage\" formControlName=\"language\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.language.errors }\">\n            <option selected value=\"English\">English</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"French\">French</option>\n            <option value=\"Portuguese\">Portuguese</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.language.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDAge\">Age</label>\n          <input type=\"number\" id=\"UDAge\" formControlName=\"age\" [(ngModel)]=\"UDForm.age\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.age.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPhoneNumber\">Phone Number</label>\n          <input type=\"text\" id=\"UDPhoneNumber\" formControlName=\"phoneNumber\"\n            [(ngModel)]=\"UDForm.phoneNumber\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.phoneNumber.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.phoneNumber.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n        </div>\n      </div>\n    </div>\n  </form>\n  `,\n  ts: `\n  public ReactiveUserDetailsForm: FormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)');\n  }\n\n  // Reactive form initialization\n  this.ReactiveUserDetailsForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confPassword: ['', [Validators.required, Validators.minLength(6)]],\n    country: ['', [Validators.required]],\n    language: ['', [Validators.required]],\n    age: ['', [Validators.required]],\n    phoneNumber: ['', [Validators.required]]\n  });\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormWizardComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public TDNameVar;\n  public TDEmailVar;\n  public TDFirstNameVar;\n  public TDLastNameVar;\n  public twitterVar;\n  public facebookVar;\n  public googleVar;\n  public linkedinVar;\n  public landmarkVar;\n  public addressVar;\n\n  public selectBasic = [\n    { name: 'UK' },\n    { name: 'USA' },\n    { name: 'Spain' },\n    { name: 'France' },\n    { name: 'Italy' },\n    { name: 'Australia' }\n  ];\n\n  public selectMulti = [{ name: 'English' }, { name: 'French' }, { name: 'Spanish' }];\n  public selectMultiSelected;\n\n  // private\n  private horizontalWizardStepper: Stepper;\n  private verticalWizardStepper: Stepper;\n  private modernWizardStepper: Stepper;\n  private modernVerticalWizardStepper: Stepper;\n  private bsStepper;\n\n  /**\n   * Horizontal Wizard Stepper Next\n   *\n   * @param data\n   */\n  horizontalWizardStepperNext(data) {\n    if (data.form.valid === true) {\n      this.horizontalWizardStepper.next();\n    }\n  }\n  /**\n   * Horizontal Wizard Stepper Previous\n   */\n  horizontalWizardStepperPrevious() {\n    this.horizontalWizardStepper.previous();\n  }\n\n  /**\n   * Vertical Wizard Stepper Next\n   */\n  verticalWizardNext() {\n    this.verticalWizardStepper.next();\n  }\n  /**\n   * Vertical Wizard Stepper Previous\n   */\n  verticalWizardPrevious() {\n    this.verticalWizardStepper.previous();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Next\n   */\n  modernHorizontalNext() {\n    this.modernWizardStepper.next();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Previous\n   */\n  modernHorizontalPrevious() {\n    this.modernWizardStepper.previous();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Next\n   */\n  modernVerticalNext() {\n    this.modernVerticalWizardStepper.next();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Previous\n   */\n  modernVerticalPrevious() {\n    this.modernVerticalWizardStepper.previous();\n  }\n\n  /**\n   * On Submit\n   */\n  onSubmit() {\n    alert('Submitted!!');\n    return false;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On Init\n   */\n  ngOnInit() {\n    this.horizontalWizardStepper = new Stepper(document.querySelector('#stepper1'), {});\n\n    this.verticalWizardStepper = new Stepper(document.querySelector('#stepper2'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernWizardStepper = new Stepper(document.querySelector('#stepper3'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernVerticalWizardStepper = new Stepper(document.querySelector('#stepper4'), {\n      linear: false,\n      animation: true\n    });\n\n    this.bsStepper = document.querySelectorAll('.bs-stepper');\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Wizard',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Wizard',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- Horizontal Wizard -->\n    <section class=\"horizontal-wizard\">\n      <div id=\"stepper1\" class=\"bs-stepper horizontal-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#personal-info\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#address\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#social-links\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <form (ngSubmit)=\"(HWForm.form.valid)\" #HWForm=\"ngForm\">\n            <div id=\"account-details\" class=\"content\">\n              <form #accountDetailsForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Account Details</h5>\n                  <small class=\"text-muted\">Enter Your Account Details.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"username\">Username</label>\n                    <input\n                      [(ngModel)]=\"TDNameVar\"\n                      #TDNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDNameRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"johndoe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"email\">Email</label>\n                    <input\n                      [(ngModel)]=\"TDEmailVar\"\n                      #TDEmailRef=\"ngModel\"\n                      required\n                      email\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDEmailRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"john.doe@email.com\"\n                      aria-label=\"john.doe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">Email must be valid!</small>\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDPasswordOnlyRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      ngModel\n                      #TDPasswordOnlyRef=\"ngModel\"\n                      required\n                      minlength=\"6\"\n                      pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                    />\n                    <div\n                      *ngIf=\"TDPasswordOnlyRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> Password is required. </small>\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                        Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more\n                        characters.</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"confirm-password\">Confirm Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"confirm-password\"\n                      id=\"confirm-password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDRepeatPasswordRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      required\n                      ngModel\n                      #TDRepeatPasswordRef=\"ngModel\"\n                      pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      minlength=\"6\"\n                    />\n                    <div\n                      *ngIf=\"TDRepeatPasswordRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                        Password & Confirm Password does not match.</small\n                      >\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-outline-secondary btn-prev\"\n                    disabled\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(accountDetailsForm)\"\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"personal-info\" class=\"content\">\n              <form #personalInfoForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Personal Info</h5>\n                  <small>Enter Your Personal Info.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"first-name\">First Name</label>\n                    <input\n                      [(ngModel)]=\"TDFirstNameVar\"\n                      #TDFirstNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"first-name\"\n                      id=\"first-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDFirstNameRef.invalid\"\n                      placeholder=\"John\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDFirstNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDFirstNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"last-name\">Last Name</label>\n                    <input\n                      [(ngModel)]=\"TDLastNameVar\"\n                      #TDLastNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"last-name\"\n                      id=\"last-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDLastNameRef.invalid\"\n                      placeholder=\"Doe\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDLastNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDLastNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"country\">Country</label>\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"language\">Language</label>\n                    <ng-select\n                      [items]=\"selectMulti\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      name=\"selectLanguage\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(personalInfoForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"address\" class=\"content\">\n              <form #addressForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Address</h5>\n                  <small>Enter Your Address.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"address\">Address</label>\n                    <input\n                      [(ngModel)]=\"addressVar\"\n                      #addressRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"address\"\n                      name=\"address\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && addressRef.invalid\"\n                      placeholder=\"98  Borough bridge Road, Birmingham\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && addressRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"addressRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"landmark\">Landmark</label>\n                    <input\n                      [(ngModel)]=\"landmarkVar\"\n                      #landmarkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"landmark\"\n                      id=\"landmark\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && landmarkRef.invalid\"\n                      placeholder=\"Borough bridge\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && landmarkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"landmarkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"pincode1\">Pincode</label>\n                    <input type=\"text\" id=\"pincode1\" class=\"form-control\" placeholder=\"658921\" />\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"city1\">City</label>\n                    <input type=\"text\" id=\"city1\" class=\"form-control\" placeholder=\"Birmingham\" />\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(addressForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"social-links\" class=\"content\">\n              <form #socialLinkForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Social Links</h5>\n                  <small>Enter Your Social Links.</small>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"twitter\">Twitter</label>\n                    <input\n                      [(ngModel)]=\"twitterVar\"\n                      #twitterkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"twitter\"\n                      name=\"twitter\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && twitterkRef.invalid\"\n                      placeholder=\"https://twitter.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && twitterkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"twitterkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"facebook\">Facebook</label>\n                    <input\n                      [(ngModel)]=\"facebookVar\"\n                      #facebookRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"facebook\"\n                      name=\"facebook\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && facebookRef.invalid\"\n                      placeholder=\"https://facebook.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && facebookRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"facebookRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"google\">Google+</label>\n                    <input\n                      [(ngModel)]=\"googleVar\"\n                      #googleRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"google\"\n                      name=\"google\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && googleRef.invalid\"\n                      placeholder=\"https://plus.google.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && googleRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"googleRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"linkedin\">Linkedin</label>\n                    <input\n                      [(ngModel)]=\"linkedinVar\"\n                      #linkedinRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"linkedin\"\n                      name=\"linkedin\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && linkedinRef.invalid\"\n                      placeholder=\"https://linkedin.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && linkedinRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"linkedinRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n                </div>\n              </form>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n    <!--/ Horizontal Wizard -->\n\n    <!-- Vertical Wizard -->\n    <section class=\"vertical-wizard\">\n      <div id=\"stepper2\" class=\"bs-stepper vertical vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">4</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-username\">Username</label>\n                <input type=\"text\" id=\"vertical-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode2\">Pincode</label>\n                <input type=\"text\" id=\"pincode2\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city2\">City</label>\n                <input type=\"text\" id=\"city2\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-twitter\">Twitter</label>\n                <input type=\"text\" id=\"vertical-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-facebook\">Facebook</label>\n                <input type=\"text\" id=\"vertical-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"vertical-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Vertical Wizard -->\n\n    <!-- Modern Horizontal Wizard -->\n    <section class=\"modern-horizontal-wizard\">\n      <div id=\"stepper3\" class=\"bs-stepper wizard-modern modern-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-username\">Username</label>\n                <input type=\"text\" id=\"modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode3\">Pincode</label>\n                <input type=\"text\" id=\"pincode3\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city3\">City</label>\n                <input type=\"text\" id=\"city3\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-twitter\">Twitter</label>\n                <input type=\"text\" id=\"modern-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-facebook\">Facebook</label>\n                <input type=\"text\" id=\"modern-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-google\">Google+</label>\n                <input type=\"text\" id=\"modern-google\" class=\"form-control\" placeholder=\"https://plus.google.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"modern-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Horizontal Wizard -->\n\n    <!-- Modern Vertical Wizard -->\n    <section class=\"modern-vertical-wizard\">\n      <div id=\"stepper4\" class=\"bs-stepper vertical wizard-modern modern-vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-username\">Username</label>\n                <input type=\"text\" id=\"vertical-modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode4\">Pincode</label>\n                <input type=\"text\" id=\"pincode4\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city4\">City</label>\n                <input type=\"text\" id=\"city4\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-twitter\">Twitter</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-twitter\"\n                  class=\"form-control\"\n                  placeholder=\"https://twitter.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-facebook\">Facebook</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-facebook\"\n                  class=\"form-control\"\n                  placeholder=\"https://facebook.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-linkedin\">Linkedin</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-linkedin\"\n                  class=\"form-control\"\n                  placeholder=\"https://linkedin.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Vertical Wizard -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\n\nimport { FormWizardComponent } from 'app/main/forms/form-wizard/form-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-wizard',\n    component: FormWizardComponent,\n    data: { animation: 'wizard' }\n  }\n];\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreDirectivesModule,\n    NgSelectModule\n  ]\n})\nexport class FormWizardModule {}\n","import { NgModule } from '@angular/core';\n\nimport { FormRepeaterModule } from 'app/main/forms/form-repeater/form-repeater.module';\nimport { FormElementsModule } from 'app/main/forms/form-elements/form-elements.module';\nimport { FormLayoutModule } from 'app/main/forms/form-layout/form-layout.module';\nimport { FormValidationModule } from 'app/main/forms/form-validation/form-validation.module';\nimport { FormWizardModule } from 'app/main/forms/form-wizard/form-wizard.module';\n\n@NgModule({\n  declarations: [],\n  imports: [FormElementsModule, FormLayoutModule, FormWizardModule, FormValidationModule, FormRepeaterModule]\n})\nexport class FormsModule {}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n"],"names":["global","factory","exports","module","define","amd","self","Stepper","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","matches","window","Element","closest","element","selector","WinEvent","inType","params","Event","createCustomEvent","eventName","cEvent","CustomEvent","polyfill","msMatchesSelector","webkitMatchesSelector","document","documentElement","contains","parentElement","parentNode","nodeType","e","createEvent","initEvent","Boolean","bubbles","cancelable","originPreventDefault","preventDefault","evt","detail","initCustomEvent","defineProperty","get","MILLISECONDS_MULTIPLIER","ClassName","ACTIVE","LINEAR","BLOCK","NONE","FADE","VERTICAL","transitionEndEvent","customProperty","show","stepperNode","indexStep","options","done","stepper","_steps","classList","_stepsContents","showEvent","from","_currentIndex","to","dispatchEvent","activeStep","filter","step","activeContent","content","defaultPrevented","remove","animation","showStep","showContent","stepList","forEach","trigger","querySelector","selectors","setAttribute","add","currentTrigger","removeAttribute","contentList","toIndex","indexOf","shownEvent","complete","removeEventListener","duration","getTransitionDurationFromElement","addEventListener","emulateTransitionEnd","transitionDuration","getComputedStyle","floatTransitionDuration","parseFloat","split","called","durationPadding","emulatedDuration","listener","setTimeout","detectAnimation","buildClickStepLinearListener","clickStepLinearListener","event","buildClickStepNonLinearListener","clickStepNonLinearListener","steps","stepIndex","DEFAULT_OPTIONS","linear","_options","_this","_element","slice","querySelectorAll","hasAttribute","push","getAttribute","_setLinkListeners","value","writable","_proto","_this2","_clickStepLinearListener","_clickStepNonLinearListener","next","_this3","nextStep","previous","_this4","previousStep","stepNumber","_this5","tempIndex","reset","_this6","destroy","_this7","undefined","EventEmitter","Directive","ElementRef","Input","Output","HostListener","NgModule","CommonModule","ɵngcc0","isElement","node","nodeName","prop","attr","find","FileLikeObject","fileOrInput","rawFile","isInput","fakePathOrObject","postfix","method","path","lastModifiedDate","size","type","lastIndexOf","toLowerCase","name","object","FileItem","uploader","some","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","uploadItem","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","_nextIndex","_xhr","_form","FileType","mimeClass","mime_psd","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","extension","isFile","File","Headers","FileUploaderOptions","allowedMimeType","allowedFileType","autoUpload","isHTML5","filters","authToken","maxFileSize","queueLimit","disableMultipart","authTokenHeader","additionalParameter","parametersBeforeFiles","formatDataFunction","formatDataFunctionIsAsync","FileUploader","queue","item","setOptions","unshift","fn","_queueLimitFilter","_fileSizeFilter","_fileTypeFilter","_mimeTypeFilter","files","list","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","abort","items","getNotUploadedItems","upload","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","keys","paramVal","replace","onprogress","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","every","parsed","val","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","ɵfac","FileSelectDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","hostBindings","FileSelectDirective_HostBindings","rf","ctx","ɵɵlistener","FileSelectDirective_change_HostBindingHandler","onChange","inputs","outputs","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","FileDropDirective","fileOver","onFileDrop","transfer","_getTransfer","_preventAndStop","_haveFiles","dropEffect","currentTarget","dataTransfer","originalEvent","stopPropagation","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","onDrop","FileDropDirective_dragover_HostBindingHandler","onDragOver","FileDropDirective_dragleave_HostBindingHandler","onDragLeave","FileUploadModule","FileUploadModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","ngJitMode","ɵɵsetNgModuleScope","InjectionToken","Injectable","Inject","Renderer2","forwardRef","Pipe","__awaiter","NG_VALUE_ACCESSOR","NG_VALIDATORS","DOCUMENT","config","NEW_CONFIG","INITIAL_CONFIG","initialConfig","suffix","prefix","thousandSeparator","decimalMarker","clearIfNotMatch","showTemplate","showMaskTyped","placeHolderCharacter","dropSpecialCharacters","hiddenInput","shownMaskExpression","separatorLimit","allowNegativeNumbers","validation","specialCharacters","leadZeroDateTime","patterns","pattern","RegExp","optional","X","symbol","A","S","d","m","M","H","h","s","timeMasks","withoutValidation","MaskApplierService","_config","maskExpression","actualValue","_formatWithSeparators","str","thousandSeparatorChar","decimalChar","precision","x","decimals","res","rgx","test","substr","percentage","Number","getPrecision","Infinity","checkAndRemoveSuffix","inputValue","_a","_b","_c","includes","checkInputPrecision","precisionRegEx","_charToRegExpExpression","precisionMatch","diff","substring","endsWith","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","maskAndPattern","mask","customPattern","applyMask","position","justPasted","backspaced","cb","cursor","multi","backspaceShift","shift","stepBack","inputArray","toString","ipError","arr","cpfCnpjError","startsWith","_stripToDecimal","base","thousandSeperatorCharEscaped","decimalMarkerEscaped","invalidChars","invalidCharRegexp","strForSep","commaShift","shiftStep","clear","inputSymbol","_checkSymbolMask","_shiftStep","daysCount","monthsCount","withoutDays","day1monthInput","day2monthInput","day1monthPaste","day2monthPaste","_findSpecialChar","newPosition","has","actualShift","onlySpecial","char","maskSymbol","idx","join","charsToEscape","inputLength","MaskApplierService_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","decorators","MaskService","_elementRef","_renderer","isNumberValue","maskIsShown","selStart","selEnd","writingValue","maskChanged","_","showMaskInInput","formControlResult","getSymbol","newInputValue","actualResult","shiftTypedSymbols","getActualValue","hideInput","resLen","prefNmask","countSkipedSymbol","_numberSkipedSymbols","regex","exec","formElement","activeElement","clearIfNotMatchFn","curr","compare","symbolToReplace","currSymbol","replaceSymbol","inputVal","Error","_checkForIp","_checkForCpfCnpj","formElementProperty","Promise","resolve","setProperty","chars","_removeMask","_removeSuffix","_removePrefix","concat","cpf","cnpj","_toNumber","_checkSymbols","num","isNaN","specialCharactersForRemove","_regExpForRemove","separatorPrecision","_retrieveSeparatorPrecision","separatorValue","_retrieveSeparatorValue","_checkPrecision","maskExpretion","matcher","separatorExpression","toFixed","MaskService_Factory","MaskDirective","_maskService","_maskValue","_position","_maskExpressionArray","_justPasted","onTouch","changes","currentValue","previousValue","firstChange","a","b","c","_applyMask","_createValidationError","_validateTime","counterOfOpt","opt","checkSpecialCharAmount","el","_inputValue","_setMask","selectionStart","caretShift","applyValueChanges","_code","_backspaceShift","positionToApply","_getActualInputLength","setSelectionRange","posStart","posEnd","selectionEnd","keyCode","focus","nextValue","code","suffixCheckOnPressDelete","cursorStart","readOnly","ctrlKey","metaKey","setDisabledState","disable","String","isDisabled","maskExp","reduce","accum","currval","_start","_end","repeatNumber","replaceWith","_repeatPatternSymbols","rowMaskLen","requiredMask","removeMask","MaskDirective_Factory","MaskDirective_HostBindings","MaskDirective_paste_HostBindingHandler","onPaste","MaskDirective_input_HostBindingHandler","onInput","MaskDirective_blur_HostBindingHandler","onBlur","MaskDirective_click_HostBindingHandler","onFocus","MaskDirective_keydown_HostBindingHandler","onKeyDown","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","providers","MaskPipe","applyMaskWithPattern","MaskPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","NgxMaskModule","configValue","ngModule","useValue","useFactory","_configFactory","deps","NgxMaskModule_Factory","initConfig","Function","commonjsGlobal","globalThis","KeyboardEvent","_eventType","_init","snippet","CheckboxComponent","snippetCodeBasic","snippetCodeCustom","snippetCodeCustomColor","contentHeader","headerTitle","actionButton","breadcrumb","links","isLink","link","decls","vars","consts","template","i0","FormsModule","RouterModule","NgbModule","CardSnippetModule","ContentHeaderModule","routes","component","data","CheckboxModule","forChild","i1","html","NgbDatepickerI18n","I18n","CustomDatepickerI18n","DatePickerI18nComponent","useClass","_r0","CoreCommonModule","DatePickerI18nModule","I18N_VALUES","fr","weekdays","months","_i18n","weekday","language","month","getMonthShortName","date","day","year","FormControl","ctx_r16","_r3","focused_r23","selected_r21","date_r19","disabled_r22","ctx_r11","DateTimePickerComponent","calendar","formatter","snippetCodeBasicDP","snippetCodeDisabledDP","snippetCodeMinMaxDP","snippetCodeCustomFooterDP","snippetCodeI18n","snippetCodeCustomDay","snippetCodeRangeSelectionDP","snippetCodeBasicTP","snippetCodeMeridianTP","snippetCodeCustomTP","snippetCodeSpinnerTP","snippetCodeCustomValidationTP","snippetCodei18nTP","getToday","hour","minute","second","control","tooEarly","tooLate","getWeekday","fromDate","toDate","getNext","after","hoveredDate","before","equals","isInside","isHovered","meridianTP","customTPseconds","spinnerTP","_r1","_r2","_r6","_r9","_r4","_r7","_r10","ReactiveFormsModule","TimePickerI18nModule","DateTimePickerModule","ts","TimePickerI18nComponent","NgbTimepickerI18n","CustomTimepickerI18n","periods","item_r1","URL","FileUploaderComponent","hasBaseDropZoneOver","hasAnotherDropZoneOver","FileUploaderModule","basicDateSnippetCode","dateTimeSnippetCode","DefaultDateSnippetCode","DateRangeSnippetCode","timeSnippetCode","customDateSnippetCode","multipleDateSnippetCode","FlatpickrComponent","altInput","enableTime","defaultDate","mode","noCalendar","altFormat","Ng2FlatpickrModule","FlatpickrModule","InputGroupsModule","InputMaskModule","InputModule","NumberInputModule","RadioModule","SelectModule","SwitchModule","TextareaModule","QuillEditorModule","FormElementsModule","InputGroupsComponent","snippetCodeMerged","snippetCodeSizing","snippetCodeCheckBox","snippetCodeButton","snippetCodeDropdown","InputMaskComponent","snippetCodeCredit","snippetCodePhone","snippetCodeDate","snippetCodeTime","snippetCodeNumeral","snippetCodeSecure","snippetCodePrefix","snippetCodeSuffix","snippetCodeBlocks","snippetCodeDelimiters","forRoot","i2","InputComponent","snippetCodeBasicInputs","snippetCodeSizingOptions","snippetCodeHorizontalFormLabelSizing","snippetCodeFloatingLabelInputs","snippetCodeFileInput","snippetCodeInputValidationStates","NumberInputComponent","snippetCodeTouchspin","snippetCodeSize","snippetCodeMinMax","snippetCodeStep","snippetCodeColors","console","log","CoreTouchspinModule","QuillEditorComponent","snippetCodeSnowEditor","snippetCodeBubbleEditor","snippetCodeFullEditor","quillEditorContent","QuillModule","RadioComponent","snippetCodeRadioBasic","snippetCodeRadioCustom","snippetCodeRadioCustomColor","of","delay","tap","DataService","http","Map","term","_gitHubAccountsCache","pipe","rsp","set","getMockPeople","toLocaleLowerCase","providedIn","id","isActive","picture","age","gender","company","email","phone","disabled","clear_r39","clear_r43","clear_r47","clear_r51","clear_r55","clear_r60","clear_r69","clear_r74","ctx_r77","ctx_r79","modal_r80","ctx_r18","_r19","_r21","_r23","clear_r91","clear_r95","clear_r99","SelectComponent","dataService","modalService","country","icon","selectIcon","selectBasicLoading","getPeople","subscribe","selectBasic","selectMultiLimitedSelected","tag","selectCustomHeaderFooterSelected","selectCustomHeaderFooter","modalSelect","windowClass","selectBasicMethod","selectMulti","customTagNames","customTag","multiIconGithubUsers","getGithubAccounts","MultiLarge","MultiDefault","MultiSmall","NgSelectModule","SwitchComponent","snippetCodeIcons","TextareaComponent","snippetCodeDefault","snippetCodeFloating","snippetCodeCounter","FormLayoutComponent","snippetCodeHorizontal","snippetCodeVertical","snippetCodeVertiacalIcons","snippetCodeMultiple","FormLayoutModule","animate","style","transition","repeaterAnimation","opacity","height","ctx_r8","FormRepeaterComponent","itemId","itemName","itemQuantity","itemCost","snippetCodeInvoiceRepeater","FormRepeaterModule","MustMatch","controlName","matchingControlName","formGroup","controls","matchingControl","errors","mustMatch","setErrors","Validators","FormValidationComponent","formBuilder","snippetCodeTDsimpleValidation","snippetCodeTDMultiRuleValidation","snippetCodeInputValidation","snippetCodeReactiveForms","userName","firstName","lastName","password","confPassword","phoneNumber","ReactiveUserDetailsForm","ReactiveUDFormSubmitted","invalid","alert","group","required","minLength","validator","FormValidationModule","clear_r42","clear_r52","clear_r56","FormWizardComponent","valid","horizontalWizardStepper","verticalWizardStepper","modernWizardStepper","modernVerticalWizardStepper","bsStepper","CoreDirectivesModule","FormWizardModule"],"sourceRoot":"webpack:///"}